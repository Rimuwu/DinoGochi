{
    "en": {
        "language_name": "🇬🇧 English",
        "localization_author": "System Localization",
        "buttons_name": {
            "back": "↪️ Back",
            "enable": "✅ Turn on",
            "disable": "❌ Turn off",
            "confirm": "✅ Confirm",
            "yes": "✅ Yes",
            "no": "❌ No",
            "cancel": "❌ Cancel",
            "refresh": "🔄 Update"
        },
        "commands_name": {
            "start_game": "🍡 Start playing",
            "dino_profile": "🦖 Dinosaur",
            "settings_menu": "🔧 Settings",
            "friends_menu": "👥 Friends",
            "actions_menu": "🕹 Actions",
            "profile_menu": "👁‍🗨 Profile",
            "dino-tavern_menu": "🍺 Dino Tavern",
            "settings": {
                "notification": "❗ Notifications",
                "dino_name": "💬 Rename Dinosaur",
                "inventory": "🎞 Inventory",
                "dino_profile": "🦕 Profile",
                "delete_me": "🗑 Delete your account",
                "settings_page_2": "➡ Page 2"
            },
            "settings2": {
                "my_name": "🎠 Call Me",
                "custom_profile": "🌟 Dinosaur background",
                "lang": "👅 Tongue",
                "dino_talk": "✉ Talking to the Dinosaur",
                "nick": "🎃 Nick",
                "reset_avatar": "🎨 Reset Avatar"
            },
            "profile": {
                "information": "📜 Information",
                "inventory": "🎮 Inventory",
                "rayting": "🎢 Rating",
                "about": "🤖 About the bot",
                "market": "🛒 Market",
                "support": "💸 Support"
            },
            "friends": {
                "add_friend": "➕ Add",
                "friends_list": "📜 List",
                "remove_friend": "➖ Delete",
                "requests": "💌 Enquiries",
                "referal": "❤ Refer a Friend"
            },
            "market": {
                "random": "🛒 Random Items",
                "find": "🔍 Product Finder",
                "seller_profile": "🛒 My Store",
                "bot_market": "🔮 Bot Shop",
                "background_market": "🖼️ Background Menu",
                "search_markets": "🍶 Store Finder"
            },
            "seller_profile": {
                "add_product": "☄ Add a product",
                "my_market": "📜 My Shop",
                "my_products": "🌂 My Products",
                "create_market": "🛍 Create a store"
            },
            "actions": {
                "no_dino": "🧵 You don't have a dinosaur",
                "entertainments": "🎮 Entertainment",
                "stop_game": "❌ Stop the game",
                "feed": "🍣 Feed",
                "journey": "🎋 Journey",
                "events": "🎋 Events",
                "put_to_bed": "🌙 Put to bed",
                "awaken": "🌙 Awaken",
                "collecting": "🍕 Gathering food",
                "progress": "🍕 Progress",
                "dino_button": "🦖 Dinosaur:"
            },
            "dino_tavern": {
                "dungeon": "🗻 Dungeons",
                "edit": "♻ Transformation",
                "quests": "⛓ Quests",
                "daily_award": "🎁 Bonus",
                "events": "🎈 Events",
                "hoarder": "🪈 Hoarder"
            },
            "about": {
                "team": "🤼 Team",
                "support": "💸 Support",
                "faq": "❗ Handbook",
                "links": "🔗 Links"
            },
            "referal": {
                "code": "🎲 Generate code",
                "enter_code": "🎞 Enter code",
                "my_code": "🎲 My code:",
                "friend_code": "🎞 A friend:"
            },
            "bot_market": {
                "background_market": "🖼️ Background Menu",
                "appearance": "🎩 Appearance"
            },
            "backgrounds": {
                "backgrounds": "🖼️ Backgrounds",
                "standart": "🗝️ Standard",
                "custom_profile": "🌟 Custom Background"
            },
            "action_ask": {
                "speed_actions": "⛸ Quick Actions",
                "skills_actions": "📍 Skills",
                "live_actions": "🍬 Life",
                "extraction": "👔 Work",
                "no_dino": "🧵 You don't have a dinosaur",
                "dino_button": "🦖 Dinosaur:"
            },
            "speed_actions": {
                "pet": "🖐 Pet",
                "fighting": "🎯 Wrestling",
                "talk": "🦜 Talk"
            },
            "skills_actions": {
                "gym": "🥏 Gym",
                "library": "📚 Library",
                "park": "🌳 Park",
                "swimming_pool": "💧 Swimming pool",
                "stop_work": "💥 Return from training"
            },
            "extraction_actions": {
                "mine": "⛏️ Mine",
                "sawmill": "🪵 Sawmill",
                "bank": "🏦 Bank",
                "farm": "🧺 Farm",
                "stop_work": "⌛ Return from Work",
                "progress": "🌯 Progress"
            },
            "farm": {
                "sow": "🧑‍🌾 Sow",
                "plant_care": "⛏️ Plant care",
                "plants": "🎋 Plants",
                "stop_work": "💥 Return from the fields"
            },
            "map-bt": "🗺 Map",
            "map": {
                "market": "🛒 Market",
                "dino-tavern_menu": "🍺 Dino Tavern"
            }
        },
        "rare": {
            "com": [
                "Usual",
                "Usual",
                "🤍",
                "Normal"
            ],
            "unc": [
                "Unusual",
                "Unusual",
                "💚",
                "Unusual"
            ],
            "rar": [
                "Rare",
                "Rare",
                "💙",
                "Rare"
            ],
            "mys": [
                "Mystic",
                "Mystical",
                "💜",
                "Mystical"
            ],
            "leg": [
                "Legendary",
                "Legendary",
                "🧡",
                "Legendary"
            ],
            "myt": [
                "Mythical",
                "Mythical",
                "❤",
                "Mythical"
            ],
            "random": [
                "Accidental",
                "Random",
                "🎲",
                "Random"
            ]
        },
        "time_format": {
            "second": [
                "second",
                "Seconds",
                "Seconds",
                "s."
            ],
            "minute": [
                "minute",
                "Minutes",
                "Minutes",
                "m."
            ],
            "hour": [
                "hour",
                "Hours",
                "Hours",
                "h."
            ],
            "day": [
                "day",
                "Day",
                "Days",
                "D."
            ],
            "weekly": [
                "week",
                "weeks",
                "weeks",
                "w."
            ],
            "month": [
                "month",
                "months",
                "months",
                "M."
            ]
        },
        "owner": "Master",
        "items_names": {
            "jar_honey": {
                "name": "🍯 Jar of honey"
            },
            "cookie": {
                "name": "🍪 Cookie"
            },
            "mysterious_egg": {
                "name": "🥚 Mysterious Egg"
            },
            "timer": {
                "name": "⏲ Timer",
                "description": "Allows you to find out how long the game will last."
            },
            "wild_boar_meat": {
                "name": "🍖 Wild boar meat"
            },
            "bunch_herbs": {
                "name": "🌿 Bunch of herbs"
            },
            "fish": {
                "name": "🍤 Fish"
            },
            "wolf_meat": {
                "name": "🥩 Wolf Meat"
            },
            "grasses_from_fields": {
                "name": "🌾 Herbs from the fields"
            },
            "seafood": {
                "name": "🍣 Seafood"
            },
            "berries": {
                "name": "🍒 Berries"
            },
            "chicken_leg": {
                "name": "🍗 Chicken leg"
            },
            "small_fish": {
                "name": "🦪 Small fish"
            },
            "cloak": {
                "name": "🧥 Cloak",
                "description": "Cancels the penalty for the rain event."
            },
            "tooling": {
                "name": "🛠 Tooling",
                "description": "Speed up food harvesting."
            },
            "bear": {
                "name": "🧸 Bear",
                "description": "Adds sleep modes."
            },
            "therapeutic_mixture": {
                "name": "🧪 Therapeutic mixture"
            },
            "slice_pizza": {
                "name": "🍕 Slice of Pizza"
            },
            "sweet_pancakes": {
                "name": "🥞 Sweet pancakes"
            },
            "unusual_egg": {
                "name": "🥚 Unusual Egg"
            },
            "regular_egg": {
                "name": "🥚 Regular Egg"
            },
            "rare_egg": {
                "name": "🥚 Rare Egg"
            },
            "mystic_egg": {
                "name": "🥚 Mystic Egg"
            },
            "legendary_egg": {
                "name": "🥚 Legendary Egg"
            },
            "blank_piece_paper": {
                "name": "📄 A Blank Piece of Paper"
            },
            "skin": {
                "name": "👢 Skin"
            },
            "wool": {
                "name": "🐑 Wool"
            },
            "rope": {
                "name": "🎗 Rope"
            },
            "feather": {
                "name": "🐦 Feather"
            },
            "twigs_tree": {
                "name": "🥢 Sprigs of wood"
            },
            "fish_oil": {
                "name": "🐡 Fish oil"
            },
            "leather_clothing": {
                "name": "🧤 Leather Clothing",
                "description": "Warms the dinosaur."
            },
            "clothing_recipe": {
                "name": "📜 Clothing Recipe",
                "description": "A recipe for creating a beautiful leather jacket."
            },
            "torch": {
                "name": "🔥 Torch",
                "description": "While harvesting, there is a chance to find more refined herbs."
            },
            "torch_recipe": {
                "name": "📜 Torch Recipe",
                "description": "The recipe for creating a torch that will light your path."
            },
            "medicinal_drink": {
                "name": "🍵 Medicinal Drink"
            },
            "drink_recipe": {
                "name": "📜 Drink recipe",
                "description": "Recipe for making a disgusting-tasting, but healing drink."
            },
            "gourmet_herbs": {
                "name": "🍀 Exquisite Herbs"
            },
            "tea": {
                "name": "🍵 Tea"
            },
            "tea_recipe": {
                "name": "📜 Tea Recipe",
                "description": "Recipe for making fragrant tea."
            },
            "roasted_meat": {
                "name": "🥩 Grilled Meat"
            },
            "meat_recipe": {
                "name": "📜 Meat Recipe",
                "description": "Who doesn't love to eat a piece of well-cooked meat? A dinosaur won't refuse either."
            },
            "salad": {
                "name": "🥗 Salad"
            },
            "salad_recipe": {
                "name": "📜 Salad Recipe",
                "description": "Isn't the dinosaur tired of eating grass alone? Maybe it's better to make a salad with a few herbs? My dinosaur loved the result!"
            },
            "soup": {
                "name": "🥣 Soup"
            },
            "soup_recipe": {
                "name": "📜 Soup Recipe",
                "description": "'Fish live in water, why do I eat it dry?' - That's what every dinosaur probably thinks, he just hasn't tasted fish soup yet."
            },
            "board_games": {
                "name": "🧩 Table Games",
                "description": "Adds 4 dinosaur board games!"
            },
            "hiking_bag": {
                "name": "👜 Camping pouch",
                "description": "Increases the chance of events on the journey."
            },
            "pouch_recipe": {
                "name": "📜 Pouch Recipe",
                "description": "During the journey, the dinosaur needs a place to store all the things it found, here we will need a hiking bag!"
            },
            "set_cookies": {
                "name": "🍪 Set of cookies"
            },
            "pizza": {
                "name": "🍕 Pizza"
            },
            "magic_stone": {
                "name": "🔮 Magic Stone"
            },
            "taco": {
                "name": "🌮 Taco"
            },
            "bone": {
                "name": "🦴 Bone"
            },
            "iron": {
                "name": "🧱 Iron"
            },
            "bone_sword": {
                "name": "🗡 Bone Sword"
            },
            "bone_arrow": {
                "name": "💘 Bone Arrow"
            },
            "bone_onions": {
                "name": "🏹 Bone Bow"
            },
            "taco_recipe": {
                "name": "📜 Taco Recipe",
                "description": "Tacos, a superb food that all dinosaurs of all species adore!"
            },
            "sword_recipe": {
                "name": "📜 Sword Recipe",
                "description": "Recipe for a sharpened sword."
            },
            "onion_recipe": {
                "name": "📜 Onion Recipe",
                "description": "A bow made of a pair of bones, shoots properly."
            },
            "arrow_recipe": {
                "name": "📜 Arrow Recipe",
                "description": "Bone-breaking bone."
            },
            "regular_backpack": {
                "name": "🎒 Regular Backpack"
            },
            "backpack_recipe": {
                "name": "📜 Backpack Recipe",
                "description": "A school backpack equipped for a dungeon."
            },
            "shield_recipe": {
                "name": "📜 Shield Recipe",
                "description": "A shield, just a shield."
            },
            "bone_pickaxe": {
                "name": "⛏ Bone Pickaxe"
            },
            "pickaxe_recipe": {
                "name": "📜 Pickaxe Recipe",
                "description": "The pickaxe is not effective in battle, because everyone knows that the axe is a more formidable weapon. But it is effective in the extraction of resources."
            },
            "freezing": {
                "name": "❄ Freezing"
            },
            "defrost": {
                "name": "🔥 Defrost"
            },
            "chocolate": {
                "name": "🍫 Chocolate"
            },
            "candy": {
                "name": "🍬 Candy"
            },
            "candy_recipe": {
                "name": "📜 Candy Recipe",
                "description": "Recipe for Making a Whole Bunch of Chocolates"
            },
            "maize": {
                "name": "🌽 Corn"
            },
            "popcorn": {
                "name": "🍿 Popcorn"
            },
            "popcorn_recipe": {
                "name": "📜 Popcorn Recipe",
                "description": "Recipe for creating popcorn. It's time to watch a movie!"
            },
            "juice": {
                "name": "🧃 Juice"
            },
            "juice_recipe": {
                "name": "📜 Juice recipe",
                "description": "Recipe for creating freshly squeezed juice"
            },
            "spices": {
                "name": "🌶️ Spices"
            },
            "spicy_steak": {
                "name": "🥩 Spicy Steak"
            },
            "steak_recipe": {
                "name": "📜 Steak recipe",
                "description": "Recipe for creating a spicy but delicious steak"
            },
            "banana": {
                "name": "🍌 Banana"
            },
            "crab": {
                "name": "🦀 Crab"
            },
            "coffee": {
                "name": "☕ ️ Coffee"
            },
            "mushroom": {
                "name": "🍄 Mushroom"
            },
            "broth": {
                "name": "🍲 Broth"
            },
            "broth_recipe": {
                "name": "📜 Broth recipe",
                "description": "Recipe for creating a rich meat broth"
            },
            "rice": {
                "name": "🍚 Rice"
            },
            "sushi": {
                "name": "🍣 Sushi"
            },
            "sushi_recipe": {
                "name": "📜 Sushi Recipe",
                "description": "Recipe for creating sushi. It is said to be a perfectly balanced meal"
            },
            "hot_chocolate": {
                "name": "☕ ️ Hot Chocolate"
            },
            "hot_chocolate_recipe": {
                "name": "📜 Hot Chocolate Recipe",
                "description": "Recipe for creating hot chocolate. Perfect to keep you warm in winter"
            },
            "cake": {
                "name": "🎂 Cake"
            },
            "cake_recipe": {
                "name": "📜 Cake Recipe",
                "description": "Recipe for making a big cake. Cake is a lie"
            },
            "curry": {
                "name": "🍛 Curry"
            },
            "curry_recipe": {
                "name": "📜 Curry Recipe",
                "description": "Recipe for creating curry. It's such a spicy dish with rice"
            },
            "dango": {
                "name": "🍡 Dango"
            },
            "grain": {
                "name": "🥜 Grains"
            },
            "bread": {
                "name": "🍞 Bread"
            },
            "bread_recipe": {
                "name": "📜 Bread Recipe",
                "description": "Recipe for creating bread"
            },
            "berry_pie": {
                "name": "🥧 Berry pie"
            },
            "fish_cake": {
                "name": "🥘 Fish Cake"
            },
            "meat_pie": {
                "name": "🍲 Meat pie"
            },
            "berry_pie_recipe": {
                "name": "📜 Berry pie recipe",
                "description": "Recipe for the sweetest pie"
            },
            "fish_pie_recipe": {
                "name": "📜 Fish Cake Recipe",
                "description": "Recipe for creating the healthiest pie"
            },
            "meat_pie_recipe": {
                "name": "📜 Meat pie recipe",
                "description": "Recipe for creating the most hearty pie"
            },
            "bacon": {
                "name": "🥓 Bacon"
            },
            "bacon_recipe": {
                "name": "📜 Bacon Recipe",
                "description": "Bacon Recipe"
            },
            "bento": {
                "name": "🍱 Bento"
            },
            "bento_recipe": {
                "name": "📜 Bento Recipe",
                "description": "Recipe for creating bento. Everything for a complete snack is collected here."
            },
            "sandwich": {
                "name": "🥪 Sandwich"
            },
            "sandwich_recipe": {
                "name": "📜 Sandwich Recipe",
                "description": "Recipe for creating a sandwich. Convenient for a quick snack"
            },
            "chest_food": {
                "name": "📦 Food Chest"
            },
            "recipe_chest": {
                "name": "📦 Recipe Chest"
            },
            "gift_2023": {
                "name": "🎁 Gift 2023"
            },
            "gift_2024": {
                "name": "🎁 Gift 2024",
                "description": "For the most beautiful people on the planet! ❤"
            },
            "gift_2025": {
                "name": "🎁 Gift 2025",
                "description": "For dreamers and believers!"
            },
            "rod": {
                "name": "🎣 Fishing rod",
                "description": "A great fishing rod for fishing. Increases the Dinosaur's Mastery."
            },
            "stone_resurrection": {
                "name": "💎 Resurrection Stone",
                "description": "A stone that can retrieve any dinosaur from the memory of the universe!"
            },
            "ale": {
                "name": "🍺 Ale"
            },
            "basket": {
                "name": "👒 Basket",
                "description": "Basket for picking berries. Increases the maximum amount of food collected."
            },
            "net": {
                "name": "🕸 Net",
                "description": "Trap net for hunting animals."
            },
            "book_forest": {
                "name": "📔 A book about the forest",
                "description": "A book by a long-forgotten adventurer. He talks about the forest."
            },
            "book_lost-islands": {
                "name": "📔 The Book of the Islands",
                "description": "A book by a long-forgotten adventurer. He tells about the lost islands."
            },
            "book_desert": {
                "name": "📔 The Book of the Desert",
                "description": "A book by a long-forgotten adventurer."
            },
            "book_mountains": {
                "name": "📔 The Book of the Mountains",
                "description": "A book by a long-forgotten adventurer."
            },
            "book_magic-forest": {
                "name": "📔 The Book of the Magic Forest",
                "description": "A book by a long-forgotten adventurer."
            },
            "bag_goodies": {
                "name": "👜 Bag of treats",
                "description": "Storage for goodies on your journey."
            },
            "rubik_cube": {
                "name": "🎲 Rubik's Cube",
                "description": "The dinosaur always has his favorite game with him."
            },
            "lock_bag": {
                "name": "👜 Bag with lock",
                "description": "A more secure travel bag."
            },
            "skinning_knife": {
                "name": "🔪 Skinning knife",
                "description": "It helps to collect the skin from animals more accurately. Without losing parts of it."
            },
            "flour": {
                "name": "🌫 Flour"
            },
            "flour_recipe": {
                "name": "📜 Flour Recipe",
                "description": "Recipe for creating flour for yummy."
            },
            "croissant": {
                "name": "🥐 Croissant"
            },
            "croissant_recipe": {
                "name": "📜 Croissant recipe",
                "description": "Recipe for creating a hot and appetizing croissant."
            },
            "carrot": {
                "name": "🥕 Carrot"
            },
            "tomato": {
                "name": "🍅 Tomato"
            },
            "potato": {
                "name": "🥔 Potato"
            },
            "basket_recipe": {
                "name": "📜 Basket Recipe",
                "description": "Recipe for creating a basket for collecting food."
            },
            "net_recipe": {
                "name": "📜 Recipe Network",
                "description": "A recipe for creating a net for hunting."
            },
            "rod_recipe": {
                "name": "📜 Rod recipe",
                "description": "Necessary material for creating weapons."
            },
            "meow_book": {
                "name": "📔 Meow Edition",
                "description": "mi mi, mi mi mi... mi!"
            },
            "premium_activator": {
                "name": "✨ Premium Activator",
                "description": "Activates a 1-month premium subscription"
            },
            "egg_case": {
                "name": "📦 Egg Case"
            },
            "fried_egg": {
                "name": "🍳 Scrambled eggs"
            },
            "3_days_premium": {
                "name": "✨ Trial Subscription",
                "description": "Activates a 3-day premium subscription"
            },
            "background": {
                "name": "🖼 Background",
                "description": "Adds a background to the collection."
            },
            "iron_sword": {
                "name": "🗡 Iron Sword"
            },
            "timer_recipe": {
                "name": "📜 Timer Recipe",
                "description": "Timer recipe."
            },
            "cloak_recipe": {
                "name": "📜 Cloak Recipe",
                "description": "Raincoat recipe."
            },
            "bear_recipe": {
                "name": "📜 Bear Recipe",
                "description": "Recipe for creating a bear for sleep."
            },
            "tooling_recipe": {
                "name": "📜 Tools Recipe",
                "description": "Recipe for creating tools."
            },
            "leather_clothing_recipe": {
                "name": "📜 Leather Clothing Recipe",
                "description": "Leather clothing recipe."
            },
            "board_games_recipe": {
                "name": "📜 Board game recipe",
                "description": "Recipe for creating board games."
            },
            "wood-body": {
                "name": "📦 Wooden Case"
            },
            "iron-body": {
                "name": "📦 Iron Hull"
            },
            "copper-body": {
                "name": "📦 Copper Case"
            },
            "metal-gear": {
                "name": "⚙ Metal Gear"
            },
            "wood-gear": {
                "name": "⚙ Wooden Gear"
            },
            "iron-rod": {
                "name": "🦯 Iron Rod"
            },
            "copper-rod": {
                "name": "🦯 Copper Rod"
            },
            "iron-ingot": {
                "name": "🧱 Iron Ingot"
            },
            "copper-ingot": {
                "name": "🧱 Copper Ingot"
            },
            "copper": {
                "name": "🧱 Copper"
            },
            "wood": {
                "name": "🪵 Tree"
            },
            "gear_recipe": {
                "name": "📜 Gear recipe",
                "description": "The most important component in the mechanism."
            },
            "copper_sword": {
                "name": "🗡 Copper Sword"
            },
            "crossbow": {
                "name": "🏹 Crossbow"
            },
            "crossbow_recipe": {
                "name": "📜 Crossbow Recipe",
                "description": "Crossbow - powerful, fast, durable. Perfect for hunting!"
            },
            "wood_shield": {
                "name": "🛡 Wooden Shield"
            },
            "iron_shield": {
                "name": "🛡 Iron Shield"
            },
            "copper_shield": {
                "name": "🛡 Copper Shield"
            },
            "leather_jacket": {
                "name": "🧥 Leather jacket"
            },
            "iron_pickaxe": {
                "name": "⛏ Iron Pickaxe"
            },
            "copper_pickaxe": {
                "name": "⛏ Copper Pickaxe"
            },
            "bone_axe": {
                "name": "🪓 Bone Axe"
            },
            "iron_axe": {
                "name": "🪓 Iron Axe"
            },
            "copper_axe": {
                "name": "🪓 Copper Axe"
            },
            "axe_recipe": {
                "name": "📜 Axe Recipe",
                "description": "An axe is not effective in battle, because everyone knows that a sword is a faster weapon. But it is effective in the extraction of resources."
            },
            "recipe_chest_simple": {
                "name": "📦 Random recipe"
            },
            "fishing-rod": {
                "name": "🎣 Fishing rod",
                "description": "A great fishing rod for fishing. Increases the Dinosaur's Mastery."
            },
            "fishing-rod_recipe": {
                "name": "📜 Fishing rod recipe",
                "description": "Fishing rod recipe."
            },
            "bag_goodies_recipe": {
                "name": "📜 Bag with goodies",
                "description": "Recipe for creating a storage for goodies."
            },
            "rubik_cube_recipe": {
                "name": "📜 Rubik's Cube",
                "description": "Recipe for creating a Rubik's Cube."
            },
            "lock_bag_recipe": {
                "name": "📜 Bag with lock",
                "description": "Recipe for creating a bag with a lock."
            },
            "skinning_knife_recipe": {
                "name": "📜 Skinning knife",
                "description": "Recipe for creating a skinning knife."
            },
            "fishing_rod_recipe": {
                "name": "📜 Fishing rod recipe",
                "description": "Recipe for creating a fishing rod."
            },
            "repair_tool": {
                "name": "🔧 Repair Kit",
                "description": "A set for repairing accessories, weapons, armor. Repairs only broken items!"
            },
            "repair_tool_recipe": {
                "name": "📜 Repair Kit",
                "description": "Recipe for creating a repair kit."
            },
            "SYSTEM_ITEM_REPAIR": {
                "name": "🔧 Repaired item"
            },
            "SYSTEM_ITEM_SWORD": {
                "name": "🗡 Sword"
            },
            "SYSTEM_ITEM_AXE": {
                "name": "🪓 Axe"
            },
            "SYSTEM_ITEM_PICKAXE": {
                "name": "⛏ Pickaxe"
            },
            "SYSTEM_ITEM_SHIELD": {
                "name": "🛡 Shield"
            },
            "SYSTEM_ITEM_GEAR": {
                "name": "⚙ Gear"
            },
            "SYSTEM_ITEM_ROD": {
                "name": "🦯 Rod"
            },
            "rustycan": {
                "name": "🥫 Rusty Jar"
            },
            "wornoutticket": {
                "name": "🎟️ Worn-out Ticket"
            },
            "brokenkey": {
                "name": "🔧 Broken Key"
            },
            "lostglove": {
                "name": "🧤 The Lost Glove"
            },
            "shatteredbottle": {
                "name": "🍾 Broken Bottle"
            },
            "oldbucket": {
                "name": "🪣 Old bucket"
            },
            "crumpledpaper": {
                "name": "🧻 Crumpled piece of paper"
            },
            "wiltedleaf": {
                "name": "🍂 Withered Leaf"
            },
            "freezing_1moth": {
                "name": "🧊 Freeze for a month"
            },
            "reinforced_backpack": {
                "name": "🎒 Reinforced Backpack"
            },
            "reinforced_backpack_recipe": {
                "name": "📜 Reinforced backpack",
                "description": "Recipe for a reinforced backpack."
            },
            "pillow": {
                "name": "🧸 Pillow",
                "description": "After the sleep ends, the dinosaur receives a temporary energy boost."
            },
            "pillow_recipe": {
                "name": "📜 Pillow Recipe",
                "description": "Pillow recipe"
            },
            "blanket": {
                "name": "❤️‍🩹 Blanket",
                "description": "After the sleep ends, the dinosaur gains a temporary health boost."
            },
            "blanket_recipe": {
                "name": "📜 Blanket Recipe",
                "description": "Blanket Recipe"
            },
            "toy_solider": {
                "name": "🪀 Toy Soldier",
                "description": "Relieves stress points during sleep."
            },
            "toy_solider_recipe": {
                "name": "📜 Soldier Recipe",
                "description": "Toy soldier recipe."
            },
            "controller": {
                "name": "🎮 Controller",
                "description": "Speeds up the game time."
            },
            "controller_recipe": {
                "name": "📜 Controller Recipe",
                "description": "Recipe for creating a controller."
            },
            "leather_jacket_recipe": {
                "name": "📜 Leather Jacket",
                "description": "Almost like a shield, but much lighter."
            },
            "body_recipe": {
                "name": "📜 Hull Recipe"
            },
            "SYSTEM_ITEM_BODY": {
                "name": "📦 Enclosure"
            },
            "transport_egg": {
                "name": "🦖 Transport Egg",
                "description": "An egg for transporting a dinosaur. Use: If there is no dinosaur, place the dinosaur and freeze it. If there is a dinosaur: pulls out and thaws the dinosaur. Deleted after 1 cycle of use."
            },
            "fake_legendary_egg": {
                "name": "🥚 Legendary Egg!",
                "description": "Ha, ha, ha!"
            },
            "custom_book": {
                "name": "📙 Notebook",
                "description": "Your personal record book. Write down your thoughts and ideas, and share them with your friends!"
            },
            "ink": {
                "name": "✒️ Ink"
            },
            "custom_book_recipe": {
                "name": "📜 Notes Recipe"
            }
        },
        "notifications": {
            "daily_award": {
                "text": "🎩 | Don't forget to claim your daily bonus! \n Daily notifications can be turned off in the settings.",
                "inline_menu": [
                    "daily_award"
                ]
            },
            "incubation_ready": {
                "text": "🦖 | {user_name}, your dinosaur has hatched! 🎉",
                "inline_menu": [
                    "dino_profile",
                    "dino_rename"
                ]
            },
            "donation": {
                "reward": "🦕 Payment received! \n\n ❤ We are grateful to you for supporting the bot, we promise to continue to do our best for you! Free the dinosaurs!",
                "amount_error": "The payment went through, but one problem... You have indicated and paid less than the cost of the goods, in the quantity of {col}. The difference was: {difference} {currency}. Reach out to @AS1AW for help by sending this message.",
                "currency_key_error": "Whoa, you have specified a currency ({currency}) that we were unable to process, please contact @AS1AW for assistance by sending this message.",
                "product_key_error": "Hey, we couldn't figure out which product you listed ({product_key}) ... Reach out to @AS1AW for help by sending this message.",
                "subscription_end_day": "❤ | Hey! Your subscription ends in {end_text}, if you like the subscription features, then pay for the next month!",
                "subscription_end": "❤ | Your subscription is over, thank you for being with us!",
                "pre_check_error": "🐱 🐉 Something went wrong, try again in a few minutes."
            },
            "lvl_up": {
                "standart": "🎉 | {user_name}, your level has been raised! ({lvl})",
                "20": "🎉 | {user_name}, your level has been raised! ({lvl}) \n ✨ | You now have a +1 dinosaur slot!",
                "40": "🎉 | {user_name}, your level has been raised! ({lvl}) \n ✨ | You now have a +1 dinosaur slot!",
                "50": "🎉 | {user_name}, your level has been raised! ({lvl}) \n 🎴 | You're halfway to the maximum level, keep it up!",
                "60": "🎉 | {user_name}, your level has been raised! ({lvl}) \n ✨ | You now have a +1 dinosaur slot!",
                "80": "🎉 | {user_name}, your level has been raised! ({lvl}) \n ✨ | You now have a +1 dinosaur slot!",
                "100": "🎉 | {user_name}, your level has been raised! ({lvl}) \n 🎴 | You've reached the maximum level!"
            },
            "send_request": {
                "text": "💞 | You have received a friend proposal from {user_name}, check the requests!",
                "inline_menu": "requests"
            },
            "referal_award": {
                "text": "🎁 | Your friend {user_name} has reached {lvl}, thank you so much for inviting your friends, you were rewarded with {item_name}!"
            },
            "sleep_end": {
                "text": "🦕 | {dino_name} I woke up and was full of energy. \n ⌛ | The dinosaur was asleep {time_end}.",
                "inline_menu": "dino_profile"
            },
            "game_end": {
                "replics": [
                    "🎮 *{dino_name}*: *{owner_name}*, I've stopped playing!",
                    "🎮 *{dino_name}*: *{owner_name}*, I've played!",
                    "🎮 *{dino_name}*: *{owner_name}*, I've had enough!"
                ],
                "inline_menu": "dino_profile"
            },
            "end_collecting": {
                "text": "🍱 | {dino_name} finished gathering food. \n\n 🍡 | Collected items: {items_names}",
                "inline_menu": "dino_profile"
            },
            "broke_accessory": {
                "text": "💥 | The active item {item_name} of the dinosaur {dino_name} has broken.",
                "inline_menu": "dino_profile"
            },
            "need_heal": {
                "replics": [
                    "💔 *{dino_name}*: Cough, cough, *{owner_name}*, I'm feeling really bad... ({unit} %)",
                    "💔 *{dino_name}*: *{owner_name}*, I'm feeling really bad, help me... ({unit} %)",
                    "💔 *{dino_name}*: *{owner_name}*, I think I need help, I don't feel well... ({unit} %)"
                ],
                "inline_menu": "rescue"
            },
            "need_eat": {
                "replics": [
                    "🥕 *{dino_name}*: *{owner_name}*, I'm hungry, what am I going to try today? ({unit} %)",
                    "🥕 *{dino_name}*: *{owner_name}*, I want to eat! ({unit}%)",
                    "🥕 *{dino_name}*: Feed me, *{owner_name}*. ({unit} %)"
                ],
                "inline_menu": "feed_start"
            },
            "need_mood": {
                "replics": [
                    "😥 *{dino_name}*: *{owner_name}*, I'm kind of sad... ({unit} %)",
                    "😥 *{dino_name}*: *{owner_name}*, why is this day so boring? ({unit}%)",
                    "😥 *{dino_name}*: *{owner_name}*, so boring... ({unit}%)"
                ],
                "inline_menu": "dino_profile"
            },
            "need_game": {
                "replics": [
                    "🎮 *{dino_name}*: *{owner_name}*, I haven't played for so long... ({unit}%)",
                    "🎮 *{dino_name}*: *{owner_name}*, play with me! ({unit}%)",
                    "🎮 *{dino_name}*: *{owner_name}*, if only I could play now... ({unit}%)"
                ],
                "inline_menu": "dino_profile"
            },
            "need_energy": {
                "replics": [
                    "✨ *{dino_name}*: *{owner_name}*, I want to sleep... ({unit} %)",
                    "✨ *{dino_name}*: *{owner_name}*, I'm very tired, shall we go to bed? ({unit} %)",
                    "✨ *{dino_name}*: *{owner_name}*, I'm tired... ({unit} %)"
                ],
                "inline_menu": "dino_profile"
            },
            "independent_dead": {
                "text": "❤ Unfortunately... Your dinosaur *{dino_name}* ... Died... \n\n 🥚 | Don't worry, you've been given another egg, take a look at your inventory!",
                "inline_menu": [
                    "inventory",
                    "reborn"
                ]
            },
            "not_independent_dead": {
                "text": "❤ Unfortunately... Your dinosaur *{dino_name}* ... Died... \n\n ✉ | You'll receive an email from the organization. Open it.",
                "inline_menu": [
                    "dead_dialog",
                    "reborn"
                ]
            },
            "breakdown": {
                "replics": [
                    "😭 *{dino_name}*: *{owner_name}*, you don't love me at all, how can you forget about your friend like that? \n 😭 *{dino_name}*: _Crying_\n\n _{message} _",
                    "😭 *{dino_name}*: *{owner_name}*, how can you treat me so badly?! \n 😭 *{dino_name}*: _Crying_\n\n _{message} _",
                    "😭 *{dino_name}*: *{owner_name}*, you don't love me at all! \n 😭 *{dino_name}*: _Crying_\n\n _{message} _"
                ],
                "inline_menu": "dino_profile"
            },
            "inspiration": {
                "replics": [
                    "😀 *{dino_name}*: *{owner_name}*, I feel so good! \n\n _{message} _",
                    "😀 *{dino_name}*: *{owner_name}*, I'm in a great mood, now I'm ready for adventure! \n\n _{message} _",
                    "😀 *{dino_name}*: *{owner_name}*, I'm ready to move mountains! \n\n _{message} _"
                ],
                "inline_menu": "dino_profile"
            },
            "product_delete": "🍟 The product ({preview}) has been removed from the market.",
            "product_buy": {
                "text": "🍜 The product ({preview}) has been purchased {col} times for the amount of {price} 🪙, user {name}",
                "inline_menu": "product_info"
            },
            "kindergarten": {
                "text": "🎈 | {dino_name} I came back from kindergarten.",
                "inline_menu": "dino_profile"
            },
            "item_crafted": {
                "standart": "🧨 Crafting of items is completed. \n🪀 Created: {items}",
                "bonus": "🧨 Crafting of items is completed. \n🪀 Created by: {items}\n_🪈 Thanks to his high skills, the dinosaur was able to craft an additional item from surplus materials! _"
            },
            "gym_end": {
                "text": "🥏 | {dino_name} Back from the gym. The dinosaur has been training long and hard, now he feels much stronger! (+{add_unit})",
                "inline_menu": "dino_profile"
            },
            "library_end": {
                "text": "📖 | {dino_name} returned from the library. The head of the dinosaur is overflowing with knowledge, he wants to create and invent! (+{add_unit})",
                "inline_menu": "dino_profile"
            },
            "swimming_pool_end": {
                "text": "🌊 | {dino_name} Back from the pool. After training, he feels more flexible! (+{add_unit})",
                "inline_menu": "dino_profile"
            },
            "park_end": {
                "text": "🌳 | {dino_name} returned from a walk in the park. The dinosaur learned a lot about its relatives and memorized new words! (+{add_unit})",
                "inline_menu": "dino_profile"
            },
            "gym_end_negative": {
                "text": "🥏 | {dino_name} Back from the gym. \n❗ The training was done incorrectly, so the stats were reduced. (-50% of purchased) (+{add_unit})",
                "inline_menu": "dino_profile"
            },
            "library_end_negative": {
                "text": "📖 | {dino_name} returned from the library. \n❗ The training was done incorrectly, so the stats were reduced. (-50% of purchased) (+{add_unit})",
                "inline_menu": "dino_profile"
            },
            "swimming_pool_end_negative": {
                "text": "🌊 | {dino_name} Back from the pool. \n❗ The training was done incorrectly, so the stats were reduced. (-50% of purchased) (+{add_unit})",
                "inline_menu": "dino_profile"
            },
            "park_end_negative": {
                "text": "🌳 | {dino_name} returned from a walk in the park. \n❗ The training was done incorrectly, so the stats were reduced. (-50% of purchased) (+{add_unit})",
                "inline_menu": "dino_profile"
            },
            "craft_end": {
                "text": "⛏️ | {dino_name} Back from the workshop! You can check active crafting by commanding /craftlist",
                "inline_menu": "dino_profile"
            },
            "bank_end": {
                "text": "🏦 | {dino_name} Back from the bank! Here are the results of his work: {results}",
                "inline_menu": "dino_profile"
            },
            "mine_end": {
                "text": "⛏️ | {dino_name} Back from the mine! Here are the results of his work: {results}",
                "inline_menu": "dino_profile"
            },
            "sawmill_end": {
                "text": "🌲 | {dino_name} Back from the Sawmill! Here are the results of his work: {results}",
                "inline_menu": "dino_profile"
            }
        },
        "breakdown": {
            "seclusion": "🔇 | The dinosaur refuses to talk to you for a while, so you won't receive notifications from it.",
            "hysteria": "❌ | The dinosaur is very upset, he is huddled in his room and cries.",
            "unrestrained_play": "🎮 | The dinosaur is very upset, he decided to go play to cheer himself up.",
            "downgrade": "💥 | Due to his bad mood, the dinosaur threw the object very hard. This item could be an accessory."
        },
        "inspiration": {
            "game": "🥭 | Because of the great mood, the dinosaur gets a bonus of x{bonus} to the skill of the game! 💚 Send the dinosaur to play to use the inspiration!",
            "collecting": "🍍 | Because of the great mood, the dinosaur gets a x{bonus} food-gathering speed bonus! 💚 Send the dinosaur to collect food to use inspiration!",
            "journey": "🌽 | Because of the great mood, the dinosaur gets a bonus of x{bonus} to the number of events in the journey! 💚 Take a dinosaur on a journey to use inspiration!",
            "sleep": "🍏 | Because of the great mood, the dinosaur gets a bonus of x{bonus} to the quality of sleep! 💚 Send the dinosaur to sleep to use inspiration!",
            "craft": "🥝 | Because of the great mood, the dinosaur gets a bonus of x{bonus} to the speed of creating items! 💚 Send the dinosaur to create an item to use inspiration!",
            "farm": "🥬 | Because of the great mood, the dinosaur gets a bonus of x{bonus} to the skill of caring for plants! 💚 Send a dinosaur to the farm to use inspiration!",
            "mine": "🍒 | Due to the great mood, the dinosaur receives a bonus x{bonus} to the speed of working in the mine! 💚 Send the dinosaur to the mine to use inspiration!",
            "bank": "🥭 | Due to the great mood, the dinosaur receives a bonus x{bonus} to the quality of work in the bank! 💚 Put the dinosaur in the bank to use inspiration!",
            "sawmill": "🌽 | Due to the great mood, the dinosaur receives a bonus x{bonus} to the speed of work in the sawmill! 💚 Send the dinosaur to the sawmill to use inspiration!",
            "gym": "🌶 | Due to the great mood, the dinosaur receives an x{bonus} bonus to the speed of increasing strength! 💚 Send a dinosaur to the hall to use inspiration!",
            "library": "🍇 | Due to the great mood, the dinosaur receives an x{bonus} bonus to the speed of increasing intelligence! 💚 Submit a dinosaur to the library to use inspiration!",
            "park": "🥕 | Due to the great mood, the dinosaur receives a bonus x{bonus} to the speed of leveling charisma! 💚 Send the dinosaur to the park to use inspiration!",
            "swimming_pool": "🍎 | Due to the great mood, the dinosaur receives a bonus x{bonus} to the speed of leveling agility! 💚 Send the dinosaur to the pool to use inspiration!",
            "exp_boost": "🍌 | Due to the great mood, the dinosaur receives an x{bonus} XP bonus!"
        },
        "back_text": {
            "main_menu": "🦕 | Return to the main menu",
            "profile_menu": "🎮 | Return to the profile menu",
            "friends_menu": "👥 | Return to the Friends Menu",
            "actions_menu": "🦕 | Return to Activity Menu",
            "dungeon_menu": "🗻 | Return to the dungeon menu",
            "dino_tavern_menu": "🍻 | Return to the tavern menu",
            "settings_menu": "🔗 | Settings menu (Page 1)",
            "market_menu": "🛒 | Return to the Market Menu",
            "bot_market": "🗝️ Return in the store menu",
            "bot_market_menu": "🗝️ Return in the store menu"
        },
        "menu_text": {
            "actions": "🕹 | The action bar is open!",
            "profile": "👁‍🗨 | The profile panel is open!",
            "friends": "👥 | The Friends Panel is open!",
            "settings": "🔧 | Settings Menu Activated\n\n 🔔 Daily Notifications: {notif} \n 🎞 Profile Mode: {profile_view} \n 📚 Inventory Mode: {inv_view}",
            "market": {
                "info": "🛒 | The Market Panel is open! \n _Promoted products may appear here_",
                "products": "📯 | And here are a few items that you might find useful!"
            },
            "dino_tavern": {
                "info": "🍺 You've entered the Dino Tavern! \n\n 📜 While in the tavern, you can get a quest or hear useful information!",
                "friends": "🍺 Friends at the Tavern: Searching through the crowd...",
                "friends2": "🍺 Friends in the tavern:",
                "tavern_col": "🔮 Total in the tavern: {col}",
                "went": "🍺 {name} went to the tavern...",
                "button": "🍻 Buy ale for 150 🪙"
            },
            "about": "🤖 | Hello! I'm @{bot_name}, but here's some information about me! \n\n 🗝️ | Stats: 👥 <code> {col_u} </code> 🦕 <code> {col_d} </code> 🔮 <code> {col_i} </code> \n <i> {update_time} Back. </i>",
            "referal": "🤍 | Redirect to the referral system menu! \n\n 💜 | *Upon reaching level {lvl}* your friend, you'll get {award_text}! \n\n ❤️ | A friend will receive a bonus in the amount of: {coins} coins, {items}",
            "referal_separator": "or",
            "settings2": "🔧 | Settings Menu (Page 2)\n\n 🦕 Address: {my_name}",
            "seller": "🎇 Go to the store management menu",
            "bot_market": "🎍 | What will the bot offer today? Take a look!",
            "backgrounds_menu": "🎩 | The background management menu is open!",
            "live_actions": "🌸 | Go to the life activities menu!",
            "extraction": "⛏️ | Go to the works menu! To get the result, you need to bring the matter to the end.",
            "skills_actions": "📍 | Go to the skill leveling menu! \n\n💪 | Leveling up skills is a difficult and long process, when sending a dinosaur to training, make sure that he is full, and also has enough strength to train! \n\n❗ | Keep in mind that the dinosaur does not return from training on its own without consequences, you must do it. Keep an eye on the condition of the dinosaur and follow the recommendations!",
            "speed_actions": "⌚ | Quick actions - works instantly, but can be used again after a while."
        },
        "no_text_key": "❌ The text corresponding to the key {key} is not found, contact the developer @AS1AW!",
        "edit_dino_button": {
            "edit": "🦕 | Choose an active dinosaur ->",
            "notfouned": "❌ | Dinosaur Not Found",
            "susseful": "🦕 | Active dinosaur changed to {name}"
        },
        "inline_menu": {
            "delete_message": {
                "text": "⚙ Delete Post",
                "callback": "delete_message"
            },
            "dino_profile": {
                "text": "🦕 Open Profile",
                "callback": "dino_profile {dino_alt_id_markup}"
            },
            "dino_rename": {
                "text": "💬 Give a name",
                "callback": "rename_dino {dino_alt_id_markup}"
            },
            "send_request": {
                "text": "💎 Send Inquiry",
                "callback": "send_request {userid}"
            },
            "requests": {
                "text": "👥 Requests",
                "callback": "requests"
            },
            "inventory": {
                "text": "🍭 Open Inventory",
                "callback": "inventory_start"
            },
            "rescue": {
                "text": "❤ Save the dinosaur",
                "callback": "support info rescue_kit"
            },
            "reborn": {
                "text": "❤ Revive",
                "callback": "support info reborn"
            },
            "dead_dialog": {
                "text": "✉ Open",
                "callback": "dialog dead_last_dino start"
            },
            "daily_award": {
                "text": "🎁 Pick Up",
                "callback": "daily_message"
            },
            "product_info": {
                "text": "🍜 About the product",
                "callback": "product_info info {alt_id}"
            },
            "feed_start": {
                "text": "🥙 Feed",
                "callback": "feed_inl {alt_id}"
            }
        },
        "states": {
            "ChooseDino": {
                "error_not_dino": "❓ | Dinosaurs aren't numbers, texts, or emojis, they're living creatures, try again. Alternatively, type /cancel to cancel."
            },
            "ChooseInt": {
                "error_not_int": "❓ | After a structural analysis of the data, we determined that you did not enter a number, try again. Or enter /cancel to cancel.",
                "error_max_int": "❓ | The specified number is greater than the maximum ({number} > {max}), please try again. Or enter /cancel to cancel.",
                "error_min_int": "❓ | The specified number is less than the minimum ({number} < {min}), try again. Alternatively, type /cancel to cancel."
            },
            "ChooseString": {
                "error_max_len": "❓ | The length of the message is longer than allowed ({number} &gt; {max}), try again. Alternatively, type /cancel to cancel.",
                "error_min_len": "❓ | The length of the message is less than allowed ({number} < {min}), try again. Alternatively, type /cancel to cancel."
            },
            "ChooseConfirm": {
                "error_not_confirm": "❓ | Select one of the options. Or enter /cancel to cancel."
            },
            "ChooseOption": {
                "error_not_option": "❓ | Are you trying to go beyond the boundaries of the world? Don't. Choose from the available options. Alternatively, type /cancel to cancel."
            },
            "ChooseTime": {
                "zero_seconds": "❓ | You need to enter a message in time format, use the memo - /string_to_sec click\n Alternatively, type /cancel to cancel.",
                "error_max_int": "❓ | The time you specified is longer than the maximum ({number} > {max}), try again. Alternatively, type /cancel to cancel.",
                "error_min_int": "❓ | The time you specified is less than the minimum ({number} < {min}), try again. Alternatively, type /cancel to cancel."
            }
        },
        "no_use_interface": "❌ While in the dungeon, use the dungeon interface! \n\n If there is an error and you are out of the dungeon, type /check_dinos",
        "no_account": "You do not have a registered account in the bot, please go to the bot and register to get access to this command.",
        "add_me": "❤ | Anyone can send a friend request <a href='tg://user?id={userid}' >{username}</a> by clicking on the button below!",
        "in_development": "This feature is under development, stay tuned to find out when the team will be up and running!",
        "start_command": {
            "referal": "🔗 I noticed a click on the current referral link!",
            "first_message": "🦖 | Hey <b> {username} </b>, glad to see you! \n I'm a little Tamagotchi type game bot, only with dinosaurs! \n\n <b> 🥚 | What is Tamagotchi? </b> \n Tamagotchi is a game with a virtual pet that needs to be fed, cared for, played, etc. \n\n <b> 🗻 | What kind of bot? </b> \n In this bot, you have to take care of your pet, travel, conquer the dungeon and fully immerse yourself in this RPG world! \n\n <b> 🎮 | How do I start playing? </b> \n Press the button <b> 🍡 Start playing</b>! \n\n <b> ❤ | Get ready to pay attention to your dinosaur, good luck! </b>",
            "request_subscribe": {
                "text": "📜 | Dear User! \n\n 🎭 | The bot has an official telegram channel and group, go to the group to find a topic for conversation or ask questions, as well as subscribe to the channel to receive interesting bonuses and news! \n\n ❤ | It's not mandatory, but we'd be very grateful! \n\n ⏳ | Wait a bit, the image will be generated...",
                "buttons": [
                    "🦖 | Subscribe",
                    "🔮 | Join"
                ]
            },
            "start_game": "🥚 | Choose a dinosaur egg! \n\n 🦖 | No matter which egg you choose, you'll get a cute dinosaur.",
            "end_answer": {
                "edited_text": "🥚 | Congratulations, your egg is incubated!",
                "send_text": "🧸 | Congratulations, you've got your first dinosaur! \n\n 🍱 | At the moment, the egg is incubating, and in `{inc_time}` it will hatch into a dinosaur! \n\n 🎋 | To see the latest information about the egg, click the `🦖 Dinosaur`! \n\n 📔 | While you're waiting, study the interface, read the FAQ, and customize the bot for yourself!"
            }
        },
        "help_command": {
            "all": "🥡 Command Reference",
            "for_dm": "🧤 Personal chat",
            "for_group": "🍇 For groups",
            "for_dev": "🧧 For developers",
            "commands": {
                "help": {
                    "short": "List of all bot commands",
                    "long": "🥏 List of all commands in the bot.",
                    "arguments": "",
                    "dev": false,
                    "dm": true,
                    "group": true
                },
                "cancel": {
                    "short": "Canceling a state",
                    "long": "🛡️ Cancel any selection state. \n🪀 Example: You are creating a product for the market to undo it at any stage - use this command.",
                    "arguments": "",
                    "dev": false,
                    "dm": true,
                    "group": false
                },
                "start": {
                    "short": "Start Bot / Main Menu",
                    "long": "💥 The first thing the bot sees from you is start, but in other cases, you can go to the main menu with this command.",
                    "arguments": "",
                    "dev": false,
                    "dm": true,
                    "group": false
                },
                "profile": {
                    "short": "User Profile",
                    "long": "🎋 An alternative to the information command, a general summary of the user.",
                    "arguments": "",
                    "dev": false,
                    "dm": true,
                    "group": true
                },
                "add_me": {
                    "short": "Add me!",
                    "long": "🎃 A command to quickly add friends through a group.",
                    "arguments": "",
                    "dev": false,
                    "dm": false,
                    "group": true
                },
                "promo": {
                    "short": "Redeem Promo Code",
                    "long": "⛏️ Follow the news in the channel to get promo codes more often!",
                    "arguments": "(code)",
                    "dev": false,
                    "dm": true,
                    "group": false
                },
                "super": {
                    "short": "Super Coin Menu",
                    "long": "🧺 Watch ads - get super coins - exchange them in the premium store!",
                    "arguments": "",
                    "dev": false,
                    "dm": true,
                    "group": false
                },
                "timer": {
                    "short": "Converts seconds to time",
                    "long": "⏳ Enter the number of seconds that will be converted to time in the output.",
                    "arguments": "",
                    "dev": false,
                    "dm": true,
                    "group": false
                },
                "string_to_sec": {
                    "short": "Prompt for entering the time",
                    "long": "🪵 Prompt for entering the time in places such as creating an auction.",
                    "arguments": "",
                    "dev": false,
                    "dm": true,
                    "group": false
                },
                "pushinfo": {
                    "short": "Tooltip for publishing products in the channel",
                    "long": "🪵 Prompt for entering the time in places such as creating an auction.",
                    "arguments": "",
                    "dev": false,
                    "dm": true,
                    "group": false
                },
                "delete_push": {
                    "short": "Delete a product notification",
                    "long": "🪵 Delete a notification to a channel.",
                    "arguments": "",
                    "dev": false,
                    "dm": true,
                    "group": false
                },
                "craftlist": {
                    "short": "List of craftable items",
                    "long": "🎀 List of craftable items",
                    "arguments": "",
                    "dev": false,
                    "dm": true,
                    "group": false
                },
                "create_tracking": {
                    "short": "Creating a Track Link",
                    "long": "💥 Create a track link to track login via /start",
                    "arguments": "",
                    "dev": true,
                    "dm": true,
                    "group": false
                },
                "tracking": {
                    "short": "List of Track Links",
                    "long": "🛡️ List of track links tracked via /start",
                    "arguments": "",
                    "dev": true,
                    "dm": true,
                    "group": false
                },
                "create_promo": {
                    "short": "Creating a promo code",
                    "long": "🏦 Creating a promo code",
                    "arguments": "",
                    "dev": true,
                    "dm": true,
                    "group": false
                },
                "promos": {
                    "short": "List and manage promo codes",
                    "long": "🛡️ List and management of promo codes",
                    "arguments": "",
                    "dev": true,
                    "dm": true,
                    "group": false
                },
                "link_promo": {
                    "short": "Linking the promo code button",
                    "long": "🛡️ To bind the promo code button to a message, you need to respond to the message with a command, the bot must also be in the channel.",
                    "arguments": "(promo) (name)",
                    "dev": true,
                    "dm": true,
                    "group": false
                },
                "add_premium": {
                    "short": "Issuance of a premium subscription",
                    "long": "🛡️ Issuing a premium subscription for time\n0 - give a premium subscription to yourself, str_time - time format. The second argument is that if it is empty, then forever, otherwise for a while.",
                    "arguments": "(0/userid) (/str_time)",
                    "dev": true,
                    "dm": true,
                    "group": false
                },
                "copy_m": {
                    "short": "Language Newsletter",
                    "long": "🛡️ Argument - language code (ru en id)",
                    "arguments": "(lang_code)",
                    "dev": true,
                    "dm": true,
                    "group": false
                },
                "eval": {
                    "short": "Code execution",
                    "long": "🛡️ Code Execution",
                    "arguments": "",
                    "dev": true,
                    "dm": true,
                    "group": false
                },
                "get_username": {
                    "short": "Returning the User class by userid",
                    "long": "🛡️ Returning the User class by userid",
                    "arguments": "(userid)",
                    "dev": true,
                    "dm": true,
                    "group": false
                },
                "add_item": {
                    "short": "Adding Items",
                    "long": "🛡️ Adding Items",
                    "arguments": "(userid) (item_id) (col)",
                    "dev": true,
                    "dm": true,
                    "group": false
                },
                "create_company": {
                    "short": "Set up a company",
                    "long": "🛡️ Create an advertising campaign",
                    "arguments": "",
                    "dev": true,
                    "dm": true,
                    "group": false
                },
                "companies": {
                    "short": "View Companies",
                    "long": "🛡️ Viewing advertising campaigns",
                    "arguments": "",
                    "dev": true,
                    "dm": true,
                    "group": false
                }
            }
        },
        "additem_command": {
            "err": "Input Format:\n Item ID\n Quantity\n User's ID",
            "user": "💎 | Yo, the system was generous and gave you {item}",
            "dev": "💚 | Command Executed\n 🧨 | Item {item} \n 🎭 | User {username} \n 🌐 | Status Messages {message_status}"
        },
        "promo_commands": {
            "ui": {
                "text": "🔮 Promo code: `{code}` \n\n Activity: {status} \n Uses: {col} \n Ending in: {txt_time} \n Coins: {coins} \n Items: {items}",
                "buttons": [
                    "✅ Activate",
                    "🗑 Delete",
                    "🎋 Use"
                ]
            },
            "link": {
                "button_name": "🥙 Redeem a promo code!",
                "create": "The button has been created!",
                "not_found": "Promo code not found!"
            },
            "unlink": {
                "delete": "The button has been removed!",
                "not_found": "Message not found!"
            },
            "promo_open": "♾ Select the code to view the information.",
            "activate": "🎁 | Promo code activated! \n\n",
            "coins": "🎟 | Coins: {coins} \n",
            "items": "📦 | Items: {items}",
            "already_use": "🧸 | You've already used this promo code!",
            "time_end": "🎨 | The time for this promo code is up...",
            "max_col": "🧨 | The promo code has already been used the maximum number of times!",
            "deactivated": "✨ | This promo code is currently deactivated!",
            "not_found": "🎍 | Promo code not found, try to enter it again!",
            "no_user": "🎩 | You are not registered in the bot!"
        },
        "dungeon_err": "Cleanup is complete.",
        "start_game": "🥚 | Choose a dinosaur egg!",
        "command_dino_prof": "🥚 | You don't have any dinosaurs at the moment, please check your inventory. In your inventory, you must have an egg that you can incubate!",
        "faq": {
            "text": "🍿 | Hey, our bot is pretty big and there's a ton of information. Here are a couple of categories for you, choose what information you want to get >",
            "inline_buttons": {
                "faq general": "🎈 Total",
                "faq eat": "🥙 Meal",
                "faq accessories": "🧵 Accessories",
                "faq dungeon": "🗻 Dungeon"
            },
            "general": "🎈 *Rarity*\nEvents and dinosaurs are divided into rarities.\nThe greater the rarity, the sweeter the reward.\n\n 1. Regular - 50%\n 2. Unusual - 25%\n 3. Rare - 15%\n 4. Mystical - 9%\n 5. Legendary - 1%\n\n🕹 *Interaction*\nTo interact with the dinosaur, go to `🕹 Actions`.\n\n 1. To feed the dinosaur, you need to get food, click on `🕹 Actions` > `🍕 Food Gathering` and follow the instructions.\n\n 2. To feed the dinosaur, click on `🕹 Actions` > `🍣 Feed` and select the appropriate food.\n\n 3. In `🎮 Entertainment`, you can choose a game and entertain the dinosaur to cheer it up.\n\n 4. In `🎑 Travel` you can find different items, meet friends and see a lot of interesting things!\n\n 5. `🌙 Put to bed` dinosaur needs sleep every day, don't forget to put him to sleep!\n\n🎮 *Profile*\n To view inventory or see your stats, go to `👁‍🗨 Profile`\n\n🔧 *Settings*\nIn Settings, you can rename a dinosaur, disable notifications, or switch language.\n\n🛒 *Market*\nYou can sell or buy the things you need on the market.\n\n👥 *Friends*\nIn the friends menu, you can manage your friends and referral system. The more friends, the more opportunities to get some bonuses. Also, by inviting a friend through the referral system, you and your friend will receive pleasant bonuses.\n\n🦕 *Number of dinosaurs*\nEvery 20th level the number of dinosaurs increases by 1.\n20th level - 2 dinosaurs.\n 40th level - 3 dinosaurs...\n\n",
            "eat": "🥙 *What does my dinosaur eat?* \n Look at the profile of your dinosaur, dinosaurs live in their native environment. \n\n Herbivores are where there are a lot of grasses, predators are in forests/jungles, and those who like fish fly in the clouds. \n\n 🍕 *Sweets* \n 🍯 Jar of honey, 🥞 Sweet pancakes - dinosaurs love yummy treats and no matter what kind they are, they will happily eat them! \n\n Also, this food gives bonuses to mood / health, etc. \n\n You can find all the information about the item in the inventory!",
            "accessories": "🏓 *Accessories* \n Accessories open up additional possibilities or speed up the type of activity. \n Accessories can be installed while the dinosaur is not doing anything by using it in the inventory. \n Accessories can be found in travels or dungeons. \n\n 🎲 *Here are some of them...* \n 🧸 Teddy Bear - allows you to choose a sleep mode. \n 🛠 Tools - Speed up the collection of food.",
            "dungeon": "📜 *Quests* \n\n In the tavern you can get a quest (just wait in it), quests give interesting bonuses for the most ordinary actions! \n\n 🗻 *Dungeons* \n Embark on an exciting adventure with your friends! Adventures, bosses, unique items! \n You only need 200 coins to get into the dungeon! \n You don't need any starter equipment, and your dinosaurs can't die in it. \n\n 🍺 *Dino Tavern* \n Take a look at `‍🍺 Dino Tavern`, there you can find information from visitors, find other players. And also get quests!"
        },
        "not_set": {
            "info": "❗ Interact with Notification Settings, Select Notification Activity >",
            "True": "🔧 Notifications have been activated!",
            "False": "🔧 Notifications have been disabled!"
        },
        "inv_set_pages": {
            "info": "🎞 Select Inventory Display Mode (Standard 2 | 3)",
            "accept": "♠ Horizontal: {gr} \n ♣ Vertical: {vr}",
            "ans": [
                "2 | 3",
                "3 | 3",
                "2 | 2",
                "2 | 4",
                "1 | 4",
                "1 | 10"
            ]
        },
        "profile_view": {
            "info": "🦕 Select the type of panel display in the dinosaur profile:",
            "result": "👁 Mode selected: {res}",
            "ans": [
                "▶ Side",
                "🔽 From below",
                "🔼 Above",
                "❌ Without Panel"
            ]
        },
        "rename_dino": {
            "info": "🦖 | Enter a new name for {last_name} \n Size: no more than 20 characters >",
            "rename": "🦖 | Dinosaur was renamed {last_name} > {dino_name}"
        },
        "my_name": {
            "info": "🎩 Enter what your dinosaurs will call you. It can be your name, words, or a phrase no longer than 20 characters ->",
            "end": "🦕 Your dinosaurs will now call you \"{owner_name}\""
        },
        "add_friend": {
            "var": "*👥 | Choose how you want to add as a friend.* \n\n 🎣 1. *Via ID*. There is an individual user number in the user profile, select the method and send it to the bot. \n\n 💬 2. *Via Message*. Forward to me any message from a user. Keep in mind that your future friend has telegram privacy in the settings, the item \"Forwarding messages\" should be \"All\".",
            "var_buttons": {
                "add_friend id": "🎣 ID",
                "add_friend message": "💬 Message"
            },
            "check": {
                "nonint": "😣 You sent me no id! Id is a number, here's your id - {userid} \n\n Try again!",
                "nonbase": "❓ I couldn't find this person among the players, maybe he hasn't started incubating the egg yet. \n\n Try again!",
                "notyou": "🎲 Unfortunately, you can't add yourself as a friend. We promise that someday we will fix this bug! \n\n Try again!",
                "forward": "😣 I couldn't get the data of the author of the message. \n\n Try again!",
                "friends": "👥 After checking and interviewing the suspects, we found out that you are already friends!",
                "requests": "👥 After checking and interviewing the suspects, we found out that some of you have already sent a friend request!"
            },
            "var_messages": {
                "id": "🎣 Okay, send me the user ID, and I'll take care of routine things like checking in the database and the existence of the user.",
                "message": "💬 Well, send me a message from your friend, and I will do routine things like checking in the database and the existence of the user."
            },
            "correct": "✅ A friend request has been sent to a user!",
            "already": "🧨 The person has already received a friend request from you!"
        },
        "friend_list": {
            "wait": "👥 | Uploading Your Friends",
            "new_year": {
                "button": "🎁 Send a Gift",
                "send": "🎁 | Hey {name}, your friend {friend} has sent you a gift!",
                "no_send": "🎁 | This user has already received a holiday gift!"
            },
            "buttons": {
                "take_money": "✨ Transfer Coins",
                "take_coins": "🪔 Transfer Coins",
                "joint_dinosaur": "🦕 Share a dinosaur",
                "new_year": "🎁 Send a Gift",
                "change_name": "👥 Change Name",
                "change_friend_name": "👥 Change Name",
                "open_market": "🏪 Open shop"
            }
        },
        "requests": {
            "wait": "👥 | Uploading Requests",
            "accept": "✅ | {user_name} And you're friends now!",
            "decline": "❌ | A friend request from {user_name} was denied."
        },
        "friend_delete": {
            "delete_info": "➖ | Select someone to unfriend >",
            "confirm": "✅ | Are you sure you want to unfriend {name}?",
            "delete": "👥 | The user has been unfriended!"
        },
        "rayting": {
            "info": "👁‍🗨 | Which rating are you interested in?",
            "lvl": "🎢 Level",
            "coins": "🪙 Coins",
            "dungeon": "🗻 Dungeon",
            "super": "👑 Super Coins",
            "no_rayting": "❌ The ranking is not yet available...",
            "place": "*├* Your place in the ranking: #{place}",
            "my_place": "🦕 My Rivals",
            "lvl_text": "*└* Level: {lvl} Experience: {xp}",
            "coins_text": "*└* Coins: {coins}",
            "super_text": "*└* Coins: {super_coins}",
            "rayting_lvl": "*┌* 🎢 Level Rating:",
            "rayting_coins": "*┌* 🎢 Coin Rating:",
            "rayting_super": "*┌* 🎢 Super Coin Rating:",
            "premium": "*├* Subscriber ✨ DinoUltima"
        },
        "put_to_bed": {
            "dont_want": "🌙 The dinosaur doesn't want to sleep!",
            "sleep": "🌙 You've put the dinosaur to sleep!",
            "buttons": [
                [
                    "🛌 The Long Sleep",
                    "🛌 Short naps"
                ]
            ],
            "choice": "🌙 | Choose a dream type for the dinosaur >",
            "choice_time": "🌙 | Enter the time of REM sleep (sleep is 2 times faster than long sleep) in minutes >"
        },
        "awaken": {
            "down_mood": "🌙 Your dinosaur has awakened. He is very unhappy that you woke him up! \n⌛ Dinosaur slept {time_end}.",
            "not_sleep": "🌙 The dinosaur doesn't sleep!"
        },
        "p_profile": {
            "no_dino_no_egg": "🦕 | You don't have any dinosaurs / eggs to watch! Check the inventory, there should be an egg.",
            "dialog": "🍭 You have a letter from the corporation, we will talk about dinosaurs...",
            "text_info": "Information",
            "text_ost": "Left:",
            "rare_name": "Rarity:",
            "time_position": [
                465,
                220
            ],
            "rare_position": [
                465,
                280
            ],
            "incubation_text": "🥚 | Egg incubated, left: {time_end}",
            "stats": {
                "pass": "Doing nothing 💭",
                "sleep": "Sleeping 🌙",
                "game": "I'm playing 🎮",
                "journey": "Travels 🎴",
                "collecting": "Gathering food 🥞",
                "dungeon": "Conquering the dungeon 🗻",
                "freezing": "I'm frozen ❄",
                "kindergarten": "In kindergarten 🏡",
                "hysteria": "I'm hysterical! 💥",
                "farm": "On the Farm 🥕",
                "mine": "In the mine ⛏️",
                "bank": "In bank 👛",
                "sawmill": "At the Wood Chopper 🪚",
                "gym": "In hall 🏋️",
                "library": "In the library 📚",
                "park": "Walking 🏞️",
                "swimming_pool": "Swimming 💦",
                "craft": "Crafting item ⚒️",
                "unrestrained_play": "I play non-stop 😟",
                "inactive": "I'm frozen ❄"
            },
            "replics": {
                "heal": {
                    "80": "*┌* Wow, how good!",
                    "40": "*┌* Healthy",
                    "20": "*┌* Ahem, cough, I don't feel well...",
                    "0": "*┌* __I'm dying...__"
                },
                "eat": {
                    "80": "*├* With a full tummy",
                    "40": "*├* Site",
                    "20": "*├* Hungry",
                    "0": "*├* __I'm starving!__"
                },
                "game": {
                    "80": "*├* I'm Spider-Man!",
                    "40": "*├* I don't want to play",
                    "20": "*├* I miss you...",
                    "0": "*├* __I'm dying of boredom!__"
                },
                "mood": {
                    "80": "*├* I want to do good",
                    "40": "*├* In a great mood",
                    "20": "*├* Everything is fine",
                    "0": "*├* __I am sad...__"
                },
                "energy": {
                    "80": "*└* I'm ready to move mountains!",
                    "40": "*└* Full of energy!",
                    "20": "*└* I've got the strength",
                    "0": "*└* __I'm insanely tired :(__"
                }
            },
            "profile_text": "{em_name} *┌* Name: {dino_name} \n {em_status} *├* Status: {status} \n {em_rare} *├* Rarity: {qual} \n {em_age} *└* Age: {age}",
            "journey": {
                "text": "{em_journey_act} *┌* Journey",
                "info": "🏮 *├* Location: {location} \n ⌛ *├* Travels {journey_time} \n 🍭 *└* Events: {col}"
            },
            "game": {
                "text": "\n\n {em_game_act} *┌* Game",
                "game_end": "\n 🎟 *├* Will stop in {end}",
                "game_duration": "\n ⏳ *└* It's been {duration}"
            },
            "collecting": {
                "text": "\n\n {em_coll_act} *┌* Foraging\n",
                "progress": {
                    "collecting": "🌿 *└* Dinosaur collected {now} / {max_count} grasses.",
                    "hunt": "🍖 *└* Dinosaur collected {now} / {max_count}.",
                    "fishing": "🍤 *└* The dinosaur fished {now} / {max_count} fish.",
                    "all": "🥗 *└* Dinosaur collected {now} / {max_count}."
                }
            },
            "no_item": "No problem",
            "return": "🔮 | Back to the main menu!",
            "inline_menu": {
                "reset_activ_item": {
                    "text": "💍 Remove Item",
                    "data": "dino_menu reset_activ_item {dino}"
                },
                "mood_log": {
                    "text": "📜 About mood",
                    "data": "dino_menu mood_log {dino}"
                },
                "joint_dino": {
                    "text": "❌ Refuse",
                    "data": "dino_menu joint_cancel {dino}"
                },
                "my_joint": {
                    "text": "❌ Share",
                    "data": "dino_menu my_joint_cancel {dino}"
                },
                "kindergarten": {
                    "text": "🏡 Kindergarten (⭐)",
                    "data": "dino_menu kindergarten {dino}"
                },
                "backgrounds": {
                    "text": "🖼️ Background",
                    "data": "dino_menu backgrounds_menu {dino}"
                },
                "skills": {
                    "text": "⚡ Skills",
                    "data": "dino_menu skills {dino}"
                }
            },
            "joint": "(Joint)",
            "accs": {
                "journey": "{emoji} *{separator}* Travel: {item}",
                "collecting": "{emoji} *{separator}* Gathering food: {item}",
                "game": "{emoji} *{separator}* Game: {item}",
                "sleep": "{emoji} *{separator}* Sleep: {item}",
                "weapon": "{emoji} *{separator}* Weapons: {item}",
                "armor": "{emoji} *{separator}* Defense: {item}",
                "backpack": "{emoji} *{separator}* Storage: {item}"
            }
        },
        "inventory": {
            "null": "💥 | The inventory is empty.",
            "no_filter": "❌",
            "filters_data": {
                "fb12": {
                    "name": "🍕",
                    "keys": [
                        "eat"
                    ]
                },
                "fb45": {
                    "name": "🥚",
                    "keys": [
                        "egg"
                    ]
                },
                "k63d": {
                    "name": "💍",
                    "keys": [
                        "game",
                        "journey",
                        "collecting",
                        "sleep"
                    ]
                },
                "jd34": {
                    "name": "👢",
                    "keys": [
                        "material"
                    ]
                },
                "ns83": {
                    "name": "📜",
                    "keys": [
                        "recipe"
                    ]
                },
                "n48s": {
                    "name": "🗻",
                    "keys": [
                        "weapon",
                        "armor",
                        "ammunition"
                    ]
                },
                "n41s": {
                    "name": "🔮",
                    "keys": [
                        "case",
                        "special",
                        "book"
                    ]
                },
                "null": {
                    "name": "📚 Unfiltered",
                    "keys": [
                        "null"
                    ]
                }
            },
            "choice_filter": "⚙️ | Select the filter for the inventory below\n\n*List:*\n🥚 | Eggs\n🔮 | Other\n📜 | Recipes\n💍 | Accessories\n⛰ | Dungeon\n🍕 | Food\n👢 | Crafting Materials\n\n_✅ | Click on the checkmark below to save your filter settings. _",
            "search": "🔎 | Enter the name of the item you want to search:\n ❌ | Click on the cross below the message to exit the search.",
            "search_null": "❌ | Nothing matched your search terms, try entering a more accurate name!",
            "menu": "🎍 | Page *{page}* / *{col}*\n\n📜 | Use *Arrows* to move. \n🔎 | Use the *Magnifier* button to activate the search. \n⚙️ | Use the *Gear* button to select a filter. \n♻️ | Refresh the page.",
            "clear_filters": "\n 🗑 | Click on the trash can to clear the filters.",
            "update_page": "🔁 | Page updated",
            "update_search": "🔁 | Search Activated",
            "update_filter": "🔁 | Filter selection is active",
            "filter_null": "❌ | There are no items for this filter."
        },
        "copy_m": {
            "info": "A reply to a message with a text for mailing is required",
            "no_message": "There must be a reply to the message!"
        },
        "item_info": {
            "type_info": {
                "ALL": {
                    "type_name": "🍔 Meal",
                    "add_text": "*└* Efficiency: {act}"
                },
                "Flying": {
                    "type_name": "🐟 Meal",
                    "add_text": "*└* Efficiency: {act}"
                },
                "Herbivore": {
                    "type_name": "🌾 Meal",
                    "add_text": "*└* Efficiency: {act}"
                },
                "Carnivore": {
                    "type_name": "🥩 Meal",
                    "add_text": "*└* Efficiency: {act}"
                },
                "freezing": {
                    "type_name": "❄ Freeze",
                    "add_text": "*└* This item stops the dinosaur's metabolism and freezes it."
                },
                "defrosting": {
                    "type_name": "🔥 Defrost",
                    "add_text": "*└* The object restores metabolism in the dinosaur."
                },
                "egg": {
                    "type_name": "🥚 Dinosaur Egg",
                    "add_text": "*├* Incubation: {inc_time} \n *└* Egg rarity: {rarity}"
                },
                "game": {
                    "type_name": "🎮 Active Item",
                    "add_text": "*└* {item_description}"
                },
                "sleep": {
                    "type_name": "🌙 Active Item",
                    "add_text": "*└* {item_description}"
                },
                "journey": {
                    "type_name": "🎍 Active Item",
                    "add_text": "*└* {item_description}"
                },
                "collecting": {
                    "type_name": "🕸 Active Item",
                    "add_text": "*└* {item_description}"
                },
                "dummy": {
                    "type_name": "🕳 Dummy",
                    "add_text": "*└* Doesn't do anything and doesn't need anything"
                },
                "material": {
                    "type_name": "🧱 Material",
                    "add_text": "*└* This item is required for crafting."
                },
                "recipe": {
                    "type_name": "📜 Recipe for Creation",
                    "add_text": "*├* Created by: {create} \n *└* Materials: {materials} \n\n 📚 {item_description}"
                },
                "far": {
                    "type_name": "🔫 Weapons",
                    "add_text": "*├* Ammo: {ammunition} \n *└* Damage: {min} - {max}"
                },
                "near": {
                    "type_name": "🗡 Weapon",
                    "add_text": "*├* Stamina: {endurance} \n *└* Damage: {min} - {max}"
                },
                "ammunition": {
                    "type_name": "🌠 Munition",
                    "add_text": "*├* Additional. Damage: {add_damage} \n *└* Effect:..."
                },
                "armor": {
                    "type_name": "🛡 Armour",
                    "add_text": "*└* Reflection: {reflection} \n"
                },
                "backpack": {
                    "type_name": "🎒 Repository",
                    "add_text": "*└* Capacity: {capacity}"
                },
                "case": {
                    "type_name": "📦 Luck Box",
                    "add_text": "*└* Contents:\n {content}"
                },
                "book": {
                    "type_name": "📚 Record",
                    "add_text": "*└* {item_description}"
                },
                "special": {
                    "type_name": "🐠 Unique Item",
                    "add_text": "*└* {item_description}"
                }
            },
            "rank": {
                "common": "🤍 Usual",
                "uncommon": "💚 Unusual",
                "rare": "💙 Rare",
                "mystical": "💜 Mystic",
                "legendary": "💛 Legendary",
                "mythical": "❤ Mythic (Beyond)",
                "null": "➖ No"
            },
            "static": {
                "cap": "*┌* *🎴 Item Information*",
                "name": "*├* Title: {name}",
                "rank": "*├* Rank: {rank}",
                "type": "*├* Type: {type}",
                "uses": "*├* Used: 🎞 {0} / {1}",
                "endurance": "*├* Durability: 💎 {0} / {1}",
                "mana": "*├* Mana: 🔮 {0} / {1}",
                "stack": "*├* Includes: 🧊 {stack} state.",
                "add_bonus": "\n\n*┌* *🍡 Additional Bonuses*\n",
                "add_penaltie": "\n\n*┌* *📌 Additional Penalties*\n",
                "buttons": {
                    "use": {
                        "eat": "🍔 Feed",
                        "egg": "🥚 Incubate",
                        "game": "👒 Apply",
                        "sleep": "👒 Apply",
                        "journey": "👒 Apply",
                        "collecting": "👒 Apply",
                        "recipe": "⚒ Create",
                        "weapon": "🛡 Equip",
                        "backpack": "🛡 Equip",
                        "armor": "🛡 Equip",
                        "case": "📦 Open",
                        "special": "🔮 Use",
                        "book": "📕 Read"
                    },
                    "delete": "🗑 Throw away",
                    "exchange": "🔁 Give",
                    "created_item": "🛠 Craftable Item: {item}",
                    "buyer": "💰 Fence",
                    "custom_book": "✒ Overwrite",
                    "read_custom_book": "📖 Read"
                },
                "time_craft": "*├* Creation time: ⏳ {times}",
                "trs_dino": "*├* Dinosaur: {dino} {hp} / 100 ❤\n",
                "author": "*├* Item Author: {author}",
                "unnamed_author": "Unknown / None"
            },
            "bonuses": {
                "+heal": "Health Boost: {0} %",
                "+energy": "Energy Boost: {0} %",
                "+eat": "Increased satiety: {0} %",
                "+mood": "Mood Boost: {0} %"
            },
            "penalties": {
                "-heal": "Health Drop: {0} %",
                "-energy": "Energy Reduction: {0} %",
                "-eat": "Decreased satiety: {0} %",
                "-mood": "Low mood: {0} %"
            }
        },
        "item_use": {
            "cannot_be_used": "❌ This item cannot be used!",
            "no_item": "❓ The item has been changed or is no longer in the inventory, interacting with it is not available.",
            "eat": {
                "great": "🍕 | {dino_name} {activ} {item_name}, he is fed up at {eat_stat}%",
                "bad": "🍕 | {dino_name} doesn't taste {item_name}, it loses {loses_eat}% satiety!",
                "sleep": "🌙 Do not feed the dinosaur while sleeping.",
                "repeat": {
                    "m0": "❤ | Dinosaur tried something new, nutritional bonus {percent} %",
                    "m1": "❣ | Dinosaur satisfied with food, nutritional value {percent} %",
                    "m2": "🌯 | Dinosaur doesn't mind trying something new, nutritious {percent} %",
                    "m3": "🥙 | Dinosaur is a little tired of eating the same thing, nutritional {percent} %",
                    "m4": "🥞 | Dinosaur is a little tired of eating the same thing, nutritional {percent} %",
                    "m5": "🥙 | The dinosaur has been eating the same thing for a long time, he is not satisfied, nutritional {percent} %"
                },
                "eat": "ate",
                "drink": "drank"
            },
            "accessory": {
                "no_change": "⚒ You can't change the accessory for the activity that the dinosaur is currently doing!",
                "change": "🎴 | Active Item Installed!",
                "max_items": "🐊 The dinosaur already uses the maximum number of accessories!",
                "already_have": "🧠 A dinosaur cannot use 2 identical items at the same time!"
            },
            "recipe": {
                "not_enough_m": "❗ | Missing materials: {materials}",
                "consumable_item": "🧶 | Choose an item to be used in crafting (the result may change depending on the selection) ->",
                "create": "🛠 Recipe has been used, items that have been crafted: {items}",
                "enough_characteristics": "❗ | Item {item_name} doesn't have enough stat to use!",
                "not_choosed": "💥 | No items to choose from to use in crafting!",
                "choose_copy": "🍿 | Select a variation for item {item_name}\n(After clicking, item information will be displayed, click on the button below the message to confirm)",
                "inl_button_conf": "✅ Select options"
            },
            "case": {
                "drop_item": "📦 | From the magic box, you have {item_name} x{col}!"
            },
            "egg": {
                "egg_limit": "🥚 | At the moment you can only have {limit} dinosaur(s). Take a look at the handbook for more information.",
                "egg_answer": "🥚 | Choose a dinosaur egg!",
                "plug": "🏝 | The buttons are always active, but only work if you have an egg in your inventory.",
                "incubation": "{item_name} Sent for incubation! \n ⌛ | The End Through {end_time}",
                "edit_content": "🥚 | Egg chosen!"
            },
            "ammunition": {
                "one_item": "❌ | You can't combine an object with itself.",
                "combination": "🛠 | Items have been connected!",
                "comb_err": "❌ | An error occurred during the combination, please contact the developer!"
            },
            "special": {
                "reborn": {
                    "ok": "🦕 The dinosaur has been reborn!",
                    "limit": "🦕 | At the moment you can only have {limit} dinosaur(s). Take a look at the handbook for more information.",
                    "no_dinos": "🦕 | You are such a beautiful person, the world doesn't remember your lost dinosaurs!"
                },
                "premium": "🎆 | Congratulations on activating your premium at {premium_time}!",
                "defrost": {
                    "notinc": "🦕 This dinosaur is not frozen!",
                    "ok": "🧉 | The dinosaur has been thawed!"
                },
                "freez": "🧊 Dinosaur is frozen!"
            },
            "buff": {
                "+mood": "😀 | Dinosaur got +{unit} % to Mood! \n",
                "-mood": "😥 | Dinosaur got {unit}% to mood! \n",
                "+eat": "🥪 | Dinosaur regained {unit}% satiety!\n",
                "-eat": "🥪 | Dinosaur lost {unit}% satiety!\n",
                "+energy": "⚡ | Dinosaur recovered {unit}% of energy!\n",
                "-energy": "⚡ | Dinosaur lost {unit}% of its energy!\n",
                "+heal": "❤ | Dinosaur recovered {unit} % Health! \n",
                "-heal": "❤ | Your dinosaur lost {unit}% of its health!\n"
            }
        },
        "css": {
            "no_dino": "🧵 You don't have a dinosaur to interact with",
            "wait_count": "📅 Enter the number of uses or select it from the suggested list ->",
            "confirm": "🛠 Confirm Use {name}",
            "combine": "⚒ Choose an item to combine with {name} ->",
            "delete": "🗑 Confirm the deletion {name}",
            "dino": "🦕 Select a dinosaur/egg from the list",
            "friend": "🎮 Choose a friend ->",
            "inactive_dino": "🦕 Choose only frozen dinosaurs!",
            "no_photo": "📷 | The bot was unable to detect the photo in your message.",
            "content_str": "📦 | Enter a text not exceeding the length of {max_len} characters:"
        },
        "about_menu": {
            "team": "<b>🎭 | Bot Team</b>\n<i>We all do a lot of things at once, but everyone has a role to play... </i> \n\n💻 @AS1AW - Developer\n💻 @magecode - Developer\n💽 @KatranLife - Host Provisioning\n\n🎨 @unknown_cat13 - Designer\n\n⚽️ @despating - Tester\n\n<b>🗝 | Author of localization</b>\n<i>Everyone can translate the bot into their native language. \n Would you like to help with the translation? Refer to @AS1AW\n\n</i>{lang_name} - {author}",
            "links": "**🔗 | The Great Connection**\nHorror dinosaurs are everywhere! \n\n📢 News channel - @DinoGochi\n\n👥 Forum - @DinoForum"
        },
        "support_command": {
            "info": "💸 | Coin support\nWe are a team working on the bot only on our own. The bot is free and constantly evolving for you. If you like the bot, then you could support it with a coin! \n\n🎨 | Support Methods\n\n",
            "items": "🎨 Set Items: {items}",
            "currency_answer": "💲 Select the currency you want to pay by clicking on the button below ->",
            "currency": "💲 Selected currency: {currency}",
            "col_answer": "🌟 Select the number by clicking on the button below ->",
            "buy": "🦕 Your order has been placed, a message for payment has appeared at the bottom!",
            "buy_button": "✨ Donation Instructions",
            "products_bio": {
                "non_repayable": {
                    "name": "☕ Gratuitous",
                    "image": "images/remain/support/non_repayable.png",
                    "short": "We are grateful for any amount!",
                    "description": "🔮 Any amount gives us faith in a tomorrow where we play and travel with our dinosaurs!",
                    "photo_url": "https://github.com/Rimuwu/DinoGochi/blob/main/images/remain/support/non_repayable.png?raw=true"
                },
                "dino_ultima": {
                    "name": "⚡ DinoUltima",
                    "image": "images/remain/support/dinoultima.png",
                    "short": "Ultra subscription for you and your dinosaurs!",
                    "description": "🖼 Ability to set any picture instead of background! \n🍼 Look after my dinosaur - send your dinosaur to kindergarten for any time! \n✨ Display Ultra status in all lists. \n🧶 Increasing the limits on food collection. \n🏝 Additional locations on the trip. \n🎮 Additional games. \n🦕 +1 to the dinosaur limit. \n🎠 Set any image for the store menu. \n🕹 Increase in promotion limits. \n🎟️ Ads can be disabled.",
                    "photo_url": "https://github.com/Rimuwu/DinoGochi/blob/main/images/remain/support/dinoultima.png?raw=true"
                },
                "rescue_kit": {
                    "name": "❤ Rescue Kit",
                    "image": "images/remain/support/rescue_kit.png",
                    "short": "Save my dinosaur!",
                    "description": "😣 Have you forgotten about your dinosaur and now it is very bad and needs to do something urgently?! \n ❤ This is where the rescue kit comes in! It has everything you need!",
                    "photo_url": "https://github.com/Rimuwu/DinoGochi/blob/main/images/remain/support/rescue_kit.png?raw=true"
                },
                "reborn": {
                    "name": "💥 Dinosaur Revival",
                    "image": "images/remain/support/reborn.png",
                    "short": "Resurrect my dinosaur!",
                    "description": "🔮 Level 10 magic will revive your dinosaur!",
                    "photo_url": "https://github.com/Rimuwu/DinoGochi/blob/main/images/remain/support/reborn.png?raw=true"
                },
                "moth_rest": {
                    "name": "🧊 Freeze Dinosaur (1 month)",
                    "photo_url": "https://raw.githubusercontent.com/Rimuwu/DinoGochi/main/images/remain/support/freezing.png",
                    "image": "images/remain/support/freezing.png",
                    "short": "A break from a dinosaur for 1 month!",
                    "description": "🧊 Everyone needs a break sometimes, take a break for a month and don't worry that something will happen to the dinosaur!"
                },
                "pause": {
                    "name": "🧊 Freeze Dinosaur",
                    "photo_url": "https://raw.githubusercontent.com/Rimuwu/DinoGochi/main/images/remain/support/freezing.png",
                    "image": "images/remain/support/freezing.png",
                    "short": "Freeze my dinosaur!",
                    "description": "🧊 Take a break from the dinosaur indefinitely, take care of your own life!"
                },
                "super_coins": {
                    "name": "✨ Super Coins",
                    "photo_url": "https://raw.githubusercontent.com/Rimuwu/DinoGochi/main/images/remain/support/super_coins.png",
                    "image": "images/remain/support/super_coins.png",
                    "short": "Super coins for super users!",
                    "description": "✨ Top up your Super Coins balance to get access to Super Items!"
                }
            },
            "free_enter": "🎥 Enter below how many stars you want to send to the developer.",
            "create_invoice": "🎩 Account created!"
        },
        "delete_action": {
            "delete": "🗑 | Item {name} x{count} removed!",
            "error": "❌ | The item has not been removed, it may not be in the inventory"
        },
        "user_profile": {
            "user": "*┌* 🎴  *ᴜsᴇʀ ᴘʀᴏғɪʟᴇ*\n*├* *Name:* {name}\n*├* *ID:* `{userid}`\n*└* *Subscription:* {premium_status} ",
            "level": "*┌*🏮 *ʟᴇᴠᴇʟ*\n*├* *Level:* {lvl}\n*├* *Experience:* {xp_now} | {max_xp}\n*├* *Super Coins:* {super_coins}\n*└* *Coins:* {coins}",
            "dinosaurs": "*┌*🦖 *ᴅɪɴᴏsᴀᴜʀs*\n*├* *Forgotten*: {dead}\n*├* *Living:* {dino_col}",
            "dino": "   *└* 🦕 *{dino_name}* ({owner})\n      *├* *Status:* {dino_status}\n      *├* *Rarity:* {dino_rare}\n      *└* *Age:* {age}\n\n",
            "egg": "   *└* 🥚 *{egg_quality}*\n      *└* *Left:* {remained}\n\n",
            "dino_owner": {
                "owner": "Its",
                "noowner": "Joint"
            },
            "friends": "*┌*👥 *ғʀɪᴇɴᴅs*\n*├* *Friends:* {friends_col}\n*└* *Query:* {requests_col}",
            "inventory": "*┌* 🎈 *ɪɴᴠᴇɴᴛᴏʀʏ*\n*└* *Items:* {items_col}",
            "no_premium": "❌",
            "stats": {
                "pass": "💭 Resting",
                "sleep": "🌙 Sleeps",
                "game": "🎮 Plays",
                "journey": "🎴 Travels",
                "collecting": "🥞 Gathers food",
                "dungeon": "🗻 Conquers the Dungeon",
                "freezing": "❄ Frozen",
                "kindergarten": "🏡 In kindergarten",
                "hysteria": "💥 Hysterical",
                "farm": "🥕 On the farm",
                "mine": "⛏️ In the mine",
                "bank": "👛 In the bank",
                "sawmill": "🪚 At the Wood Chopper",
                "gym": "🏋️ In the Hall",
                "library": "📚 In the library",
                "park": "🏞️ In the Park",
                "swimming_pool": "💦 Swimming.",
                "craft": "⚒️ Creates an item",
                "unrestrained_play": "😟 Plays to calm down",
                "inactive": "❄ Frozen"
            },
            "market": {
                "caption": "*┌* 🛍️ *ᴍᴀʀᴋᴇᴛ*",
                "market_name": "*├* *Name:* {market_name}",
                "earned": "*└* *Earned:* {coins}"
            }
        },
        "custom_profile": {
            "manual": "🖼 | Send the bot an image (if the bot doesn't respond to your message with an image, then the image is not appropriate)\n\nIf you want to delete the image, enter 0",
            "ok": "✨ | Photo set",
            "error": "🦕 | The bot tried to install the image and received an error ("
        },
        "delete_me": {
            "confirm": "❓ | Are you sure you want to delete ALL account data?",
            "dead_dino": "❓ | Are you ready to take responsibility for killing all living dinosaurs, as well as erasing all old dinosaurs from memory?",
            "rex_boss": "❓ | Are you sure you're handing over all your coins and items to RexBoss?",
            "code": "🎞 | Enter `{code}` to confirm your actions (this is definitely the last captcha)",
            "incorrect_code": "... I see you don't really want to delete your account, but I'll give your items and coins to the boss anyway.",
            "delete": "🎨 Thanks for playing, if that we are always here."
        },
        "tavern_dialogs": [
            "They say terrible monsters roam the dungeons...",
            "My dinosaur can knock down 20 of these!",
            "Don't tell me, ha ha ha!",
            "They say the items in the high-end dungeon...",
            "Yesterday I was walking, some kind of glowing stone fell to me...",
            "Have you seen what a terrible face this goblin has?!",
            "Yes, I eat them for breakfast!",
            "How do they fight with these blunt swords?",
            "I'm not going back there!",
            "Are you afraid to go down into the dungeon?!",
            "My friend Bari went there 21 years ago, I'm still waiting...",
            "Yesterday I saw the Hero come out of the dungeon with a golden sword!",
            "Don't tell fairy tales, there's no one scary there!",
            "Tell me how you lost your eye in this dungeon...",
            "I'm not afraid! It's just that there are no coins to enter...",
            "Which time will it be, the 21st? And how much have you taken away from there already?",
            "yes uh...",
            "No, no...",
            "Kidding?",
            "AHA HA HA!",
            "Ho ho ho...",
            "Are you crying?!",
            "Drink?!",
            "Good news, pour!",
            "Piggy Pig",
            "Demon....",
            "They say there are many treasures hidden in the dungeons...",
            "My dinosaur can slice any monster into pieces!",
            "It is said that the dungeons are inhabited by ancient evil spirits...",
            "I found 2 gold coins in the dungeon!",
            "I've heard that you can find a secret passage to the treasure in the dungeon...",
            "A real hero on two legs, and my dinosaur hero on four!",
            "It is said that ancient relics can only be found in dungeons...",
            "My dinosaur is so fast that it runs around any monster!",
            "The dungeon is cool, the perfect place for adventure on a hot summer day...",
            "I know where a few chests with an abundance of jewels are hidden!",
            "Hey, I told you my dinosaur was cooler!",
            "It's always a good idea to be on a team with a strong dinosaur...",
            "Victory over the monster is exclusively in the hands of precious swords!",
            "I have a map that leads directly to the riches in the dungeon...",
            "The winner will get all the opportunities!",
            "I just defeated a monster. It was so easy!",
            "They say there are tons of gold coins to be found!",
            "My dinosaur is a real predator!!",
            "I feel like a real hero!",
            "It was the easiest battle of all time!",
            "It is said that even the most experienced mage will not be able to pass this level!",
            "I've read the guide - the dungeon is full of fruitful places!",
            "The monsters in the dungeon are already shaking with our names!",
            "I know how to win any dungeon battle!",
            "I have a favorite armor that never betrays me!",
            "The caterpillars carry my team together and I know they will never abandon me...",
            "Don't feed other people's monsters - win!",
            "The best way to curb a monster is to simply grab it by the tail!",
            "This ladron is stealing my fluids and useful stuff, isn't it?!",
            "I know where the monsters are hiding, but I won't tell you...",
            "Slash, block and dodge! These are the most important rules in the manual!",
            "The dungeon is filled with mysterious knowledge...",
            "Maybe it's a sight to hunt us with this toy, but I'm ready for it!",
            "Victory is the only way to wealth!",
            "Look at my dinosaur, he's a real beast!",
            "All means and resources must be used to win!",
            "I will know this magic formula for the rest of my life!",
            "This whole picture required our mental faculties to become true mastery!",
            "I've got everything laid down to win fast!",
            "The job isn't done until the battle is won!",
            "My dinosaur is the real king of the dungeons",
            "When our dreams come true!",
            "This monster already feels us, but we will defeat it!",
            "All the dungeons I know and my dinosaur is the best of the best!",
            "I never tire of fighting in this dungeon!",
            "I've found the magic formula that will ensure we win!",
            "This dungeon has all the opportunities to learn and become a top player!",
            "Our team is a real miracle for monsters!",
            "This is our underworld, and we are kings here!",
            "My dinosaur can defeat any creature in this dungeon!",
            "It is said that ancient knowledge is hidden under this obelisk...",
            "I can't believe I actually found this magic sword!",
            "We successfully took possession of this treasure - it was so easy!",
            "Our team has unique abilities and technologies to win!",
            "My dinosaur won't be idle when it comes to winning!",
            "What a superb battle!!",
            "I've found the key to the gate that leads to the treasure!",
            "Our dinosaur is the best team and nothing will stop us!",
            "We will win this battle because we are a team of like-minded people!",
            "This monster will never know that there are winners waiting for him!",
            "Maybe I am the only one who needs to win, but my dinosaur is not going to concede to anyone.",
            "It's a scary place, but I'm glad my dinosaur is near me.",
            "I've heard that this dungeon is home to scary monsters, but I'm ready for them!",
            "Fighting in this dungeon is what we're here for.",
            "It is said that there are hidden treasures somewhere inside this dungeon.",
            "My dinosaur is a very skilled fighter and I have no doubt that we will defeat any monster in our path.",
            "Now I'm sure that nothing can stop me or my dinosaur from fighting in this dungeon.",
            "We're here to win, and we won't leave until we find what we're looking for.",
            "I've heard of scary monsters and evil spirits, but with my dinosaur, that's not a problem.",
            "Our team can defeat anyone in this dungeon!",
            "My dinosaur and I are ready for any challenge that comes our way in this environment.",
            "Dungeons can be dark and scary, but they hide the deepest knowledge.",
            "Going through all these labyrinths and battles is definitely an adventure that I will never forget.",
            "I think our dinosaur is one of the best in this underground world.",
            "Every level we complete proves that my dinosaur is the best of the best.",
            "They say technique is crucial, and we have the best.",
            "I found the first chest of gold in this dungeon!",
            "Maybe I find monsters at every turn, but my dinosaur is ready to defeat all of them.",
            "In this underworld, you need to be prepared for any difficulties on the way to victory.",
            "We don't have an upper frame to win this dungeon - there's always more we can do.",
            "I don't know what I'm more afraid of than anything else - monsters or losing my dinosaur.",
            "My dinosaur can defeat any monster or all-terrain vehicle in this underworld.",
            "They say the treasure inside this dungeon is here somewhere, but we keep looking...",
            "One of our tricks is that it burns all of your opponent's armor!",
            "Our team is real fighters who can win at any moment!",
            "No one can get better than me and my dinosaur in this underworld!",
            "I found another way to win this battle with my dinosaur.",
            "If my dinosaur and I stay together, I know we can do more.",
            "They say there are apex predators here, but my dinosaur is an exception.",
            "We need to get as far away as possible to avoid the raging monsters.",
            "It is our duty to find ways to win in this underworld.",
            "My dinosaur always produces the technical difficulties of monsters!",
            "I learn something new every day and improve our combat skills in this underworld.",
            "We go through some of the darkest and most intricate levels in this underground world.",
            "They say if you want to win, you have to have a powerful dinosaur.",
            "We continue to search for treasures in this underground world, and I am sure we will find them.",
            "Our team rises above all obstacles in this underworld.",
            "I found another way to play until the end of our trip with my dinosaur.",
            "This dungeon is my element, and I feel comfortable here.",
            "My dinosaur is so powerful that it can destroy an enemy in seconds.",
            "There is no stopping us because we are constantly improving our skills in this underground world.",
            "I spend every day here in this dungeon to make sure we can handle any problems.",
            "This is where I feel like a real hero.",
            "I know what people will say, but I'm a real top player in this underground world.",
            "Our team is capable of defeating anyone in this underground world, and we will prove it!",
            "I have found another journey for us in this underworld, and I am sure that we will emerge victorious.",
            "For my dinosaur, there's no better place than this dungeon.",
            "I'm ready for more, and my dinosaur is ready with me.",
            "This fight can be difficult, but I know that my dinosaur and I can win.",
            "I am sure that with our team, we can make our way all the way in this underground world."
        ],
        "tavern_enter": [
            "Upon entering the tavern, you feel a pleasant coolness and hear the sounds of creaking wooden furniture, the aroma of food and drinks then makes you break out of hunger.",
            "When you return to the tavern, you see many tables drenched in beer and freshly squeezed juices, as well as a crowded society that is having a loud and cheerful rest after a long day.",
            "At the entrance, you are greeted by bright lights and a soulful atmosphere surrounding this place, crowded with tourists and locals warmly welcoming every new guest.",
            "As you walk inside, you see a huge bar full of various drinks and a noisy crowd clogging every corner of the tavern, which is bustling with life and tempting food.",
            "Looking around, you notice a dark interior soaked in alcohol and smoking products, and a group of musicians playing on the stage in the center of the hall reminds you of life on the road.",
            "You enter a tiny tavern dotted with wooden barrels lining the walls and floor tanks supporting the underground tank, while a bartender standing on the counter prepares your favorite cocktail with a smile on his face.",
            "The surroundings of the tavern are immersed in a measured stillso, when you get inside, you notice a calm that disposes to relaxation, and the walls are covered with an old picture and inscriptions extracted by guests, which creates a warm mood.",
            "Entering the huge tavern, you will find several cozy areas where you can spend time with family and friends, the upper floor surprises you with a unique dynamic lighting system, it makes the hall peacefully sing and dance, merging into the unique roof of the building.",
            "On this calm evening, full of the fragrance of delicious homemade food, you latch the door of the main hall of the tavern and a calm spiritual corner opens for you in the middle of the fog tower, which fascinates with its depth and mystery.",
            "Entering a small tavern, you see a cozy and inviting potion, where alternative music and the aromas of fast food play, creating a real carefree leisure time.",
            "When you cross the threshold of the tavern, you feel the warm magic and meet the wide bar counter, where happy guests are already watching what is happening.",
            "As soon as you enter the tavern, you will immediately feel the atmosphere of friendliness, relaxation and enjoyment of royal cuisine.",
            "You smile wryly and sit down at a long table filled with food and drinks, where there is a large screen showing games.",
            "Once inside, you immediately know that she represents everything you'd expect from a tavern, where loud conversations, live music, and abundant food rightfully take the top spot.",
            "Embraced by the scents of a gourmet gala dinner, you gaze at juicy steaks and bottles of expensive wine, where shining glasses and soles make guests relax and enjoy the evening.",
            "Inside the tavern, you can see a mounted bar, lively chatting guests, and fiery factories that make the atmosphere even more fiery.",
            "Opening the door of the tavern, look at the faces of the smiling bartenders with three liters of cups, immediately creating a peaceful and soulful corner to relax and exercise for the whole week.",
            "Surrounded by dark plasters, you can smell freshly baked bread and spices as the aromas fly into the nostrils of the guests, creating a pleasant atmosphere.",
            "Everything in the tavern, where live music is played, is imbued with national flavor and the liveliness of the locals, who offer various drinks and snacks on the go.",
            "Entering the hall, where all the most interesting things happen, you find a comfortable place on the sofa, the music makes you sing and dance, generous with the soulful mood for the guests.",
            "With working lights and soft noise, the tavern attracts with its romance and deep aroma of food, and the regulars are always ready to welcome a new guest.",
            "On the cozy chairs inside, the soft notes of the guitar resonate, creating comfort for those who want to sit in a cozy environment after a hard day.",
            "As soon as you enter the beautifully decorated hall, you will feel a warm welcome, in addition to the fragrant kitchen area with rich national dishes.",
            "With the clinking of cups and the delicate colouring of colourful colours, the guests of the tavern are here to relax and enjoy the aesthetic pleasure of the commendable curves of dancing, the smells of food and drink.",
            "Shrouded in a fog of dope and cloudiness, the tavern attracts with its cozy and soulful atmosphere, as well as its addition of aesthetic nostalgia.",
            "With the creaking of wooden furniture and valuables set on the curved walls, you feel warm and cozy.",
            "A pleasant atmosphere of friendliness and abundance lies in every corner of this tavern, where music plays and the hospitality of friendly bartenders will not leave you indifferent.",
            "In a misty hall decorated with confetti and green lanterns, guests relax in various zones, smoke hookahs and experience various national foods.",
            "The aromas of hard liquor, as well as hot fried food, reliably remind us of life in the key of carefree pleasure, which is inherent in this tavern.",
            "Opening the door of this tavern, the cozy atmosphere buys you with warmth, lightness and optimistic coziness, providing relaxation and entertainment for guests.",
            "Connecting with the sensations from the best days of your childhood, you immediately take root between pelicans, down jackets and join the cheerful bratva, who frown at life, smoke, socialize and drink in the tavern company.",
            "When you relax, you feel the peace and brightness inside this tavern, where loud music, longing, hot food, as well as drinks, are in the first place.",
            "Upon entering the tavern, you are surrounded by abundance and hospitality, in which guests enjoy fried food, good music and a cheerful mood.",
            "Entering a tavern lit by lamps, you will find a lively crowd screaming loudly and knocking bottles in gratitude to the hospitable bartenders and good cuisine."
        ],
        "entertainments": {
            "answer_game": "🎮 | Choose what the dinosaur will play >\n\n⌛ | Last dinosaur played: {last_game}",
            "game": {
                "console": "🎮 Console",
                "snake": "🪁 Serpent",
                "pin-pong": "🏓 Ping pong",
                "ball": "🏐 Ball",
                "puzzles": "🧩 Puzzles",
                "chess": "♟ Chess",
                "jenga": "🧱 Jenga",
                "dnd": "🎲 D&D",
                "monopolia": "🎩 Monopoly",
                "bowling": "🎳 Bowling",
                "darts": "🎯 Darts",
                "golf": "⛳ Golf"
            },
            "game_text": {
                "m0": "☺ | How fun it is to play {game}!",
                "m1": "😃 | Again {game}? Well, it seems interesting.",
                "m2": "😐 | It's as if we have nothing but {game} ...",
                "m3": "😣 | Why do I only play {game} all the time?",
                "penalty": "❗ | The percentage of pleasure is {percent} %"
            },
            "answer_text": "🎮 Specify the amount of time allowed to play, and the dinosaur will choose how long it will play >",
            "time": {
                "sdj4": {
                    "text": "15 - 30 min.",
                    "data": [
                        15,
                        30
                    ]
                },
                "34ns": {
                    "text": "30 - 60 min.",
                    "data": [
                        30,
                        60
                    ]
                },
                "sd4s": {
                    "text": "60 - 90 min.",
                    "data": [
                        60,
                        90
                    ]
                },
                "fso3": {
                    "text": "90 - 120 min.",
                    "data": [
                        90,
                        120
                    ]
                }
            },
            "invite_friend": {
                "text": "🦕 | Dinosaurs are much more fun to play with friends, why not invite them?",
                "button": "🎩 Invite"
            },
            "dino_join": "🦕 Dinosaur {dinoname} has joined the game!",
            "join_end": "🦕 The dinosaur has already stopped playing!",
            "zero": "🎮 The dinosaur itself will choose how much it will play in this interim. \n\n ⏲ If the dinosaur has a timer in active items, you will be able to find out how much time is left until the end of the game in the profile."
        },
        "stop_game": {
            "dislike": "🎮 | The dinosaur didn't really like to play, he doesn't lose his spirits.",
            "like": "🎮 | The dinosaur isn't happy that you stopped it!",
            "whatever": "🎮 | The dinosaur stopped playing.",
            "dont_tear": "🎮 | You can't tear the dinosaur away from the game, try again. Mind you, the dinosaur will be upset.",
            "unrestrained_play": "🎮 | The dinosaur is in a state of nervous breakdown, it is better not to touch it."
        },
        "collecting": {
            "way": "🌴 | Choose where the dinosaur will go to forage for food >",
            "result": {
                "collecting": "🌿 | {dino_name} I went to pick berries and herbs. \n 🎲 | Target: {count} 🥬",
                "hunt": "🍖 | {dino_name} went hunting. \n 🎲 | Target: {count} 🥩",
                "fishing": "🍤 | {dino_name} went fishing. \n 🎲 | Target: {count} 🐟",
                "all": "🥗 | {dino_name} went to the general gathering of food. \n 🎲 | Target: {count} 🍟"
            },
            "buttons": {
                "collecting": "🌿 Weald",
                "hunt": "🍖 Scaffolding",
                "fishing": "🍤 Lakes",
                "all": "🥗 All Together"
            },
            "wait_count": "📅 Enter how much the dinosaur needs to collect >",
            "stop_button": {
                "collecting": "❌ Stop Collection",
                "hunt": "❌ Stop the Hunt",
                "fishing": "❌ Stop Fishing",
                "all": "❌ Stop Collection"
            },
            "progress": {
                "collecting": "🌿 | The dinosaur collected {now} / {max_count} herbs.",
                "hunt": "🍖 | Dinosaur collected {now} / {max_count}.",
                "fishing": "🍤 | Dinosaur fished {now} / {max_count} fish.",
                "all": "🥗 | Dinosaur collected {now} / {max_count}."
            },
            "max_count": "❌ | Your inventory is bursting with food, now it has {eat_count} units of food! ({eat_count} + {add_count} > {max_c})"
        },
        "optionplus": {
            "update_page": "🔁 | Page updated"
        },
        "referals": {
            "have_code": "🎲 You already have the code generated!",
            "generate": "👥 | How do you want to generate the code? \n\n 🎲 Random - The bot will generate a code from random characters. \n 👛 Price: Free \n\n 🎩 Custom - Enter any word and it will become your code. \n 👛 Cost: {price} coins",
            "var_buttons": {
                "generate_referal random": "🎲 Accidental",
                "generate_referal custom": "🎩 Its"
            },
            "code": "🎲 Your code has been added to the database, don't forget to share it with your friends! \n\n 🎩 Code: `{code}` \n\n 🔗 Ref: `{url}`",
            "my_code": "🎩 Code: `{code}` \n\n 🔗 Ref: `{url}` \n\n 🥕 Uses: `{uses}`",
            "custom_code": {
                "start": "🎩 Enter any word without using special characters, no more than 10 characters ->",
                "max_len": "🎩 Your code is more than 10 characters, try again!",
                "min_len": "🎩 Don't use special characters and try again!",
                "found_code": "🎩 This code is already taken, try again!",
                "no_coins": "🎩 You don't have enough coins to create a code, try to create a random code!"
            },
            "enter_code": {
                "start": "🔗 Enter your friend's code ->",
                "True": "🎩 A friend's code has been activated! \n 🎁 Your reward: {coins} coins, {items}",
                "False": "❌ Your friend's code was not found or is your own code!",
                "have_code": "👤 You've already redeemed your friend code!"
            }
        },
        "dialogs": {
            "dead_last_dino": {
                "people_name": "👤 Unknown",
                "start": {
                    "system": true,
                    "text": "✉ You have a message from an unknown source.",
                    "buttons": {
                        "m1": {
                            "text": "✉ Open",
                            "answer": "Let's see what's out there..."
                        }
                    }
                },
                "m1": {
                    "text": "Greetings, dear {user_name}. We have received a report about the extermination of dinosaurs, do you confirm this information?",
                    "previous": "start",
                    "buttons": {
                        "m2-n": {
                            "text": "❌ No!",
                            "answer": "No, I don't know anything about that."
                        },
                        "m2-y": {
                            "text": "✅ Yes...",
                            "answer": "Yes... It happened by accident..."
                        }
                    }
                },
                "m2-y": {
                    "text": "Glorious, pass me your reputation ticket",
                    "previous": "m1",
                    "buttons": {
                        "m3-y": {
                            "text": "🔗 Transfer data",
                            "answer": "Here.. You are welcome... I'm really sorry..."
                        }
                    }
                },
                "m2-n": {
                    "text": "Yes? According to our data, this is exactly the case.",
                    "previous": "m1",
                    "buttons": {
                        "m3-n": {
                            "text": "✅ Keep Lying",
                            "answer": "It's probably my twin brother..."
                        }
                    }
                },
                "m3-n": {
                    "text": "{people_name} He looks at you with a smile. It's already clear, he knows you're lying.",
                    "previous": "m2-n",
                    "system": true,
                    "buttons": {
                        "m2-y": {
                            "text": "❌ Confess",
                            "answer": ""
                        },
                        "m4-n": {
                            "text": "✅ Lie",
                            "answer": "Yes, yes, yes! My brother is a disgusting man!"
                        }
                    }
                },
                "m3-y": {
                    "text": "According to your reputation, we have a quotation for you. Here's a look at the contract.",
                    "previous": "m2-y",
                    "buttons": {
                        "m4-y": {
                            "text": "📃 View",
                            "answer": "Okay, let's take a look."
                        }
                    }
                },
                "m4-n": {
                    "text": "I see you don't want to do it in a good way... I like it, we need the bold ones in our business, here, sign it.",
                    "previous": "m3-n",
                    "buttons": {
                        "m5-n": {
                            "text": "📃 View",
                            "answer": "Okay, let's take a look."
                        }
                    }
                },
                "m4-y": {
                    "text": "📃 After reading the contract, you find out that you give away 80% of your savings and all inventory to the organization, and in return, the organization gives you an egg of indeterminate rarity.",
                    "previous": "m3-y",
                    "system": true,
                    "buttons": {
                        "end-y": {
                            "text": "🖋 Sign",
                            "answer": "I like it, I sign it."
                        }
                    }
                },
                "m5-n": {
                    "text": "📃 After reading the contract, you find out that you give 70% of your savings and all inventory to the organization, and in return, the organization gives you an egg of indeterminate rarity.",
                    "previous": "m4-n",
                    "system": true,
                    "buttons": {
                        "end-n": {
                            "text": "🖋 Sign",
                            "answer": "I like it, I sign it."
                        }
                    }
                },
                "end-y": {
                    "text": "Great, nice to do business with you)",
                    "previous": "m4-y"
                },
                "end-n": {
                    "text": "Great, nice to do business with you)",
                    "previous": "m5-n"
                }
            }
        },
        "mood_log": {
            "info": "🎠 General Mood Modifier: `{result}` \n",
            "event_info": "🎋 Status: {action} ({event_time}) \n",
            "breakdown": {
                "seclusion": "💥 Seclusion",
                "hysteria": "😭 Hysterics",
                "unrestrained_play": "🎮 Unbridled Fun"
            },
            "inspiration": {
                "game": "Inspiration for games",
                "collecting": "Inspiration for Gathering",
                "journey": "Travel Inspiration",
                "sleep": "Inspiration for Sleep",
                "craft": "Inspiration for creation",
                "farm": "Inspiration for farming",
                "mine": "Inspiration for digging",
                "bank": "Inspiration for working in a bank",
                "sawmill": "Inspiration for chopping",
                "gym": "Inspiration for Hard Sport",
                "library": "Inspiration for reading",
                "park": "Inspiration for a walk",
                "swimming_pool": "Inspiration for swimming",
                "exp_boost": "Inspiration for experience"
            },
            "good_sleep": "Slept well",
            "end_game": "Played well",
            "multi_games": "Lots of fun",
            "multi_heal": "Wellbeing",
            "multi_eat": "Fed",
            "multi_energy": "Lots of energy",
            "dream": "I had a dream",
            "good_eat": "Ate a delicious meal",
            "playing_together": "Played with a friend",
            "bad_sleep": "I didn't sleep much",
            "stop_game": "The game was interrupted",
            "little_game": "Not enough entertainment",
            "little_heal": "Feeling unwell",
            "little_eat": "Hungry",
            "little_energy": "Tired",
            "bad_dream": "I had a nightmare",
            "bad_eat": "Tasteless food",
            "repeat_eat": "Repetitive food",
            "journey_event": "Travel Events",
            "sunshine": "Sunny weather",
            "breeze": "Pleasant breeze",
            "rain": "Caught in the rain",
            "cold_wind": "A cold wind blew",
            "meeting_friend": "Met Friends",
            "drought": "Dry air",
            "snowfall": "Caught in a snowfall",
            "magic_light": "Saw the magic light",
            "magic_animal": "Saw a magical animal",
            "pet": "I was stroked!",
            "break": "I was hit 💥",
            "positive_talk": "Interesting conversation",
            "negative_talk": "The conversation did not go well...",
            "hard_work": "Hard work...",
            "simple_work": "Easy work!",
            "repeat_activity": "I'm doing the same thing...",
            "overloading": "Overloaded with training..."
        },
        "journey_start": {
            "ask_loc": "🌳 | Choose where the dinosaur will go this time\n\n",
            "cancel_text": "🎈 Select a location by clicking on the button. If you cancel, the buttons will become unavailable.",
            "complexity": {
                "text": "🎏 | You can read about the complexity and what it means here",
                "button": "🎈 About the difficulty"
            },
            "locations": {
                "forest": {
                    "name": "🌲 Forest",
                    "text": "🌲 A forest with giant trees where a dinosaur can explore a variety of flora and fauna. \n *🐘 Complexity*: 🟢 Easy"
                },
                "lost-islands": {
                    "name": "🏝 The Lost Isles",
                    "text": "🏝 A lost island where a dinosaur can explore a long-lost, ancient world. \n *🐘 Complexity*: 🟢 Easy (There are non-dangerous animals)"
                },
                "desert": {
                    "name": "🏜 Desert",
                    "text": "🏜 A desert where a dinosaur can explore ancient pyramids or meet grandiose serpents! \n *🐘 Complexity*: 🟡 Medium"
                },
                "mountains": {
                    "name": "🗻 Mountains",
                    "text": "🗻 Mountains with crystal caves where a dinosaur can hunt dragons and fight goblins. \n *🐘 Complexity*: 🔴 Hard"
                },
                "magic-forest": {
                    "name": "🔮 Magic Forest",
                    "text": "🔮 A magical forest where the dinosaur has to make his way through traps, learning the secrets of the forest. \n *🐘 Complexity*: 🔴 Hard\n _✨ Available with DinoUltima_ subscription"
                }
            },
            "time_info": "⌛ | Choose how long the dinosaur will explore the location",
            "time_text": {
                "t10": {
                    "text": "10m",
                    "time": 600
                },
                "t30": {
                    "text": "30m",
                    "time": 1800
                },
                "t60": {
                    "text": "60m",
                    "time": 3600
                },
                "t90": {
                    "text": "90m",
                    "time": 5400
                },
                "t120": {
                    "text": "120m",
                    "time": 7200
                },
                "t240": {
                    "text": "240 min.",
                    "time": 14400
                }
            },
            "start": "🎏 | Dinosaur went to {loc_name} on {time_text}",
            "start_2": "📜 | Check the latest events on the trip to be aware of what your dinosaur has done!"
        },
        "journey_complexity": "*🖼 | About the difficulty of the journey* \n\n *🟢 It's easy* - No risk or dangerous collisions, suitable for beginners. Events only affect the mood, the dinosaur will not be harmed. \n\n *🟡 Middling* - Dangerous situations can occur in such locations, but mostly neutral ones. \n\n *🔴 Difficult* - There are many more dangerous events than neutral ones, you need to go here prepared. \n\n _The greater the risk, the greater the reward_",
        "send_action": {
            "game": {
                "send": "🎩 | Dinosaur player {username} invites you to play together. \n 🦕 | When dinosaurs play together, their game is more interesting and their mood increases!",
                "send_button": "🎩 Join",
                "for_me": "🐘 | The invitation has been sent to the player's dinosaurs {friendname}, you will receive notifications as soon as a friend joins the game!"
            },
            "journey": {
                "send": "",
                "send_button": "🎩 Join",
                "for_me": ""
            },
            "error": "❌ | Couldn't send a message to a person"
        },
        "invite_to_action": "🔮 | Select a user to invite",
        "join_to_action": {
            "one_dino": "🎏 | You can't use the same dinosaur"
        },
        "alredy_busy": "❗ | Your dinosaur is already busy, check out the profile!",
        "joint_dinosaur": {
            "check": "🦕 | Are you sure you want to share a dinosaur?",
            "message_to_friend": "🦕 | You've received an offer from {username} to co-operate a dinosaur {dinoname}.",
            "button": [
                "🔮 Accept",
                "💥 Refuse"
            ],
            "max_owners": "🦕 | A dinosaur can't have more than 2 hosts!",
            "max_dino": "🎋 | This user already has a joint dinosvr!",
            "ok": "🎮 | The offer has been sent to the user!"
        },
        "take_dino": {
            "max_dino": "🎋 | You already have a dinosaur together!",
            "max_owners": "🦕 | A dinosaur can't have more than 2 hosts!",
            "ok": "🦕 | Congratulations! {dinoname} is now available on your dinosaur list!",
            "message_to_owner": "🦕 | {username} can now control your dinosaur {dinoname}!"
        },
        "cancle_joint": {
            "confirm": "🎩 | Are you sure you want to give up control of the dinosaur?"
        },
        "my_joint": {
            "confirm": "🎩 | Are you sure you want to unshare your dinosaur?",
            "m_for_add_owner": "🎩 | {username} canceled your dinosaur sharing."
        },
        "take_money": {
            "col_coins": "🍡 | Specify how many coins you want to transfer, the maximum number is {max_int}",
            "transfer": "🦄 | Unicorn courier brought a package\n\n 🖼 Sender: {username} \n 👑 Coins: {coins}",
            "send": "👑 | Coins shipped!",
            "no_coins": "❌ Failed to send coins",
            "zero_coins": "🦕 Dinosaurs cry because you don't have coins :("
        },
        "take_coins": {
            "col_coins": "🍡 | Specify how many coins you want to transfer, the maximum amount is {max_int}",
            "transfer": "🦄 | Unicorn courier brought a package\n\n 🖼 Sender: {username} \n 👑 Super Coins: {coins}",
            "send": "👑 | Coins have been shipped!",
            "zero_coins": "🦕 Dinosaurs Cry Because You Don't Have Coins :("
        },
        "remove_accessory": {
            "choose_item": "⏲ Choose which item to remove",
            "remove": "💍 The accessory has been removed and placed in your inventory!"
        },
        "buy_ale": {
            "me": "🍻 | The bartender handed a mug 🍺 of ale to your friend",
            "friend": "🍻 | The bartender hands you a mug 🍺 of ale and points to your friend {username}",
            "no_coins": "❌ | You don't have that many coins!"
        },
        "tavern_sleep": "🌙 You've fallen asleep at a table in a tavern.",
        "quests": {
            "authors": [
                "Craven Lear",
                "Thorburn Drogh",
                "Gracewood Rivers",
                "Irinia Lungreen",
                "Eliada Teneris",
                "Hanard the Dark",
                "Dragmil Golden Hand",
                "Melvorn Cold Fire",
                "Scarlett Dyst",
                "Kirkwood Despair",
                "Thick Forest",
                "Midgard Storm",
                "Liis Shadowbow",
                "Keldrin Infinite Force",
                "Furvin Blackblood",
                "Bryna Silver Bough",
                "Drakar Stormhammer",
                "Pericles whispers of the Serpent",
                "Hertwig Steel Blade",
                "Layeen Lair of Scales",
                "Carys Flower of the Moon",
                "Lyle Thunder's Prayer",
                "Colmena Fallen Angel",
                "Ulimar Star Warrior",
                "Orin Elf",
                "Silent Blade Raid",
                "Mordokai Warlock Order",
                "Isolah White Hill",
                "Recruit Moonlight",
                "Nancy Frowning",
                "Timberlin Boar Game",
                "Stasil the Wild Horse",
                "Gavin Dynamite",
                "Elaryn the Lernaean Serpent",
                "Belram Love of Water",
                "Annison Archon's Sword",
                "Gibon Dagger of the Warrior",
                "Saedis Fire Nail",
                "Grundor the Raging Orc",
                "Kirbrach the Dark Archer",
                "Tiara Greatsword",
                "Sanjay Blood Dagger",
                "Kaylen Flower of Life",
                "Emera the Lionheart",
                "Arryn the Ghost Hunter",
                "Halloween Sharp Blade",
                "Lyren the Mad Mage",
                "Kaarr the Fundamental Dragon",
                "Hilla White Eagle",
                "Farion Bloodshed Program"
            ],
            "get": [
                "Secret Trade Alliance",
                "Searching for provisions",
                "Gathering Resources",
                "Procurement for Survival",
                "Smuggling of supplies",
                "Covert Operation: Searching for Stockpiles",
                "Market Negotiations",
                "Battle for Supplies",
                "Mission in the market",
                "Active trading operations",
                "In search of supplies!",
                "Standby supplies",
                "Operation Procurement",
                "Black Market",
                "Selective gathering of supplies",
                "Walk through the market",
                "Diet Hunt",
                "Extraction of Production Resources",
                "To earn supplies",
                "Let's Talk About Supplies",
                "Secret Deals",
                "Transportation of supplies",
                "Backup supplies in the event of a cataclysm",
                "Resource Hunting",
                "Trading Maneuvers",
                "Non-stop Supply Gathering",
                "Market Trading",
                "Private warehouses",
                "Scavenging for Supplies",
                "Finding a Diet",
                "Purchase by Availability",
                "Humane Deliveries",
                "Smuggled Resource",
                "Treasure in the Market",
                "Commercial Contract",
                "Mining & Transportation",
                "Exchange of goods",
                "Operation Predators",
                "Market Outlook",
                "Securing warehouses",
                "Useful Resources on the Market",
                "Investing in resources",
                "Supply Hunt",
                "Market Search",
                "Smuggling for survival",
                "Supply Chain",
                "Market: Source of Supplies",
                "Security and protection of warehouses",
                "Supply Logistics",
                "Covert Market Penetrations"
            ],
            "kill": [
                "Thunderblade",
                "Bloody Finger",
                "Poison Blade",
                "Crazy Frontier",
                "Fearsome Hunter",
                "Deadly Gaze",
                "Shadow Puzzle",
                "Bloody Path",
                "Giant Slayer",
                "Heart of Darkness",
                "Blade of the Wild Hunt",
                "Bloody Finale",
                "Harvest Hour",
                "Barbed Alarm",
                "Blood Strike",
                "Nightblade",
                "Deadly Crete",
                "The Last Shot",
                "Blood Wind",
                "Beast Slayer",
                "Poison Curse",
                "Hunter's Fury",
                "Last Breath",
                "Murder Vortex",
                "Bloody War",
                "The Last Zilch",
                "Assassin's Blade",
                "Deadly Massacre",
                "Demon Hunter",
                "Merciless Killer",
                "Death Pulse",
                "In the Name of Victory",
                "Bloody Wrath",
                "Invigorating Poison",
                "Bleeding Sword",
                "Blood Swarm",
                "Death Wyvern",
                "Bonecrushing Sword",
                "Blade of Unstoppability",
                "Killer Mantiss",
                "Bloody Adventure",
                "Blade of Doom",
                "Ultimate Strike",
                "Blood Ritual",
                "Lightning Trap",
                "Killer Bolt",
                "Blade of Chaos",
                "Fury of Madness",
                "The Last Hunt",
                "War Against the Killers"
            ],
            "game": [
                "Egg Finder",
                "Speed Competition",
                "Jungle hide-and-seek",
                "River crossing",
                "Run along the gorge",
                "Collecting tree roots",
                "Cave Search",
                "Sword fighting",
                "Search for the Lost City",
                "Clash of the Giants",
                "Mineral Mining",
                "Judo Combat",
                "Helicopter ride",
                "Collecting Gold",
                "Dinosaur Hunt",
                "Rally along the coast",
                "Berry picking",
                "Archery",
                "Selling on the market",
                "Search for thugs"
            ],
            "journey": [
                "In the footsteps of ancient animals",
                "Three-Horned Hunt",
                "Desert Zone Traversal",
                "Exploring the Ancient Pyramids",
                "Trekking through glacial fields",
                "Journey through the jungle",
                "River of Giants",
                "In the footsteps of primitive people",
                "Through the Deep Valleys",
                "Searching for Relics of an Ancient Civilization",
                "Climbing to the top of a high mountain",
                "Crossing a wide river",
                "Exploring the Dark Caverns",
                "Survival during the Mesozoic Era",
                "Search for Ancient Remains",
                "Journeys through uncharted lands",
                "Dangerous Lands for Survival",
                "Dinosaur Treasure Map",
                "Hike through dangerous swamps",
                "Drive Forward"
            ],
            "fishing": [
                "In Search of the Pearl Crocodile",
                "In the vastness of lake waters",
                "Into the Dinosaur Trap",
                "To the fishing base",
                "Ride the Wave",
                "Jackpot Fishing",
                "In Search of Red Fish",
                "Battle for the Catch",
                "Fishing Championship",
                "Fishing on an unnamed river",
                "Boat trip",
                "River crossing",
                "Cooking crabs",
                "#1 fisherman OF the past",
                "Goldfish Fishing",
                "Dynamics on the lake",
                "Battle for the Bottom of the River",
                "Fishing in caves",
                "Legendary Fishing",
                "In Search of Sweet and Salty Fish"
            ],
            "collecting": [
                "In Search of the Dictosphere",
                "Berry picking in remote valleys",
                "Camels and dinosaurs",
                "Finding a Spice Caravan",
                "Archery for animals",
                "Dinosaur Festival",
                "In Search of an Oxygen Source",
                "Hot Lunch Adventure",
                "Making Animals Do Useful Things",
                "Survival in uncharted territories",
                "Show Your Survival Skills"
            ],
            "feed": [
                "Delicious Flavors",
                "A journey into the culinary world",
                "Discover new flavors",
                "The Most Delicious Dishes",
                "Explore the palatability",
                "Gastronomic Walk",
                "Special Flavors",
                "Culinary Finds",
                "Creativity with food",
                "Gourmet dishes",
                "Experiment with flavors",
                "Amazing Culinary Combinations",
                "Gastronomic discoveries",
                "Impressive Taste Experience",
                "Original recipes",
                "The Magic of Taste",
                "Seductive culinary compositions",
                "Uncover all the secrets of taste",
                "Life in Taste",
                "Exclusive dishes"
            ],
            "hunt": [
                "Wolf Hunting",
                "Secrets of the Forest",
                "Chasing the Beast",
                "The Legend of the Archer",
                "Tooth Hunter",
                "The Way of the Hunter",
                "Fox Hunting",
                "The Bear's Trail",
                "Secrets of the Hunt",
                "Forgotten Mining",
                "Wild Goose Hunting",
                "Horn Hunter",
                "Wild Pig Re-Investigation",
                "Felina's Trail",
                "Hunting for ungulates",
                "Bow Master",
                "Mystery of the Trail",
                "Wild boar hunting",
                "Hunter on the Trail",
                "Shadow Hunt",
                "Silver Trail",
                "The Legend of the Splinter",
                "Panther Chase",
                "Tiger Hunter",
                "Hidden Loot",
                "Big Game Hunting"
            ]
        },
        "quest": {
            "had": "📜 *|* *{name}*\n\n📌  *Ordered*: {author}",
            "complexity": "🎭 *Complexity*: {complexity}",
            "comp_element": "⭐",
            "type": "🎨 *Purpose*: {qtype}",
            "types": {
                "get": "🔎 Search",
                "journey": "🖼 Journey",
                "hunt": "🏹 Hunt",
                "collecting": "🐇 Gathering food",
                "fishing": "🍤 Fishing",
                "game": "🎮 Game",
                "kill": "🔪 Murder",
                "feed": "🥟 Flavor Checker"
            },
            "reward": {
                "had": "🍀 *|* *Reward*",
                "coins": "🪙 Coins: {coins}",
                "items": "🎱 Items: {items}"
            },
            "buttons": {
                "quest end": "📌 Finish",
                "quest delete": "🔗 Delete"
            },
            "quest_menu": "📜 | Quest Menu\n\n 🔚 Completed: {end} \n 🎭 Active: {act}",
            "delete_button": "You declined the quest",
            "end_quest_button": "Completed the quest",
            "not_found": "💥 | Quest not found!",
            "time_end_h": "⌛ Quest timed out! The quest was passed to another player with the current progress.",
            "get": "🔎 Find and transfer items:\n {items_list}",
            "game": "⌚ Play {now} / {min} minutes.",
            "journey": "⌚ Travel {now} / {min} minutes.",
            "feed": "🍿 Feed a dinosaur:\n {eat_list}",
            "collecting": "🥦 Collect {now} / {max} herb items.",
            "fishing": "🐟 Catch {now} / {max} items.",
            "hunt": "🍖 Catch {now} / {max} items.",
            "time_end": "_⏳ After {time_end} the quest will be transferred to another player._",
            "new": "🆕 | You've been given a new quest!",
            "resаmpling": "🗝️ | You've been given another player's quest!",
            "end_quest": "✨ Quest *{name}* completed, *{author_name}* was satisfied with your work and gave you a reward!",
            "conditions": "🎃 The conditions of the quest have not been met!"
        },
        "not_authorized": "🎋 You're not logged in to the bot, type /start to get started!",
        "events": {
            "time_year": {
                "winter": "❄ It's cold in the world right now, events display temperatures, and the profile has been changed to a winter theme.",
                "spring": "🌸 The temperature fluctuates, but it gets warmer, the appearance of the profile is changed to the spring theme.",
                "summer": "☀ The sun is shining, the weather is good in the world, and the appearance of the profile has been changed for summer.",
                "autumn": "🍁 Nature is getting ready for winter, the temperature fluctuates, and the background of the profile is painted in the brightest colors!"
            },
            "add_hunting": "🍖 At the moment, you can find something interesting in the forests.",
            "add_fishing": "🐠 The water is restless, maybe you will find something interesting there!",
            "add_collecting": "🌿 The herbs shone with different colors, you can definitely find amazing grass there!",
            "add_all": "🍭 There are problems in the general search mode, candies are falling from the sky!",
            "new_year": "🎄 It's time to celebrate and give gifts to friends! Check out your friends list!",
            "info": "🎨 | Active Events\n\n",
            "april_1": "❓ It is not recommended to wear white.",
            "april_5": "🎂 Happy Birthday DinoGochi! Check out the news channel and enjoy 2x XP and gifts in food gathering!"
        },
        "daily_award": {
            "info": "🎋 *|* *Daily Reward* \n By logging in every day, you can get nice bonuses\n\n 🏮 *|* *Level 1*: *Player* - Nice login bonuses, here's what you can get: _{lvl_1} 🪙 _\n\n 🎏 *Level 2*: *Trainer* - Nice bonuses for logging in and subscribing to the channel, here's what you can get by clicking on the button: {lvl_2} 🪙",
            "bonus_text": "\n\n 🎍 *|* *Additionally*: - If you add *Dinogochi* to your name, the following will be added to your daily reward: _{bonus} _ 🪙 \n\n 🎍 Example add:\n {name_dino}",
            "lvl_now": "\n\n 👑 At the moment, you will receive a reward level \n",
            "1": " *🏮 Player*",
            "2": " *🎏 Trainer*",
            "bonus": "+ *🎍 Ext. Name Bonus*",
            "buttons": {
                "channel_url": "🗝️ Subscribe",
                "rename": "🦕 Change Name",
                "activate": "🎋 Claim Reward"
            },
            "in_base": "🎋 You've already claimed the Daily Reward today, come back for it tomorrow!",
            "use": "👑 Daily reward received, don't forget to claim it again via {time}! \n\n🌸 Today you received: {items}, {coins} 🪙"
        },
        "journey": {
            "forest": {
                "forced_exit": [
                    "The dinosaur turned in the wrong direction and came out of the forest."
                ],
                "without_influence": [
                    "Walking through a beautiful forest, the dinosaur spotted a butterfly, staring at it and did not notice how it became darker."
                ],
                "influences_health": [
                    "Walking under the crowns of giant trees, the dinosaur saw grasses. He immediately remembered how they had been told about Gulgameshev's grass at school. By applying it, the dinosaur felt healthier."
                ],
                "meeting_friend": [
                    "Walking along the path, I came out to meet - {friend}! The dinosaurs were very happy to meet each other!"
                ],
                "trade_item": [
                    "Traveling through the woods, the dinosaur stumbled upon an itinerant trader, the merchant offered the dinosaur a couple of possible deals."
                ],
                "edit_location": [
                    "Traveling through the forest, the dinosaur found a completely new road that he hadn't noticed before, he decided to follow it. Moving on, the environment began to change."
                ],
                "positive": {
                    "influences_mood": [
                        "Walking along the path, the dinosaur saw a beautiful rainbow, the dinosaur immediately felt warmer in his soul."
                    ],
                    "influences_eat": [
                        "Walking along the path, the dinosaur noticed candy that led somewhere into the bushes. 1, 2, 3. The dinosaur is already near the bushes, but the dinosaur has already eaten enough and moved on."
                    ],
                    "influences_game": [
                        "A dinosaur jumped in puddles after rain."
                    ],
                    "influences_energy": [
                        "The dinosaur took a nap in the clearing, now it's time to move on!"
                    ],
                    "coins": [
                        "Walking along the path and looking under a rock, the dinosaur found something golden and took it with it."
                    ],
                    "item": [
                        "Passing by the tree, the dinosaur found it strange that there were so many footprints around. After exploring the area, the dinosaur found something interesting!"
                    ],
                    "quest": [
                        "While walking, the dinosaur met a sad dinosaur. He said he had lost his red hat. Your dinosaur immediately went in search of it. The dinosaur found the hat (even though it was green) and got the reward!"
                    ]
                },
                "negative": {
                    "influences_mood": [
                        "While walking, the dinosaur saw a felled tree, he was very upset about it..."
                    ],
                    "influences_eat": [
                        "I'm actively traveling, the dinosaur has passed."
                    ],
                    "influences_game": [
                        "Walking through the monaton forest, the dinosaur gets bored, he wants to play."
                    ],
                    "influences_energy": [
                        "Climbing under each rock, the dinosaur got very tired and sat down to rest."
                    ],
                    "coins": [
                        "Going through the items found, the dinosaur considered the square coin to be a fake and threw it away."
                    ],
                    "item": [
                        "A hole formed in the dinosaur's backpack, because of this the dinosaur could have lost something."
                    ],
                    "quest": [
                        "Walking, the dinosaur saw a crying dinosaur, coming up, the dinosaur could not make out his words. After digging in your pockets, your dinosaur offered to eat the poor man, but he just left."
                    ]
                }
            },
            "lost-islands": {
                "forced_exit": [
                    "The dinosaur turned around and went out onto the already familiar road home."
                ],
                "without_influence": [
                    "While walking on the beach, the dinosaur discovered a beautiful shell."
                ],
                "influences_health": [
                    "While relaxing on the beach, the dinosaur was able to relax under the sun."
                ],
                "meeting_friend": [
                    "Looking at the waves, the dinosaur saw {friend} that was sunbathing not far from him."
                ],
                "trade_item": [
                    "While walking on the beach, the dinosaur saw a crab with a large bag. The crab tells the dinosaur that he is a merchant and that he likes to buy and sell all sorts of things."
                ],
                "edit_location": [
                    "Walking close to the shore, the dinosaur did not notice the waves, it was overwhelmed by water, and when it woke up, it was no longer on the beach."
                ],
                "positive": {
                    "influences_mood": [
                        "Dinosaur build a sand castle, the dinosaur is proud of itself."
                    ],
                    "influences_eat": [
                        "Looking up, the dinosaur found an unknown fruit. The dinosaur was quick to eat this sweet fruit."
                    ],
                    "influences_game": [
                        "The dinosaur saw the crabs playing with the ball and joined them."
                    ],
                    "influences_energy": [
                        "After sunbathing on the beach, the dinosaur is ready to travel again!"
                    ],
                    "coins": [
                        "While collecting shells, the dinosarv saw something shiny, which turned out to be a coin."
                    ],
                    "item": [
                        "While digging in the sand, the dinosaur suddenly stumbled upon a chest. Hitting the lock hard, the dinosaur opened the chest and hid everything from there in his backpack."
                    ],
                    "quest": [
                        "While walking along the beach, the dinosaur saw the dolphin washed ashore, the dinosaur helped it, and the dolphin gave it a reward."
                    ],
                    "battle": [
                        "Aggressive animals appeared in the way of the dinosaur, they definitely wanted to do something bad to the dinosaur. The dinosaur wagged its tail and lo and behold, no one was gone."
                    ]
                },
                "negative": {
                    "influences_mood": [
                        "Walking along the beach, the dinosaur saw a dinosaur running away from crabs on the other side. He felt sad, because sometimes even cute creatures can be dangerous."
                    ],
                    "influences_eat": [
                        "Actively swimming in the water, the dinosaur went crazy."
                    ],
                    "influences_game": [
                        "The dinosaur was bored with the calm environment."
                    ],
                    "influences_energy": [
                        "Running on the sand, the dinosaur forgot that it knows how to get tired."
                    ],
                    "coins": [
                        "Running and jumping, the dinosaur completely forgot about the backpack. The crabs wasted no time and stole a couple of coins."
                    ],
                    "item": [
                        "Running and jumping, the dinosaur completely forgot about the backpack. The crabs wasted no time and stole the dinosaur's important items."
                    ],
                    "quest": [
                        "While making its way through the vines, the dinosaur heard someone looking for friends to play ball. Running to the source of the sound, the dinosaur saw crocodiles in black, who demanded a ransom from the dinosaur."
                    ],
                    "battle": [
                        "While walking, the dinosaur did not notice at all how it approached the \"Dangerous Animals\" base, so it had to run away with its tail."
                    ]
                }
            },
            "desert": {
                "forced_exit": [
                    "The dinosaur took a wrong turn and finally left the desert."
                ],
                "without_influence": [
                    "Walking among the sands, the dinosaur saw water, but quickly realized that it was a mirage."
                ],
                "influences_health": [
                    "Traveling through the desert, the dinosaur discovered an unknown plant that grows alone among the sands. The dinosaur ate it..."
                ],
                "meeting_friend": [
                    "Among the sands, the dinosaur sees something bright white. That's {friend}! Dinosaurs are very happy with each other!"
                ],
                "trade_item": [
                    "A mysterious animal appeared on the way, he opens his bags and shows shiny, the dinosaur is interested in something..."
                ],
                "edit_location": [
                    "A storm rises, you can't see anything, but now, the dinosaur clears its eyes from the sand, and it is no longer in the desert."
                ],
                "positive": {
                    "influences_mood": [
                        "A light breeze was blowing, which is especially pleasant in such hot weather."
                    ],
                    "influences_eat": [
                        "In such conditions, sometimes you want something exotic, such as a cactus. The dinosaur liked it."
                    ],
                    "influences_game": [
                        "Jumping on the sands as if on waves, the dinosaur imagines itself as a shark."
                    ],
                    "influences_energy": [
                        "After resting in the shade under a palm tree, you can continue your journey."
                    ],
                    "coins": [
                        "The winds excavated an ancient village, walking through it, the dinosaur collected some coins."
                    ],
                    "item": [
                        "On the way of the dinosaur there is a giant structure - a pyramid, after studying it, the dinosaur found something interesting."
                    ],
                    "quest": [
                        "Walking on the sands, the dinosaur notices an old tiger, which asks for some water. The dinosaur happily shared the water and received a reward."
                    ],
                    "battle": [
                        "The unprecedented heat has turned the animals into monsters, they are ready to do anything for food. But Dinozarv is always ready to stand up for himself."
                    ]
                },
                "negative": {
                    "influences_mood": [
                        "The dinosaur feels lonely among these sands, it is sad."
                    ],
                    "influences_eat": [
                        "There is only sand everywhere, there is nothing tasty, the dinosaur is hungry."
                    ],
                    "influences_game": [
                        "Playing with sand is no longer so interesting, I want to play something more interesting."
                    ],
                    "influences_energy": [
                        "It is very difficult to walk in such heat, the dinosaur is tired."
                    ],
                    "coins": [
                        "Suddenly, a strong wind blew, and the dinosaur's bag flew a couple of meters away from him. When he picked it up, he didn't find a couple of coins."
                    ],
                    "item": [
                        "Suddenly, a strong wind blew, and the dinosaur's bag flew a couple of meters away from him. The dinosaur picked it up and walked on, the bag noticeably lighter."
                    ],
                    "quest": [
                        "There is a fence ahead, it seems to stretch for hundreds of meters, in order not to go around, you need to pay."
                    ],
                    "battle": [
                        "Aggressive animals stood in front of the dinosaur, the dinosaur did not want to fight, so we had to run away."
                    ]
                }
            },
            "mountains": {
                "forced_exit": [
                    "The dinosaur took a wrong turn and came down from the mountains."
                ],
                "without_influence": [
                    "The dinosaur saw snowflakes falling beautifully from the sky."
                ],
                "influences_health": [
                    "The dinosaur performed a ritual to harden its body, restoring its dorov."
                ],
                "meeting_friend": [
                    "Among the snowdrifts, the dinosaur sees something bright, it is {friend}! Dinosaurs are happy to see each other!"
                ],
                "trade_item": [
                    "Walking along the trail, the dinosaur meets a polar bear, who tells him that he is also traveling and wants to exchange some goods."
                ],
                "edit_location": [
                    "The dinosaur had been walking in the snow for so long that it dozed off when it opened its eyes, it was definitely not in the mountains."
                ],
                "positive": {
                    "influences_mood": [
                        "Dinosaur made a snow angel in the snow, he really liked it."
                    ],
                    "influences_eat": [
                        "Walking along the path, the dinosaur got a piece of cake on its head, it turned out to be very tasty."
                    ],
                    "influences_game": [
                        "Running after the snowflakes and pounding on the crystals, the dinosaur did not notice how a couple of hours had passed."
                    ],
                    "influences_energy": [
                        "The dinosaur lay down to rest in a cave with a stone under its head."
                    ],
                    "coins": [
                        "Accidentally smashing one of the crystals, the dinosaur found a couple of coins."
                    ],
                    "item": [
                        "Digging through the snow, the dinosaur stumbled upon something solid, he decided to take this “something” with him."
                    ],
                    "quest": [
                        "Walking along the path, the dinosaur met a hare. The hare said that he could not get his hat, which he left in a dark cave. The dinosaur went to the cave and very quickly found the hat with the help of a torch."
                    ],
                    "battle": [
                        "Aggressive animals saw the dinosaur warming itself by the fire and decided to take it away. But the dinosaur is not a coward, he stood up for himself and the fire."
                    ]
                },
                "negative": {
                    "influences_mood": [
                        "The dinosaur got its feet wet in the snow, it makes it sad."
                    ],
                    "influences_eat": [
                        "There is nothing edible among the rocks and caves, the dinosaur is hungry."
                    ],
                    "influences_game": [
                        "It's a snowstorm, the dinosaur has taken refuge in a cave, but there's nothing to play here."
                    ],
                    "influences_energy": [
                        "It is very difficult to walk in the snow, the dinosaur is tired."
                    ],
                    "coins": [
                        "Walking along the path, the dinosaur fell into a snowdrift, climbing out of it he stole a couple of coins."
                    ],
                    "item": [
                        "Walking along the path, the dinosaur fell into a snowdrift, climbing out of it, it cursed something, but did not want to climb there again."
                    ],
                    "quest": [
                        "Going out into the open, the dinosaur saw a wolf that was stuck under the snow, the dinosaur immediately tried to help. It turned out to be a trap, and the dinosaur lost something from its backpack while fleeing."
                    ],
                    "battle": [
                        "Running through the forest, the dinosaur did not even notice how it ran into the lair of wild animals, so it had to run away."
                    ]
                }
            },
            "magic-forest": {
                "forced_exit": [
                    "The dinosaur took a wrong turn and came out of the magical forest."
                ],
                "without_influence": [
                    "Walking through the magical forest, the dinosaur noticed how beautifully the leaves shimmered."
                ],
                "influences_health": [
                    "While walking along the path, the dinosaur met a fairy who healed its wounds."
                ],
                "meeting_friend": [
                    "While traveling through a magical forest, the dinosaur met his friend {friend}!"
                ],
                "trade_item": [
                    "Following a magical path, the dinosaur met a magical merchant. The dinosaur was very interested in his products."
                ],
                "edit_location": [
                    "Taking a wrong turn, the dinosaur took a completely different path and came out of the magical forest."
                ],
                "positive": {
                    "influences_mood": [
                        "Walking along the road, the dinosaur noticed fairies playing with each other, the dinosaur was very amused."
                    ],
                    "influences_eat": [
                        "After gathering the magic spices from the bushes and eating them, the dinosaur felt that he had had enough of them."
                    ],
                    "influences_game": [
                        "Walking along the path and looking behind the dervo, the dinosaur discovered a magical tennis championship there!"
                    ],
                    "influences_energy": [
                        "Sitting under a tree, the dinosaur suddenly noticed how his strength returned!"
                    ],
                    "coins": [
                        "About to go the other way, the dinosaur suddenly noticed something shining in the bushes, it turned out to be a couple of coins."
                    ],
                    "item": [
                        "Passing by the tree, the dinosaur found it strange that there were so many footprints around. After exploring the area, the dinosaur found something interesting!"
                    ],
                    "quest": [
                        "After receiving a task from the fairy, the dinosaur went in search of the Volga grass. When he returned, he received his reward!"
                    ],
                    "battle": [
                        "Evil animals from the neighboring forest were going to spoil the forest, but the dinosaur proudly stood on guard!"
                    ]
                },
                "negative": {
                    "influences_mood": [
                        "While walking, the dinosaur saw a felled tree, he was very upset about it..."
                    ],
                    "influences_eat": [
                        "I'm actively traveling, the dinosaur has passed."
                    ],
                    "influences_game": [
                        "Walking through the monaton forest, the dinosaur gets bored, he wants to play."
                    ],
                    "influences_energy": [
                        "Climbing under each rock, the dinosaur got very tired and sat down to rest."
                    ],
                    "coins": [
                        "Going through the items found, the dinosaur considered the square coin to be a fake and threw it away."
                    ],
                    "item": [
                        "A hole formed in the dinosaur's backpack, because of this the dinosaur could have lost something."
                    ],
                    "quest": [
                        "Walking, the dinosaur saw a crying dinosaur, coming up, the dinosaur could not make out his words. After digging in your pockets, your dinosaur offered to eat the poor man, but he just left."
                    ],
                    "battle": [
                        "The wild animals didn't like the dinosaur sparing their forest, the dinosaur had to run and change direction."
                    ]
                }
            },
            "signs": {
                "coins": "🪙",
                "heal": "❤",
                "energy": "⚡",
                "game": "🎮",
                "eat": "🍕",
                "sunshine": "☀ Sunny",
                "breeze": "🍃 Breeze",
                "rain": "🌧 It was raining",
                "anti_rain": "☂ Not wet from the rain",
                "cold_wind": "❄ Cold Wind",
                "anti_cold_wind": "🧤 Not cold thanks to clothes",
                "drought": "🏜 Drought",
                "snowfall": "🌨 Snowfall",
                "magic_light": "🌳 Magic Light",
                "magic_animal": "🦁 Magical Animal"
            },
            "cancel": "❌ Canceled by Accessory"
        },
        "mobs": {
            "crocodile": {
                "name": "Crocodile",
                "emoji": "🐊"
            },
            "lion": {
                "name": "Lion",
                "emoji": "🦁"
            },
            "tiger": {
                "name": "Tiger",
                "emoji": "🐅"
            },
            "bear": {
                "name": "Bear",
                "emoji": "🐻"
            },
            "wolf": {
                "name": "Wolf",
                "emoji": "🐺"
            },
            "shark": {
                "name": "Shark",
                "emoji": "🦈"
            },
            "snake": {
                "name": "Snake",
                "emoji": "🐍"
            },
            "rhino": {
                "name": "Rhinoceros",
                "emoji": "🦏"
            },
            "elephant": {
                "name": "Elephant",
                "emoji": "🐘"
            },
            "gorilla": {
                "name": "Gorilla",
                "emoji": "🦍"
            },
            "spider": {
                "name": "Spider",
                "emoji": "🕷"
            },
            "scorpion": {
                "name": "Scorpion",
                "emoji": "🦂"
            },
            "camel": {
                "name": "Camel",
                "emoji": "🐪"
            },
            "puma": {
                "name": "Puma",
                "emoji": "🐆"
            },
            "fox": {
                "name": "Fox",
                "emoji": "🦊"
            },
            "hyena": {
                "name": "Hyena",
                "emoji": "🐃"
            },
            "hippo": {
                "name": "Hippopotamus",
                "emoji": "🦛"
            },
            "otter": {
                "name": "Otter",
                "emoji": "🦦"
            },
            "panther": {
                "name": "Panther",
                "emoji": "🐆"
            },
            "raccoon": {
                "name": "Raccoon",
                "emoji": "🦝"
            },
            "deer": {
                "name": "Deer",
                "emoji": "🦌"
            },
            "bear_cub": {
                "name": "Bear cub",
                "emoji": "🐻‍❄️"
            },
            "bat": {
                "name": "Bat",
                "emoji": "🦇"
            },
            "coyote": {
                "name": "Coyote",
                "emoji": "🐺"
            },
            "cougar": {
                "name": "Mountain Lion",
                "emoji": "🐅"
            },
            "dolphin": {
                "name": "Dolphin",
                "emoji": "🐬"
            },
            "dragon": {
                "name": "Dragon",
                "emoji": "🐉"
            },
            "eagle": {
                "name": "Eagle",
                "emoji": "🦅"
            },
            "falcon": {
                "name": "Falcon",
                "emoji": "🦅"
            },
            "fennec_fox": {
                "name": "Fennec",
                "emoji": "🦊"
            },
            "giraffe": {
                "name": "Giraffe",
                "emoji": "🦒"
            },
            "goat": {
                "name": "Goat",
                "emoji": "🐐"
            },
            "grizzly": {
                "name": "Grizzly bear",
                "emoji": "🐻"
            },
            "hamster": {
                "name": "Hamster",
                "emoji": "🐹"
            },
            "hedgehog": {
                "name": "Hedgehog",
                "emoji": "🦔"
            },
            "horse": {
                "name": "Horse",
                "emoji": "🐎"
            },
            "jackal": {
                "name": "Jackal",
                "emoji": "🐺"
            },
            "jaguar": {
                "name": "Jaguar",
                "emoji": "🐆"
            },
            "kangaroo": {
                "name": "Kangaroo",
                "emoji": "🦘"
            },
            "komodo_dragon": {
                "name": "Komodo Dragon",
                "emoji": "🦎"
            },
            "lemur": {
                "name": "Lemur",
                "emoji": "🐒"
            },
            "leopard": {
                "name": "Leopard",
                "emoji": "🐆"
            },
            "lobster": {
                "name": "Lobster",
                "emoji": "🦞"
            },
            "lynx": {
                "name": "Lynx",
                "emoji": "🐆"
            },
            "meerkat": {
                "name": "Meerkat",
                "emoji": "🐾"
            },
            "mole": {
                "name": "Mole",
                "emoji": "🐾"
            },
            "monkey": {
                "name": "Monkey",
                "emoji": "🐒"
            },
            "moose": {
                "name": "Elk",
                "emoji": "🦌"
            },
            "narwhal": {
                "name": "Narwhal",
                "emoji": "🐳"
            },
            "octopus": {
                "name": "Octopus",
                "emoji": "🐙"
            },
            "opossum": {
                "name": "Opossum",
                "emoji": "🦝"
            },
            "orca": {
                "name": "Killer whale",
                "emoji": "🐋"
            },
            "ostrich": {
                "name": "Ostrich",
                "emoji": "🦩"
            },
            "otter_pup": {
                "name": "Otter",
                "emoji": "🦦"
            },
            "owl": {
                "name": "Owl",
                "emoji": "🦉"
            },
            "panda": {
                "name": "Panda",
                "emoji": "🐼"
            },
            "parrot": {
                "name": "Parrot",
                "emoji": "🦜"
            },
            "peacock": {
                "name": "Peacock",
                "emoji": "🦚"
            },
            "pelican": {
                "name": "Pelican",
                "emoji": "🦢"
            },
            "penguin": {
                "name": "Penguin",
                "emoji": "🐧"
            },
            "pig": {
                "name": "Pig",
                "emoji": "🐖"
            },
            "pigeon": {
                "name": "Dove",
                "emoji": "🐦"
            },
            "polar_bear": {
                "name": "Polar bear",
                "emoji": "🐻‍❄️"
            },
            "porcupine": {
                "name": "Porcupine",
                "emoji": "🦔"
            },
            "rabbit": {
                "name": "Rabbit",
                "emoji": "🐇"
            },
            "rattlesnake": {
                "name": "Rattlesnake",
                "emoji": "🐍"
            },
            "red_panda": {
                "name": "Red Panda",
                "emoji": "🦝"
            },
            "reindeer": {
                "name": "Reindeer",
                "emoji": "🦌"
            },
            "rooster": {
                "name": "Rooster",
                "emoji": "🐓"
            },
            "seagull": {
                "name": "Seagull",
                "emoji": "🐦"
            },
            "seahorse": {
                "name": "Seahorse",
                "emoji": "🐎"
            },
            "seal": {
                "name": "Seal",
                "emoji": "🦭"
            },
            "sheep": {
                "name": "Sheep",
                "emoji": "🐑"
            },
            "skunk": {
                "name": "Skunk",
                "emoji": "🦨"
            },
            "sloth": {
                "name": "Sloth",
                "emoji": "🦥"
            },
            "snail": {
                "name": "Snail",
                "emoji": "🐌"
            },
            "snow_leopard": {
                "name": "Snow Leopard",
                "emoji": "🐆"
            },
            "squid": {
                "name": "Squid",
                "emoji": "🦑"
            },
            "swan": {
                "name": "Swan",
                "emoji": "🦢"
            },
            "toucan": {
                "name": "Toucan",
                "emoji": "🦜"
            },
            "turtle": {
                "name": "Turtle",
                "emoji": "🐢"
            },
            "walrus": {
                "name": "Walrus",
                "emoji": "🦭"
            },
            "weasel": {
                "name": "Weasel",
                "emoji": "🐾"
            },
            "whale": {
                "name": "Whale",
                "emoji": "🐳"
            },
            "wombat": {
                "name": "Wombat",
                "emoji": "🦘"
            },
            "zebra": {
                "name": "Zebra",
                "emoji": "🦓"
            }
        },
        "books": {
            "book_forest": [
                "An ancient and mighty forest with giant trees, that's what they say about this forest... \n I, Fredric Al Johnson, will check it out for myself!",
                "8/26/3--7 3:38 PM: I've just entered the forest, it looks like a forest, except for the huge trees!",
                "8/26/3--7 7:12 PM: I saw a beautiful sunset and went to look for a place to rest. \n\n 8/26/2--7 9:01 PM: I didn't see any dangerous animals all day, just trees, trees, trees.",
                "8/27/3--7 1:59 PM: Crossed a turbulent river, almost lost all my belongings. \n\n 27.08.3--7: I lost my watch somewhere, now I can't write the time, but it's getting dark. \n\n 27.08.3--7: I see a light in the distance, I'll try to come closer.",
                "8/27/3--7: I can't believe my eyes, what's that... Dinosaurs?! Am I sure I'm not crazy?",
                "I write quickly, one of them feels me, I reel in.",
                "_Emptily_",
                "_Emptily_",
                "_Ink drops_",
                "28.08 +- 2 days: I don't know how long I've been sitting here, someone is constantly walking over me, I haven't replenished my water and food supplies for a long time, soon I'll have to go crazy. I'm not sure I can stand up to DINOSAURS (yes, that's for sure!)",
                "I'll leave it lying here, I hope I'll come back here.",
                "_Emptily_",
                "_Emptily_",
                "_Emptily_",
                "_Emptily_",
                "_Emptily_"
            ],
            "book_lost-islands": [
                "_Traveler's Book_",
                "It's me Aot again. Today Propane told me about the ancient ruins on the island and we are going there.",
                "When we went ashore, it got hot and we went for a swim. \n\n After that, walking along the shore, we noticed the ruins of an old temple among the palm trees. \n\n Going inside, we were amazed by the grandeur of the ancient structure. There were columns everywhere, bas-reliefs were hollowed out in the walls.",
                "After exploring the temple, we found 300 coins! \n\n The propane suddenly tripped over something and sprawled on the ground. I took a look at it. It turned out to be a book. \n\n A little later, we explored several more temples, found a cake and 3 mushrooms.",
                "We fell asleep on the sand. \n\n And in the morning we returned home."
            ],
            "book_desert": [
                "_Traveler's Book_",
                "Who doesn't know about the mysterious pyramids, sand dunes and poisonous snakes?",
                "This is a short story from my point of view about why it is worth it, and sometimes it is not necessary to go to the desert where dinosaurs roam. \n\n So, let's get started. \n\n After stocking up on food, I set out to explore the desert. \n\n The first day went perfectly... except that the sun was beating down mercilessly.",
                "I found 50 square coins, where did they come from? \n\n The next day I reached the pyramid. And I'm not the only one on the trip.\n\n A huge dinosaur was standing about 20 meters away from me. He pushed the wall and went inside, I waited for 5 minutes and then went in too. The pyramid was huge, riddled with labyrinths and passages.",
                "I will not describe the pyramid in full, because it will take a very long time. \n\n All I can say is that I found a parchment with a picture of a backpack and strange symbols. \n\n I fell asleep right in the pyramid.",
                "The next morning, I woke up with the feeling that someone was looking at me. I open my eyes and see... DINOSAUR! He was standing right in front of me and looking at me with his head slightly tilted.",
                "And then the dinosaur spoke. He said to me, \"Hello!\" \n \"Hello,\" I replied.\n - My name is Propane, how are you? \n -Aot. \n - Let's be friends? \n -Come on. \n \"Only I'm going to call you a messenger of darkness, because I don't know how you came here.\"",
                "That's how I made friends with a dinosaur."
            ],
            "book_mountains": [
                "_Traveler's Book_",
                "Hi, it's again I'm Aot. Today Propane and I will go on a trip to the mountains.",
                "Crystal Mountains... How beautiful is that... And it's cold. Br-r-r. \n\n While walking in the snow, Propane suddenly fell into a snowdrift. I crawled out. And he failed again. Then he counted the coins, took out a square one, and threw it into the snow. \n\n An hour later, it began to snow, and the dinosaur was upset.",
                "As we sat by the fire, a polar bear approached us. Propane hit him in the side with his hind paw. The bear flew a couple of meters, but still managed to catch the dinosaur. \n\n The next day we found an egg. It shimmered. Here it is, white. And now it's green. And the next moment it's blue. Now it's lilac. Orange. And white again. \n\n We continued on our way. \n\n Propane bent down and picked up a sheet of parchment. \n\n \"It's a cake recipe,\" he explained, \"I love cakes. \n\n Suddenly, there was a snowstorm. \n\n We found ourselves in a forest of strange trees, and between the trunks we could see our house. \n\n We reached it and sat down to tea."
            ],
            "book_magic-forest": [
                "_Traveler's Book_"
            ],
            "meow_book": [
                "mi mi, mi mi mi. mi?",
                "mi! Meoooo, mi, mi. mi, mi, mi.",
                "mi, mi, mi. mi mi, mi mi mi. mi? mi! Meoooo, mi, mi. mi, mi, mi.",
                "mi mi, mi mi mi. mi? mi! Meoooo, mi, mi.",
                "mi, mi, mi. mi mi, mi mi mi. mi? mi! Meoooo, mi, mi. mi, mi, mi.",
                "meow",
                "mi mi, mi mi mi. mi?",
                "mi! Meoooo, mi, mi. mi, mi, mi.",
                "mi, mi, mi. mi mi, mi mi mi. mi? mi! Meoooo, mi, mi. mi, mi, mi.",
                "mi...",
                "mi mi, mi mi mi. mi? mi! Meoooo, mi, mi.",
                "mi, mi, mi. mi mi, mi mi mi. mi? mi! Meoooo, mi, mi. mi, mi, mi.",
                "mi mi, mi mi mi. mi?",
                "mi! Meoooo, mi, mi. mi, mi, mi.",
                "mi mi, mi mi mi. mi? mi! Meoooo, mi, mi.",
                "mi, mi, mi. mi mi, mi mi mi. mi? mi! Meoooo, mi, mi. mi, mi, mi.",
                "mi, mi, mi. mi mi, mi mi mi. mi? mi! Meoooo, mi, mi. mi, mi, mi.",
                "mi mi, mi mi mi. mi?",
                "mi! Meoooo, mi, mi. mi, mi, mi.",
                "meow",
                "mi mi, mi mi mi. mi? mi! Meoooo, mi, mi.",
                "mi, mi, mi. mi mi, mi mi mi. mi? mi! Meoooo, mi, mi. mi, mi, mi.",
                "mi mi, mi mi mi. mi?",
                "mi! Meoooo, mi, mi. mi, mi, mi.",
                "mi mi, mi mi mi. mi? mi! Meoooo, mi, mi.",
                "mi, mi, mi. mi mi, mi mi mi. mi? mi! Meoooo, mi, mi. mi, mi, mi.",
                "mi mi, mi mi mi. mi?",
                "mi! Meoooo, mi, mi. mi, mi, mi.",
                "mi mi, mi mi mi. mi? mi! Meoooo, mi, mi.",
                "mi, mi, mi. mi mi, mi mi mi. mi? mi! Meoooo, mi, mi. mi, mi, mi.",
                "meow",
                "meow",
                "meow",
                "meow",
                "Special for Cat`s"
            ]
        },
        "not_found_key": "❌ | The language key of the command was not found, there may have been an error, or you may have changed the language of the application. Type /start to go to the main menu.",
        "journey_last_event": {
            "info": "🍱 | Dinosaur's Journey\n 🏮 Location: {location} \n ⌛ Travels {journey_time} \n 🍭 Events: {col}",
            "last_event": "📦 | Last Event\n {last_event}",
            "button": "🦕 Return"
        },
        "journey_log": "🎋 | Dinosaur {name} Returned from Travel\n ⏳ Traveled: {time} \n 🍭 Events: {col} \n\n 🪙 Coins: {coins} \n 🗝️ Items: {items}",
        "ns_craft": {
            "not_materials": "❌ | You're running out of materials!",
            "create": "🍩 | Item(s) {items} created!"
        },
        "lang_set": "🎏 You can find information about the transfer in the bot section. \n 🎍 Select the language of the bot ->",
        "new_lang": "🎏 A new language has been installed!",
        "exchange": "🦄 | Unicorn courier brought a package\n\n 🖼 From: {username} \n 👑 Items: {items}",
        "exchange_me": "🦄 Items Transferred!",
        "confirm_exchange": "🛠 Confirm transfer {name}",
        "market_create": {
            "name": "🎞 Please enter a store name no longer than 50 characters",
            "description": "🧵 Enter a store description that is no more than 500 characters long",
            "create": "🎁 Store created!",
            "lvl": "🎭 To create a store, you need to have at least the 2nd level!",
            "name_error": "👿 A store with this name already exists"
        },
        "market_ui": {
            "had": "🎏 |",
            "owner": "🎃 Owner:",
            "me_owner": "You",
            "earned": "🎡 Earned:",
            "needy": "(Poor)",
            "stable": "(Stable)",
            "rich": "(Rich)",
            "conducted": "🎱 Completed transactions:",
            "products": "📯 Active trades:",
            "not_found": "🧨 Seller Not Detected",
            "my_option": "🎩 The bot can automatically send a notification about a new product to a group or channel, for more information write `/pushinfo`",
            "buttons": {
                "market_products": "👜 Active Trades",
                "no_products": "❌ No Active Trades",
                "сomplain": "❗ Complain",
                "edit_image": "🖼 Background (⭐)",
                "edit_text": "🎏 Description",
                "edit_name": "🎃 Name",
                "cancel_all": "🎫 Complete All Trades"
            }
        },
        "add_product": {
            "options_info": "🎠 | Select the type of deal. \n\n 🍕 ➞ 🪙 - Items for coins. You sell the items, the buyer pays the coins you specify. \n\n 🪙 ➞ 🍕 - Item coins. You place an order for the items, the buyer sells the items to you for the amount you specify. \n\n 🍕 ➞ 🍕 - Items for items. Item exchange. \n\n 🍕 ➞ ⏳ - Auction. You list items, specify the starting price, end time, and minimum bid. The winner of the auction takes the goods.",
            "chose_item": {
                "items_coins": "🎟 Select an item to add to the items you sell",
                "coins_items": "🎟 Select the item to add to the order",
                "items_items": "🎟 Select an item to add to the trade",
                "auction": "🎟 Select an item to add to the auction house",
                "trade_items": "🍷 Select the item you want to get in return"
            },
            "wait_count": "🎎 Enter the quantity of the product",
            "add_item": "🎞 Want to add more items?",
            "coins": {
                "items_coins": "🎐 Enter the total price of the item",
                "coins_items": "🎐 Indicate how much you're willing to pay for all of these items",
                "auction": "🎐 Specify the starting price of the product"
            },
            "stock": {
                "items_coins": "🎨 Specify the quantity of the item in stock. \n\n _For example, you added 2 carrots and 1 tomato to the product, if you enter 3 now, then 6 carrots and 3 tomatoes will be removed from your inventory, as well as 3 people will be able to purchase your product._",
                "coins_items": "🎨 How many times can the order be executed\n\n_For example, if you specify 2 and you want to exchange 2 carrots for 100 coins in the reader, you will spend a total of 400 coins for 4 carrots._",
                "items_items": "🎨 Specify the number of times you can share resources."
            },
            "time_end": "🎩 Specify the end time of the auction, you are required to enter the time in the form of text. \n\n ⏰ Write '/string_to_sec' to receive a memo.",
            "min_add": "☄ Specify the minimum bid, this is the number by which the minimum person must raise the price in order to participate in the auction.",
            "few_coins": "❌ You don't have enough {coins} coins to place a buy order!",
            "all_good": "🎩 Your product is on the market!",
            "no_items": "❌ Not all of the items you sell are in your inventory!"
        },
        "product_ui": {
            "cap": "*🎴 | Product Details*",
            "type": "*🍷 Type:* {type}",
            "in_stock": "*🎡 Bought:* {now} | {all}",
            "types": {
                "items_coins": "🍗 Selling Items",
                "coins_items": "🔎 Oder for Items",
                "items_items": "📦 Item Exchange",
                "auction": "⏰ Item Auction"
            },
            "text": {
                "items_coins": "*🪙 Price:* {price} Coins. \n *🧵 For sale:* \n {items}",
                "coins_items": "*🪙 Suggested price:* {price} coins.\n*🧵 Purchasing Items:*\n{items}",
                "items_items": "*🧵 The seller gives:* {items}\n*🎉 Wants to get in return:* {price}",
                "auction": "*🧵 Auction of items:* {items} \n\n *🪙 Current price:* {price} Coins. \n *⌚ Ends in:* {end_time} \n *💚 Minimum bet:* +{min_add} \n\n *〽 Top 3 contenders:* \n {users}"
            },
            "buttons": {
                "edit_price": "🎩 Change price",
                "add": "➕ Add Stock",
                "buy": "🛒 Buy",
                "sell": "🛒 Sell",
                "delete": "❌ Delete Item",
                "auction": "〽 Participate",
                "view": "🔎 View",
                "promotion": "👜 Promote",
                "alredy_promotion": "💚 Moving",
                "items_info": "🎈 Item Status"
            },
            "owner_message": "The commission on the sale is 2%, the product will be removed from the market in {time}",
            "no_action_users": "_There's no one here_"
        },
        "auction": {
            "delete_auction": "🧵 The auction house you participated in for items {items} has been deleted or ended. Funds have been returned.",
            "win": "🍡 Congratulations, you've won the auction house for {items}!"
        },
        "product_info": {
            "delete": "🎍 The product has been removed!",
            "error": "🎞 The product was not found, it may have already been uninstalled or it may have been purchased the maximum number of times.",
            "new_price": "🪙 Enter the new price of the item",
            "add_stock": "🌮 Specify the quantity of additional inventory",
            "update_price": "🧵 The price of the product has been updated!",
            "not_coins": "❌ You don't have that many coins!",
            "no_items": "💥 You don't have all the items to add to your inventory",
            "stock": "❣ The product stock has been updated!"
        },
        "seller": {
            "confirm_delete_all": "🍚 Are you convinced that you want to remove all your products from the market?",
            "error": "🍚 Seller not found!",
            "delete_all": "⭐ All projects have been removed from the market!",
            "edit_name": "🎏 Enter a new name, or click Cancel.",
            "new_name": "🍚 Name changed!",
            "edit_description": "🎏 Enter a new store description or click Cancel.",
            "new_description": "🍚 Description changed, changed!",
            "edit_image": "🖼 | Send a photo (file). If the bot does not respond to your photo for a long time, then this format is not supported. \n\n🎏 | To remove the background, enter \"0\"",
            "new_image": "🍚 Custom image installed!",
            "delete_image": "❌ Custom image deleted!"
        },
        "no_premium": "✨ | You do not have a subscription to access this feature!\nRegister /premium for information on paid features.",
        "no_products": "❗ You don't have any products!",
        "buy": {
            "common_buy": "☄ How many times would you like to purchase this product?",
            "auction": "🧵 Enter your bet, keep in mind that your bet should be minimum {unit} 🪙",
            "max_min": "❌ There is an error in specifying the maximum quantity. Most likely, you don't have enough coins to bet on or the product has already been sold out.",
            "erro_max_col": "🥞 The number shown is greater than the maximum stock quantity!",
            "error_no_coins": "🍳 You don't have enough coins to buy!",
            "error_no_items": "🥙 You don't have any items to trade!",
            "ok": "🍣 Congratulations on your purchase!",
            "participant": "🎢 You've been added to the auction!",
            "error_no_product": "🎩 Product not found, most likely it has already been removed from the market."
        },
        "promotion": {
            "buy": "🍿 Enabling promotion will allow you to place this product for 12 hours in a random list of displayed products when entering the market.",
            "max": "🥓 You have the maximum number of promoted products!",
            "ok": "🍠 The product has been added to the list of promoted products. Upon entering the store, players will see 3 random items out of all promoted.",
            "no_coins": "🥠 You don't have enough coins to enable the promotion!",
            "already": "🥩 The product has already been added to the promotion. \n 🥪 Keep in mind, without premium you can promote 5 products at the same time, with premium you can promote 10!",
            "price": "\n🥪 Value of {coins} coins.",
            "price_discount": "\n🥪 Cost of {coins} (-{discount}%) coins."
        },
        "products": {
            "search": "🎃 Select a product to view",
            "null": "🧧 Looks like there's no one on the market today, come back later..."
        },
        "find_product": {
            "choose": "🍳 Select the item you want to find on the market",
            "info": "🍡 Choose what type of deal you are interested in:\n\n 🍕 ➞ 🪙 - Purchase items with coins\n 🪙 ➞ 🍕 - Getting Coins for Items\n 🍕 ➞ 🍕 - Exchange Items for Items\n 🍕 ➞ ⏳ - Item Auction. \n ❌ - View all types of trades.",
            "not_found": "☀ No products with such search parameters were found on the market, try to set up a different type of transaction or accept that the market does not sell such items."
        },
        "push": {
            "not_management": "🎏 The bot is in a channel/group, but does not have the right to send messages, give the bot the \"Publish messages\" right to be able to send messages",
            "not_admin": "🎏 The bot is in a channel/group, but the person who added it (you) does not have the right to administer the channel.",
            "ok": "☄ The bot and you have all the necessary rights to create notifications about a new product in the channel. Confirm the connection.",
            "new": "🍣 A new channel has been added to push notifications, the push language is set as in the bot settings.",
            "update": "🍜 These push notifications have been updated, the channel and language have been updated.",
            "push_info": "🎢 *Connect notifications*\n\n🥓 The bot is able to send a notification to a channel or group when it is created in the market. To do this, add the bot as an administrator with (Publish messages) rights to the channel or group. Next, follow the instructions. \n\n🧵 1 person can post notices only to 1 place, but as many people as you want can post to 1 place. \n\n🎠 To disable the channel from notifications - \"/delete_push\""
        },
        "edit_dino": {
            "info": "🧬 | *Dinosaur Change*\n_A dinosaur can be transformed into another one. With the latest technology, it is possible to change the appearance and genes of a dinosaur! _ \n\n🎍 | There are 4 ways to transform:\n\n*🎭 Rarity* - Only the rarity of the dinosaur will change. \n\n*🎠 Appearance* - Change of appearance. The rarity will remain the same, but the appearance will change to match the dinosaur's rarity. \n\n*🎑 Full* - Dinosaur appearance change and rarity. \n\n*📚 Reset Stats* - Reset characteristics and redistribution. \n\n _ As a result of mutations (a change in appearance), your dinosaur's tastes may change. _",
            "buttons": {
                "transformation rare": "🎭 Rarity",
                "transformation appearance": "🎠 Appearance",
                "transformation all": "🎑 Full",
                "transformation chars": "📚 Reset Stats"
            },
            "dino": "🍡 | Choose a dinosaur to transform",
            "new_rare": "🍡 | Click on the button to select a new rarity",
            "appearance": "🥓 Confirm the change of appearance. \n Cost: {items}, {coins} 🪙",
            "rare": "🍡 Specify what rarity you want to transform the dinosaur into\n\n",
            "all": "🍡 Specify into a dinosaur of rarity you want to transform the dino\n\n",
            "no_coins": "❌ | You don't have that many coins!",
            "no_items": "❌ | You don't have all the items to transform!",
            "new": "☄ Scientists and doctors have been in and out of the room with your dinosaur for a long time. But now! A brand new dinosaur comes out of the room!",
            "return": "🎈 Don't forget to tip!",
            "reset_chars": "💦 Confirm the reset of the dinosaur's stats. \nCost: {coins} 🪙"
        },
        "kindergarten": {
            "info": "*🎶 | Kindergarten Menu*\n_The dinosaur cannot be sent to kindergarten for long, otherwise it will miss you_\n\n🧸 Hours spent: {hours_now}\n🧮 Hours left: {remained}\n🎨 Before zeroing: {days}\n\n🎏 Hours Today: {hours} / {remained_today}",
            "button_name": "⚽ Send to kindergarten",
            "cancel_name": "💢 Bring Back Home",
            "choose_house": "🎃 Select from the list how many hours to send the dinosaur to kindergarten.",
            "no_hours": "🎨 You don't have hours left this month/for today!",
            "ok": "🧵 The dinosaur went to kindergarten!",
            "in_kindergarten": "🎏 When the dinosaur is returned, the watch is not returned.",
            "stop": "🎈 The dinosaur has returned from kindergarten."
        },
        "create_tracking": {
            "name": "⛏ Enter the tracking code",
            "already": "👿 The code is already being tracked",
            "ok": "🍡 The code has been added, you can view the information on the codes by writing /tracking\n\n Link - `{url}`"
        },
        "track": {
            "text": "☄ | Tracking\n\n 🧮 Used: {use} \n\n 🍜 Link: `{url}` \n 🔎 Code: `{code}` \n 🥞 Created: {t}",
            "delete": "❌ Delete",
            "clear": "⛏ Zero"
        },
        "track_open": "🎀 The tracking menu is open",
        "track_clear": "🥠 Number of clicks reset to zero",
        "track_delete": "🎩 Removed",
        "string_to_str": {
            "info": "⚽ In some commands, it is convenient to indicate the time not in numbers, but in text, here is a reminder. \n\n If you've been sent here, then you can use text time input methods. You can try it right here, write '/string_to_sec` ` 1d` ` 1h` ` 12m`\n You will receive in response 90720 - these are the number of seconds that are calculated from your message. \n\n What symbols can I use? \n` w`-Week` d`-day` h`-hour` m`-minute` s' - second (you don't have to specify a letter)\n\n _By the way, you can specify 1 and the same character as many times as you want and in any order._"
        },
        "promo": {
            "coins": "🍡 Enter the number of coins or 0",
            "count": "☄ Enter the quantities of uses, 0 - infinite",
            "time_end": "🎠 Enter the end time, 0 is infinite. '/string_to_sec' - Don't forget about the memo.",
            "code": "🎃 Enter the tracking code.",
            "chose_item": "🧮 Choose an item to add",
            "abilities": "🧵 Enter abilities for the item or \"0\""
        },
        "max_count": "❌ | Your inventory is full of food, now it contains {eat_count} / {max_count} units of food!",
        "max_friend_count": "❌ | You can't transfer items, your friend's inventory is already bursting with food.",
        "new_year": {
            "ok": "🎁 A New Year's gift to be sent to the user!",
            "not": "🎩 The user has already received their New Year's gift!",
            "to_friend": "❤ A New Year's gift has been sent to you! Search Inventory {item}"
        },
        "super_coins": {
            "plus_one": "👑 You got *+1 Super Coin* for watching ads.\nCheck your balance with /super\n_We don't moderate ads and we don't know the context of the ads._",
            "info": "🌸 Coins you have: *{coins}* \n ⚡ You've brought the bot: *{dollars}$* \n\n ☕ ️ For every ad you view, you get *1 Super Coin*, which can be exchanged for exclusive products. \n\n 🎋 Ads automatically appear every *{limit}* when using the bot, but you can set the limit for yourself.",
            "buttons": {
                "super_coins view": "👀 Setting the Limit",
                "super_coins products": "🎟️ Shop"
            },
            "view": {
                "buttons": {
                    "7845": {
                        "text": "⌛ 30 minutes",
                        "data": 1800
                    },
                    "s98j": {
                        "text": "⌛ 60 minutes",
                        "data": 3600
                    },
                    "erlt": {
                        "text": "⌛ 90 minutes",
                        "data": 5400
                    },
                    "74js": {
                        "text": "⌛ 120 minutes",
                        "data": 7200
                    },
                    "no_ads": {
                        "text": "❌ Disable Ads",
                        "data": 0
                    }
                },
                "info": "☄ Select the minimum amount of time you want to pass between running your ad ->"
            },
            "shop": "🎍 Welcome to the Super Coin Store! \n\n _(There is no confirmation at the time of purchase)_",
            "buy": "🎎 Thank you for watching the ads!",
            "moder_reward": "🎋 You received *+{coin} Super Coin(s)* for viewing a message. \nCheck your balance with the /super command"
        },
        "no_dinos": "⚡ You can't use this feature because you don't have any dinosaurs! \n ✨ For premium information, type /premium",
        "buyer": {
            "choose": "👑 The buyer welcomes you, right now he is ready to buy the goods from you in the ratio of `{emoji} x{one_col} = {price} 🪙`",
            "ok": "🎏 The money has been transferred to your account, come back again.",
            "no": "✨ You don't have enough items in your inventory."
        },
        "standart_background": "🗝️ The profile background has been set to standard.",
        "backgrounds": {
            "buttons": {
                "set": "🖼️ Install",
                "page_n": "🗝️ Number"
            },
            "description_buy": "🎍 | Use *Arrows* to navigate. \n🗝 | Specify *number* of the background. \n⛓ | Purchase for *Coins* 🪙 or *Super Coins* 👑{add_text}\n\n_Purchased backgrounds will remain with you forever and can be installed at any time._",
            "description_set": "🎍 | Use *Arrows* to navigate. \n🗝 | Specify *number* of the background. \n⛓ | Buy for *Coins* 🪙 or *Super Coins* 👑{add_text}",
            "page": "🧧 | Enter the number of the page you want to go to ->",
            "page_set": "🧵 The number is set.",
            "confirm": "🎗 Confirm the purchase of the background.",
            "no_coins": "🪙 Not enough coins!",
            "buy": "🖼 | The background has been purchased, now you can set it for any dinosaur!",
            "choose_dino": "🦕 Choose a dinosaur to set the background ->",
            "set": "🖼️ The background is set!",
            "author": "🤍 | Author:",
            "add_to_storage": "🎍 | The background has been added to the background library!",
            "in_st": "🎎 | The background is already in your collection."
        },
        "dead_user": {
            "situation1": "❤️ | Hi, we've noticed that you haven't been playing bot for a long time. Perhaps it's because your dinosaur died suddenly. How about you try again, but with more responsibility? We believe in you! \n\n🦕 | If you don't play for some other reason (for example, due to bugs in the bot), then write @dinogochi_bugs.",
            "buttons": {
                "game": "🔮 Play!",
                "promo": "🎩 Quick start!"
            },
            "situation2": "🦕 | Hi, it's been so long since ({st_time}) played a bot, we miss you... Don't you want to come back? \n\n❤️ | Here's a promo code for 3 days of premium! \n\n🦕 | If you don't play for some other reason (for example, due to bugs in the bot), then write @dinogochi_bugs."
        },
        "kd_coldown": "🪈 | This activity is on cooldown, try again after {ss}",
        "pet": {
            "cancel_breakdown": "❤️ | You're lucky, the dinosaur's nervous breakdown has passed!",
            "lst": [
                {
                    "reaction": "The dinosaur closes its eyes and begins to purr, showing that it is pleasant.",
                    "message": "{owner}, it's so nice when you stroke me!"
                },
                {
                    "reaction": "The dinosaur begins to wag its tail and jump for joy.",
                    "message": "{owner}, it's so much fun! Stroke me again!"
                },
                {
                    "reaction": "The dinosaur yawns and spreads its wings.",
                    "message": "{owner}, you stroked me so well that I almost fell asleep!"
                },
                {
                    "reaction": "The dinosaur leans closer and rubs his head against your hand.",
                    "message": "{owner}, let's do more! I love this attention!"
                },
                {
                    "reaction": "The dinosaur begins to coo quietly and caress you.",
                    "message": "{owner}, stroke me right here, I love it!"
                }
            ]
        },
        "talk": {
            "themes": {
                "negative": [
                    "About the fall of the meteorite",
                    "About the extinction of dinosaurs",
                    "About bad ecology and pollution",
                    "About the attack of predators on dinosaurs",
                    "On Food Shortages in Ancient Times",
                    "About cruel people who hunted dinosaurs"
                ],
                "positive": [
                    "About the achievements of dinosaurs in sports",
                    "On friendship with other dinosaurs",
                    "About large open spaces for play",
                    "About Funny Habits of Dinosaurs",
                    "About delicious treats and treats",
                    "About travels through the ancient world and adventures"
                ]
            },
            "positive": "🤗 | Talked to dinosaur *\"{theme}\"*. \n\n _ The conversation made a positive impression on the dinosaur! _",
            "negative": "😮 | Talked to dinosaur *\"{theme}\"*. \n\n _ The conversation upset the dinosaur! _"
        },
        "fighting": {
            "hit": "💥 | In the fight with you, the dinosaur got hit and got a little upset... \n\n❤️ | The dinosaur lost *{heal}%* health.",
            "avoid": "🪀 | In the fight with you, the dinosaur was able to successfully dodge your blow!",
            "block": "🛡️ | In the fight against you, the dinosaur was able to block your blow!"
        },
        "groups": {
            "durable_materials": "🎞 Durable Materials",
            "bodys": "📦 Enclosures",
            "rod_group": "🦯 Rods or bones",
            "ingot_group": "🧱 Bars",
            "repairing": "🔧 Repairable items",
            "recipe": "📜 Any recipe",
            "eat": "🍔 Food",
            "egg": "🥚 Eggs",
            "meat": "🥩 Any meat",
            "fish": "🐟 Any fish"
        },
        "all_skills": {
            "stoping": {
                "text": "🪈 | To stop training, press the button, but keep in mind that if the dinosaur has exercised too little, then *fine* will be applied to the stats!",
                "button": "❌ Return"
            },
            "choose_time": "⌚ Choose your workout time >",
            "use_energy": {
                "text": "⚡ Give a dinosaur access to a refrigerator with energy drinks? \n _ If there is a lack of energy, the dinosaur will take objects such as tea from there. _",
                "buttons": [
                    "✅ Use",
                    "❌ Do not use"
                ]
            },
            "gym": "💪 Dinosaur went to the hall to pump his strength and power! \n🏋️‍♂️ With each new exercise, he becomes not only stronger, but also more confident! \n🏉 The minimum training time for a dinosaur is {min_time}",
            "library": "📖 Dinosaur enthusiastically reads books, developing his intelligence!! \n📚 As he delves deeper into knowledge, he becomes smarter and stronger, opening up new horizons for his adventures. \n✨ The minimum training time for a dinosaur is {min_time}",
            "park": "🌳 The dinosaur went for a walk in the park to pump up his charisma! \n😄 With each new acquaintance and conversation with passers-by, he becomes more charming and self-confident! \n✨ The minimum training time for a dinosaur is {min_time}",
            "swimming_pool": "💦 Dinosaur went to the pool to improve his agility! \n🏊‍♂️ Diving into the water, he surprises everyone with acrobatic tricks! \n🌊 The minimum training time for a dinosaur is {min_time}",
            "use_item": "\n🚚 | The dinosaur took this item on his own, as he is in training.",
            "overloading": "❗ {dino_name} is overloaded with training, because of this, his rest time for this workout will be increased! Hurry up and bring the dinosaur back from training!"
        },
        "time_craft": {
            "text_start": "🛡️ Items take time to craft. \n🪀 Items: {items}\n⏳ Crafted Time: {craft_time}\n🎃 Send a dinosaur to use his skills to craft an item.",
            "text2": "_🪈 To view all craftable items, send the command {command}_",
            "button": "🦕 Send a dinosaur",
            "cancel": "❌ Undo creation",
            "craft_info": "🪀 Items: {items}\n⏳ Time Left: {craft_time}\n🦕 Active Dinosaur: {dino}\n\n🎃 If you send a Dinosaur, you will only be able to return it if you stop crafting the item. \n🧨 If the creation is canceled, all materials will be lost.",
            "send_dino": "⏳ The dinosaur went to create an item. Crafting time has been increased by {percent}%"
        },
        "companies": {
            "end_company": "🎋 Campaign {name} was completed in {time_work}. \n⛏️ Number of impressions: {show_count} | {max_count}",
            "owner": "Enter the id of the user - the creator of the company or \"0\" if you make yourself the owner.",
            "text": "Enter the company text (max 1024)",
            "lang": "Select which language the company will be for (if there is already a company for the language, then it will be overwritten)",
            "name_button": "Enter the button text (max 100 characters)",
            "button_url": "Enter the url buttons",
            "parse_mode": "Select Formatting Type -",
            "no_parse": "No formatting",
            "image_choose": "Set the image or type \"0\"",
            "add_new_lang": "Add a language for the mailing list?",
            "time_end": "Enter the time after which the company will end in the format specified in /string_to_sec (e.g. 1d) or 0",
            "max_count": "Enter the maximum number of impressions or 0 for infinity",
            "priority": "Does the company have priority over gramads?",
            "one_message": "Whether to limit the display of the message to 1 for each user",
            "pin_message": "Pin a chat message?",
            "coin_price": "Specify the reward in super coins for 1 impression",
            "delete_after": "Delete all messages after the end of the company?",
            "ignore_system_timeout": "Ignore user timeout (ad setting) is RECOMMENDED for system messages",
            "min_timeout": "Minimum timeout between messages or 0 for user configuration (time format (1d))",
            "name": "Name your company",
            "info": "🏦 Company {name}\n⏳ End in: {end} ({delta})\n🪵 Impressions: {show} | {max_c}\n👑 Reward: {coin}\n🎃 Priority: {priority}\n💬 Pinning: {pin}\n🎀 Delay between impressions: {timeout}\n🛡️ Ignoring sys. Timeout: {sys_timeout}\n❤️‍🩹 Removal on completion: {dlete_after}\n\n⛏️ Status: {status}",
            "buttons": {
                "delete": "Finish",
                "activate": "Activate",
                "stop": "Stop",
                "message": "Test message"
            }
        },
        "works": {
            "choosy_type": "🍜 | Choose what the dinosaur will work for",
            "buttons": {
                "coins": "🪙 Remuneration",
                "recipes": "📜 For Recipes",
                "ore": "🧈 Per Ore",
                "wood": "🪵 Per Tree",
                "check": "👁 View Vault"
            },
            "start": {
                "mine": "⛏️ | The dinosaur went to *Mine*, keep an eye on his progress to try and pick up as much as possible!",
                "bank": "🏦 | The dinosaur went to *bank*, follow his progress to try and take as much as you can!",
                "sawmill": "🪓 | The dinosaur went to *Sawmill*, keep an eye on his progress to try and pick up as many as possible!"
            },
            "progress": {
                "mine": "*⛏️ | Work in the mine*\n\n⏰ Uptime: *{time_bar}*\n\n🔑 Storage: *{storage_bar}*\n\n💨 Checks Left: *{check_bar}*\n\n_If you still have checks, click on the button below to view the storage_",
                "mine-emoji": [
                    "💎",
                    "⚪"
                ],
                "bank": "*🪙 | Work in a bank*\n\n⏰ Uptime: *{time_bar}*\n🔑 Storage: *{storage_bar}*\n💨 Checks Left: *{check_bar}*\n\n_If you still have checks, click the button below to view the storage_",
                "bank-emoji": [
                    "🪙",
                    "⚪"
                ],
                "sawmill": "*🪚 | Work at the sawmill*\n\n⏰ Uptime: *{time_bar}*\n🔑 Storage: *{storage_bar}*\n💨 Checks Left: *{check_bar}*\n\n_If you still have checks, click the button below to view the storage_",
                "sawmill-emoji": [
                    "🪚",
                    "⚪"
                ]
            },
            "storage": {
                "coins": "🪙 | Coins: *{coins}* | *{max_coins}*",
                "items": "📦 | Items: *{items}*\n💧 | Fullness: *{count}* | *{max_count}*"
            },
            "stop": {
                "coins": "\n 🪙 | Coins: *{coins}*",
                "items": "\n 📦 | Items: *{items}*"
            }
        },
        "pass_messages": [
            "🌸 How nice it is in nature, freedom smells so good.🌲 Flowers, trees, grass - everything is beautiful.",
            "{owner}, how I love this sun! 🌞 It's so warm and golden.",
            "If I could, {owner}, I'd build a huge sand castle on the beach! 🏖️",
            "Sometimes I feel like I can fly, {owner}! ✈️ How cool it would be to soar into the sky.",
            "Have you ever dreamed of adventure, {owner}? 🗺️ I would go with you to many interesting places!",
            "Look, {owner}, how beautifully the flowers bloom! 🌸 They seem to enjoy life.",
            "I love our cozy home so much, {owner}. 🏡 It is always warm and calm here.",
            "How delicious these grapes are, {owner}! 🍇 Let's eat it together.",
            "{owner}, can you imagine how great it would be to have your own fruit garden? 🍏",
            "Say, {owner}, have you ever thought about what it's like to be an astronaut? 🚀",
            "Today is the perfect day to paint, {owner}! 🎨 Let's create a masterpiece.",
            "I noticed {owner} how the stars shine brightly today. 🌟 It's so great to look at them.",
            "Why don't we go for a bike ride, {owner}? 🚴 It's going to be fun!",
            "I'm wondering, {owner}, what are your most cherished dreams. 💭 Let's discuss them.",
            "Do you think, {owner}, does friendship exist between different animals? 🐾",
            "I love it when you smile, {owner}. 😊 It gives me strength.",
            "You know, {owner}, I'd love to explore the underwater world! 🌊 There must be a lot of secrets.",
            "Do you think {owner} if we could travel back in time, where would we go? ⏳",
            "Maybe we can make a holiday for all friends, {owner}? 🎉 I love fun company.",
            "{owner}, have you ever imagined what would happen if trees could talk? 🌳",
            "I think {owner} that we could start the morning with delicious pancakes and berries. 🥞🍓",
            "{owner}, I'm wondering how you see your dream in the future. 🌈 Let's talk about it.",
            "How nice it is to walk along the riverbank, {owner}. 🏞️ The water is so calm and clear.",
            "Can you imagine, {owner}, what picturesque views open from the mountains? 🏔️ Let's climb to the top.",
            "{owner}, it's great that we have time to travel together! ✈️ It creates a lot of memories.",
            "Do you believe in magic, {owner}? ✨ I think there's something magical around us.",
            "In the evening, the stars will be especially bright, {owner}. 🌌 This is the perfect time to daydream.",
            "{owner}, you know how much I love hearing adventure stories! 📖 Let's come up with our own.",
            "When I see a rainbow, {owner}, 🌈 I feel such joy! It's like a fairy tale.",
            "It's great that we have each other, {owner}. 🤗 You always support me.",
            "{owner}, inspires me to think about the future. 🔮 What will our world look like in 10 years?",
            "We have a great plan tomorrow, {owner}! 🎊 I can't wait for us to get started.",
            "How do you feel about the idea of climbing on the roof and looking at the stars, {owner}? 🏙️",
            "I love our outdoor vacation so much, {owner}. 🌿 The air is so fresh and clean!",
            "{owner}, I always have so much fun walking in the park with you! 🌳 The air is so fresh.",
            "Do you believe in animal friendship, {owner}? 🐾 I think they can be good friends too.",
            "How about having a picnic on the grass, {owner}? 🍉 This will be wonderful!",
            "I love to watch the clouds, {owner}. ☁️ Each of them looks magical in its own way.",
            "Recently I was thinking about how cool it would be to walk on water, {owner}. 🌊 That would be unusual!",
            "Have you ever dreamed of having your own pet, {owner}? 🦜 I wish I had a parrot!",
            "Let's dance to your favorite music now, {owner}! 💃 This will cheer you up.",
            "I like the evening city, {owner}. 🌆 Lights sparkle like stars.",
            "It's great when you laugh, {owner}! 😂 This fills the atmosphere with positivity.",
            "Can you imagine, {owner}, what it's like to be in a fairy tale? 📚 Let's create our own story.",
            "I always want to paint when I see the sunset, {owner}. 🌅 It's so beautiful!",
            "What's your favorite movie, {owner}? 🎬 We could have a movie night!",
            "I love the warmth of summer, {owner}. ☀️ It's a time of adventure and fun!",
            "Have you ever tried doing something new, {owner}? 🎣 I was thinking about fishing!",
            "Let's put together a puzzle, {owner}! 🧩 This will be a great way to spend time.",
            "How do you feel about walking around the city at night, {owner}? 🌌 He's so mysterious.",
            "I often think about how great it would be to go hiking, {owner}. ⛺️ It's an adventure!",
            "What is your favorite time of year, {owner}? 🍂 I like autumn walks.",
            "You know, {owner}, I want to learn how to play a musical instrument. 🎸 Would you like to too?",
            "I'd like to learn how to cook, {owner}. 🍽️ What is your favorite recipe?",
            "How do you like the idea of spending a weekend in nature, {owner}? 🍃 It's always inspiring!",
            "Your laughter always makes my day better, {owner}. 😄 I appreciate him very much.",
            "I dream of the future, {owner}. 🚀 How do you see your dreams?",
            "No matter what, {owner}, I'm always there for you. 🤝 Let's support each other.",
            "When I listen to music, {owner}, I feel free. 🎶 Which one do you like?",
            "Have you already tried something completely new this month, {owner}? 🙌 Let's do it together!",
            "Do you remember how we cooked together? 🍳 It was fun, let's do it again!",
            "I'm inspired by the idea of seeing a beautiful place, {owner}. 🏞️ Where would you like to go?",
            "Arrange a photo shoot on the street, {owner}? 📸 It's going to be fun and creative!",
            "I love it when you tell stories, {owner}. 🗣️ You always have interesting ideas.",
            "What's your favorite way to relax, {owner}? 🌙 I like to read in the evening.",
            "Let's make a board game night, {owner}! 🎲 It's always perky.",
            "How about trying a new hobby, {owner}? 🎨 Maybe drawing?",
            "Tomorrow will be a great day to travel, {owner}! 🧳 Where will we go?"
        ],
        "only_dev_mode": "🌸 At the moment, technical work is underway, check out the news channel (in the bot's profile)!",
        "timeout_message": "🧉 Stop for just a second and have some tea!",
        "skills_profile": {
            "chars": {
                "power": "Strength",
                "dexterity": "Dexterity",
                "intelligence": "Intelligence",
                "charisma": "Charisma"
            },
            "info": "*🎭 View Specifications*\n\n*⚡ Power [{power_u}]*\n{power}\n\n*🌪️ Agility [{dexterity_u}]*\n{dexterity}\n\n*🧠 Intelligence [{intelligence_u}]*\n{intelligence}\n\n*💫 Charisma [{charisma_u}]*\n{charisma}\n\n_Improve your dinosaur skills — it will make life easier for both you and him_",
            "power": {
                "0": "A complete lack of power.",
                "1": "Minimal force, barely noticeable.",
                "2": "Very weak strength, insignificant impact.",
                "3": "Weak strength, felt, but insignificant.",
                "4": "Strength below average, noticeable, but ineffective.",
                "5": "Moderate strength, can be felt, but not enough to influence.",
                "6": "Medium strength, noticeable in action.",
                "7": "Above average, quite a tangible strength.",
                "8": "A strong force capable of influencing the situation.",
                "9": "Very strong, manifested in a significant impact.",
                "10": "A maximum force that can change the course of events.",
                "11": "A power above the maximum, exceeding expectations.",
                "12": "Extraordinary power, sharp and noticeable influence.",
                "13": "An outstanding force, hard to ignore.",
                "14": "A powerful force capable of great achievements.",
                "15": "Tremendous power, creation or destruction.",
                "16": "An invincible force capable of overcoming any obstacles.",
                "17": "A power that evokes awe and respect.",
                "18": "Epochal power that energizes those around you.",
                "19": "A legendary power that defies description.",
                "20": "Absolute power, the embodiment of power."
            },
            "dexterity": {
                "0": "Complete lack of dexterity.",
                "1": "Minimal dexterity, barely noticeable.",
                "2": "Very low dexterity, poor coordination.",
                "3": "Weak dexterity, noticeable difficulties.",
                "4": "Below average, clumsiness in movements.",
                "5": "Moderate dexterity, sometimes uncertain actions.",
                "6": "Average dexterity, more or less coordination.",
                "7": "Above average, quite confident movements.",
                "8": "Strong dexterity, good coordination.",
                "9": "Very good dexterity, ease of movement.",
                "10": "Excellent dexterity, real grace.",
                "11": "High agility, quick reaction.",
                "12": "Extraordinary dexterity, amazing skill.",
                "13": "Outstanding agility, skills at the highest level.",
                "14": "Powerful agility, outstanding abilities.",
                "15": "Immense agility, fully controls the movements.",
                "16": "Invincible agility, physical achievements.",
                "17": "The power of agility, easily overcomes obstacles.",
                "18": "Epochal dexterity, inspires others.",
                "19": "Legendary agility, impeccable precision.",
                "20": "Absolute dexterity, the embodiment of grace."
            },
            "intelligence": {
                "0": "Lack of intelligence.",
                "1": "Minimum level of understanding.",
                "2": "Very low intelligence, difficulties with perception.",
                "3": "Weak intellect, often does not understand.",
                "4": "Below average, slow assimilation of knowledge.",
                "5": "Moderate intelligence, basic comprehension skills.",
                "6": "Average intelligence, sometimes slowness.",
                "7": "Above average, good analytical skills.",
                "8": "Strong intelligence, good problem-solving skills.",
                "9": "Very good intelligence, quick adaptation.",
                "10": "Excellent intelligence, logical and quick-witted.",
                "11": "High intelligence, inventive approach.",
                "12": "Extraordinary intelligence, deep understanding.",
                "13": "Outstanding intelligence, brilliant ideas.",
                "14": "Powerful intellect, exceptional abilities.",
                "15": "Huge intelligence, outstanding results.",
                "16": "Invincible intellect, difficult tasks are possible.",
                "17": "The power of intelligence, innovative thinking.",
                "18": "Epoch-making intelligence, changes perceptions.",
                "19": "Legendary intelligence, unique insight.",
                "20": "Absolute intelligence, the embodiment of genius."
            },
            "charisma": {
                "0": "A complete lack of charisma.",
                "1": "Minimal attractiveness, does not attract attention.",
                "2": "Very low charisma, barely noticeable.",
                "3": "Weak charisma, sometimes arouses interest.",
                "4": "Below average, rarely inspiring.",
                "5": "Moderate charisma, you can listen.",
                "6": "Average charisma, sometimes cheers up.",
                "7": "Above average, attracts attention.",
                "8": "Strong charisma, knows how to captivate.",
                "9": "Very good charisma, trustworthy.",
                "10": "Excellent charisma, able to inspire.",
                "11": "High charisma, easily wins sympathy.",
                "12": "Extraordinary charisma, memorable.",
                "13": "Outstanding charisma, a magnet for people.",
                "14": "Powerful charisma, exceptional influence.",
                "15": "Huge charisma, easily controls attention.",
                "16": "Invincible charisma becomes the center of attention.",
                "17": "The power of charisma attracts to itself.",
                "18": "Epochal charisma, changes the environment.",
                "19": "The legendary charisma remains in the memory.",
                "20": "Absolute charisma, the embodiment of attractiveness."
            }
        },
        "inside_shop": {
            "info": "📦 Interested in the product? Then take a look at it for yourself! \n\n",
            "down": "_Products are updated once a day, we recommend updating the hoarder's message before buying_",
            "item": "🥥 Item: {name}\n🔑 In stock: {col}\n🪙 Price (for 1): {price}",
            "no_item": "🧨 This item is no longer sold by the Borahshchik! Refresh the store page",
            "count": "🥕 Specify how many items you want to buy or choose an option from the list below",
            "False": "👁 Not enough coins or the item is no longer sold in this form or quantity!",
            "True": "🎟 Item added to inventory! Congratulations on your purchase!"
        },
        "no_talk": {
            "info": "❗ Choose whether to disable self-talk",
            "True": "🔧 The dinosaur will no longer write to you on its own!",
            "False": "🔧 Dinosaur can now write to you on his own!"
        },
        "edit_friend_name": "🎨 Enter a new name for {name} or \"{none}\" to reset.",
        "edit_nick": "🎨 Enter a new nickname that will be visible to everyone in the bot ->\n🪙 Cost: 7500",
        "null_nick": "🎨 A nickname can't be empty! (All complex characters will be replaced with blank ones)",
        "no_coins": "🪙 Not enough coins!",
        "new_nick": "❤ Your new nickname: {nick}",
        "reset_avatar": "📜 Avatar is reset, it will be updated with the last photo in your profile.",
        "search_markets": {
            "text": "🍶 Choose whether you want to find a random store or find a specific one:",
            "random": "🛒 Random Shops",
            "find": "🔍 Find a store",
            "no_markets": "🧨 At the moment, there are no open stores with a similar name.",
            "find_market": "🔍 Enter the name of the store to find it:"
        },
        "transport": {
            "add_dino": "🦈 A dinosaur has been added to an egg for storage!",
            "delete_dino": "💡 A dinosaur was extracted from an egg!",
            "error": "🎈 Dinosaur selection error!",
            "max_dino": "🧨 You already have the maximum number of dinosaurs!"
        },
        "map": {
            "text": "🧠 Choose which location to go to:"
        },
        "minigames_drive": {
            "error_handler_waiter": "🎈 There was an error searching for minigame data, try replying to the main message of the minigame or use the command {command}"
        },
        "lottery": {
            "cap": "*🦕 |* The *in-game items* giveaway begins! \n\nParticipants can *All Bot Players*, and to try your luck, you just need to click on the button below. No risks, just a chance to get something delicious! \n\n",
            "prizes_text": "*🎁 | And here are our prizes:* \n",
            "time_end_text": "\n🕒 | The giveaway started at {now_time} and will end at {time_text}",
            "end_text": "\n*🕒 |* The draw is over, thank you all for participating! A message with the winners can be found below!",
            "button": "🎁 Participate ({user_now} / {max_users})",
            "lottery_full": "👥 The maximum number of people is already participating in the lottery!",
            "lottery_not_found": "❌ Lottery not found!",
            "lottery_member_exist": "❌ You are already participating in this lottery!",
            "lottery_member_created": "✅ Now you are participating in the giveaway!",
            "winners_cap": "🪙 | The draw is over! And here are our lucky ones who have already received their prizes! \n\n",
            "winners_footer": "\n🎉 | Thank you all for participating in the giveaway!",
            "user_cap": "♾️ | Congratulations, you have become one of the winners of the draw! \n\n🎁 | You have obtained: \n"
        },
        "custom_book": {
            "confirm_edit": "📜 | Are you sure you want to change the book? If there was any text in the book before - it will be lost forever!"
        }
    }
}